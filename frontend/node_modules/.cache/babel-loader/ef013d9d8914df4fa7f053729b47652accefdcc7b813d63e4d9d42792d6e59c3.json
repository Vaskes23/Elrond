{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Form group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/form-group\n */\nexport const FormGroup = props => {\n  const {\n    children,\n    className,\n    contentClassName,\n    disabled,\n    fill,\n    helperText,\n    inline,\n    intent,\n    label,\n    labelFor,\n    labelInfo,\n    style,\n    subLabel,\n    ...htmlProps\n  } = props;\n  const classes = classNames(Classes.FORM_GROUP, Classes.intentClass(intent), {\n    [Classes.DISABLED]: disabled,\n    [Classes.FILL]: fill,\n    [Classes.INLINE]: inline\n  }, className);\n  return _jsxs(\"div\", {\n    className: classes,\n    style: style,\n    ...htmlProps,\n    children: [label && _jsxs(\"label\", {\n      className: Classes.LABEL,\n      htmlFor: labelFor,\n      children: [label, \" \", _jsx(\"span\", {\n        className: Classes.TEXT_MUTED,\n        children: labelInfo\n      })]\n    }), subLabel && _jsx(\"div\", {\n      className: Classes.FORM_GROUP_SUB_LABEL,\n      children: subLabel\n    }), _jsxs(\"div\", {\n      className: classNames(Classes.FORM_CONTENT, contentClassName),\n      children: [children, helperText && _jsx(\"div\", {\n        className: Classes.FORM_HELPER_TEXT,\n        children: helperText\n      })]\n    })]\n  });\n};\nFormGroup.displayName = `${DISPLAYNAME_PREFIX}.FormGroup`;","map":{"version":3,"names":["classNames","Classes","DISPLAYNAME_PREFIX","FormGroup","props","children","className","contentClassName","disabled","fill","helperText","inline","intent","label","labelFor","labelInfo","style","subLabel","htmlProps","classes","FORM_GROUP","intentClass","DISABLED","FILL","INLINE","_jsxs","LABEL","htmlFor","_jsx","TEXT_MUTED","FORM_GROUP_SUB_LABEL","FORM_CONTENT","FORM_HELPER_TEXT","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/forms/formGroup.tsx"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { Classes, type Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type IntentProps, type Props } from \"../../common/props\";\n\nexport interface FormGroupProps extends IntentProps, Props, HTMLDivProps {\n    /** Group contents. */\n    children?: React.ReactNode;\n\n    /**\n     * A space-delimited list of class names to pass along to the\n     * `Classes.FORM_CONTENT` element that contains `children`.\n     */\n    contentClassName?: string;\n\n    /**\n     * Whether form group should appear as non-interactive.\n     * Remember that `input` elements must be disabled separately.\n     */\n    disabled?: boolean;\n\n    /**\n     * Whether the component should take up the full width of its container.\n     */\n    fill?: boolean;\n\n    /**\n     * Optional helper text. The given content will be wrapped in\n     * `Classes.FORM_HELPER_TEXT` and displayed beneath `children`.\n     * Helper text color is determined by the `intent`.\n     */\n    helperText?: React.ReactNode;\n\n    /** Whether to render the label and children on a single line. */\n    inline?: boolean;\n\n    /**\n     * Visual intent to apply to helper text and sub label.\n     * Note that child form elements need to have their own intents applied independently.\n     */\n    intent?: Intent;\n\n    /** Label of this form group. */\n    label?: React.ReactNode;\n\n    /**\n     * `id` attribute of the labelable form element that this `FormGroup` controls,\n     * used as `<label for>` attribute.\n     */\n    labelFor?: string;\n\n    /**\n     * Optional secondary text that appears after the label.\n     */\n    labelInfo?: React.ReactNode;\n\n    /** CSS properties to apply to the root element. */\n    style?: React.CSSProperties;\n\n    /**\n     * Optional text for `label`. The given content will be wrapped in\n     * `Classes.FORM_GROUP_SUB_LABEL` and displayed beneath `label`.\n     */\n    subLabel?: React.ReactNode;\n}\n\n/**\n * Form group component.\n *\n * @see https://blueprintjs.com/docs/#core/components/form-group\n */\nexport const FormGroup: React.FC<FormGroupProps> = props => {\n    const {\n        children,\n        className,\n        contentClassName,\n        disabled,\n        fill,\n        helperText,\n        inline,\n        intent,\n        label,\n        labelFor,\n        labelInfo,\n        style,\n        subLabel,\n        ...htmlProps\n    } = props;\n\n    const classes = classNames(\n        Classes.FORM_GROUP,\n        Classes.intentClass(intent),\n        {\n            [Classes.DISABLED]: disabled,\n            [Classes.FILL]: fill,\n            [Classes.INLINE]: inline,\n        },\n        className,\n    );\n\n    return (\n        <div className={classes} style={style} {...htmlProps}>\n            {label && (\n                <label className={Classes.LABEL} htmlFor={labelFor}>\n                    {label} <span className={Classes.TEXT_MUTED}>{labelInfo}</span>\n                </label>\n            )}\n            {subLabel && <div className={Classes.FORM_GROUP_SUB_LABEL}>{subLabel}</div>}\n            <div className={classNames(Classes.FORM_CONTENT, contentClassName)}>\n                {children}\n                {helperText && <div className={Classes.FORM_HELPER_TEXT}>{helperText}</div>}\n            </div>\n        </div>\n    );\n};\n\nFormGroup.displayName = `${DISPLAYNAME_PREFIX}.FormGroup`;\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,OAAO,QAAqB,cAAc;AACnD,SAASC,kBAAkB,QAAyD,oBAAoB;AA+DxG;;;;;AAKA,OAAO,MAAMC,SAAS,GAA6BC,KAAK,IAAG;EACvD,MAAM;IACFC,QAAQ;IACRC,SAAS;IACTC,gBAAgB;IAChBC,QAAQ;IACRC,IAAI;IACJC,UAAU;IACVC,MAAM;IACNC,MAAM;IACNC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACTC,KAAK;IACLC,QAAQ;IACR,GAAGC;EAAS,CACf,GAAGd,KAAK;EAET,MAAMe,OAAO,GAAGnB,UAAU,CACtBC,OAAO,CAACmB,UAAU,EAClBnB,OAAO,CAACoB,WAAW,CAACT,MAAM,CAAC,EAC3B;IACI,CAACX,OAAO,CAACqB,QAAQ,GAAGd,QAAQ;IAC5B,CAACP,OAAO,CAACsB,IAAI,GAAGd,IAAI;IACpB,CAACR,OAAO,CAACuB,MAAM,GAAGb;GACrB,EACDL,SAAS,CACZ;EAED,OACImB,KAAA;IAAKnB,SAAS,EAAEa,OAAO;IAAEH,KAAK,EAAEA,KAAK;IAAA,GAAME,SAAS;IAAAb,QAAA,GAC/CQ,KAAK,IACFY,KAAA;MAAOnB,SAAS,EAAEL,OAAO,CAACyB,KAAK;MAAEC,OAAO,EAAEb,QAAQ;MAAAT,QAAA,GAC7CQ,KAAK,OAAEe,IAAA;QAAMtB,SAAS,EAAEL,OAAO,CAAC4B,UAAU;QAAAxB,QAAA,EAAGU;MAAS,EAAQ;IAAA,EAEtE,EACAE,QAAQ,IAAIW,IAAA;MAAKtB,SAAS,EAAEL,OAAO,CAAC6B,oBAAoB;MAAAzB,QAAA,EAAGY;IAAQ,EAAO,EAC3EQ,KAAA;MAAKnB,SAAS,EAAEN,UAAU,CAACC,OAAO,CAAC8B,YAAY,EAAExB,gBAAgB,CAAC;MAAAF,QAAA,GAC7DA,QAAQ,EACRK,UAAU,IAAIkB,IAAA;QAAKtB,SAAS,EAAEL,OAAO,CAAC+B,gBAAgB;QAAA3B,QAAA,EAAGK;MAAU,EAAO;IAAA,EACzE;EAAA,EACJ;AAEd,CAAC;AAEDP,SAAS,CAAC8B,WAAW,GAAG,GAAG/B,kBAAkB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}