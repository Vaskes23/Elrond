{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { createElement } from \"react\";\nimport { Classes } from \"../../common\";\nimport { SPINNER_WARN_CLASSES_SIZE } from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\nimport { useValidateProps } from \"../../hooks/useValidateProps\";\nexport var SpinnerSize;\n(function (SpinnerSize) {\n  SpinnerSize[SpinnerSize[\"SMALL\"] = 20] = \"SMALL\";\n  SpinnerSize[SpinnerSize[\"STANDARD\"] = 50] = \"STANDARD\";\n  SpinnerSize[SpinnerSize[\"LARGE\"] = 100] = \"LARGE\";\n})(SpinnerSize || (SpinnerSize = {}));\n// see http://stackoverflow.com/a/18473154/3124288 for calculating arc path\nconst R = 45;\nconst SPINNER_TRACK = `M 50,50 m 0,-${R} a ${R},${R} 0 1 1 0,${R * 2} a ${R},${R} 0 1 1 0,-${R * 2}`;\n// unitless total length of SVG path, to which stroke-dash* properties are relative.\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength\n// this value is the result of `<path d={SPINNER_TRACK} />.getTotalLength()` and works in all browsers:\nconst PATH_LENGTH = 280;\nconst MIN_SIZE = 10;\nconst STROKE_WIDTH = 4;\nconst MIN_STROKE_WIDTH = 16;\n/**\n * Spinner component.\n *\n * @see https://blueprintjs.com/docs/#core/components/spinner\n */\nexport const Spinner = props => {\n  const {\n    className = \"\",\n    intent,\n    value,\n    tagName = \"div\",\n    size,\n    ...htmlProps\n  } = props;\n  useValidateProps(() => {\n    const isSizePropSet = size != null;\n    const isSizeClassSet = className.indexOf(Classes.SMALL) >= 0 || className.indexOf(Classes.LARGE) >= 0;\n    if (isSizePropSet && isSizeClassSet) {\n      console.warn(SPINNER_WARN_CLASSES_SIZE);\n    }\n  }, [className, size]);\n  const sizePx = getSize(size, className);\n  // keep spinner track width consistent at all sizes (down to about 10px).\n  const strokeWidth = Math.min(MIN_STROKE_WIDTH, STROKE_WIDTH * SpinnerSize.LARGE / sizePx);\n  const strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : clamp(value, 0, 1));\n  const classes = classNames(Classes.SPINNER, Classes.intentClass(intent), {\n    [Classes.SPINNER_NO_SPIN]: value != null\n  }, className);\n  // multiple DOM elements around SVG are necessary to properly isolate animation:\n  // - SVG elements in IE do not support anim/trans so they must be set on a parent HTML element.\n  // - SPINNER_ANIMATION isolates svg from parent display and is always centered inside root element.\n  return createElement(tagName, {\n    \"aria-label\": \"loading\",\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": value === undefined ? undefined : value * 100,\n    className: classes,\n    role: \"progressbar\",\n    ...htmlProps\n  }, createElement(tagName, {\n    className: Classes.SPINNER_ANIMATION\n  }, _jsxs(\"svg\", {\n    width: sizePx,\n    height: sizePx,\n    strokeWidth: strokeWidth.toFixed(2),\n    viewBox: getViewBox(strokeWidth),\n    children: [_jsx(\"path\", {\n      className: Classes.SPINNER_TRACK,\n      d: SPINNER_TRACK\n    }), _jsx(\"path\", {\n      className: Classes.SPINNER_HEAD,\n      d: SPINNER_TRACK,\n      pathLength: PATH_LENGTH,\n      strokeDasharray: `${PATH_LENGTH} ${PATH_LENGTH}`,\n      strokeDashoffset: strokeOffset\n    })]\n  })));\n};\nSpinner.displayName = `${DISPLAYNAME_PREFIX}.Spinner`;\n/**\n * Resolve size to a pixel value.\n * Size can be set by className, props, default, or minimum constant.\n */\nconst getSize = (size, className) => {\n  if (size == null) {\n    if (className.indexOf(Classes.SMALL) >= 0) {\n      return SpinnerSize.SMALL;\n    } else if (className.indexOf(Classes.LARGE) >= 0) {\n      return SpinnerSize.LARGE;\n    }\n    return SpinnerSize.STANDARD;\n  }\n  return Math.max(MIN_SIZE, size);\n};\n/** Compute viewbox such that stroked track sits exactly at edge of image frame. */\nconst getViewBox = strokeWidth => {\n  const radius = R + strokeWidth / 2;\n  const viewBoxX = (50 - radius).toFixed(2);\n  const viewBoxWidth = (radius * 2).toFixed(2);\n  return `${viewBoxX} ${viewBoxX} ${viewBoxWidth} ${viewBoxWidth}`;\n};","map":{"version":3,"names":["classNames","createElement","Classes","SPINNER_WARN_CLASSES_SIZE","DISPLAYNAME_PREFIX","clamp","useValidateProps","SpinnerSize","R","SPINNER_TRACK","PATH_LENGTH","MIN_SIZE","STROKE_WIDTH","MIN_STROKE_WIDTH","Spinner","props","className","intent","value","tagName","size","htmlProps","isSizePropSet","isSizeClassSet","indexOf","SMALL","LARGE","console","warn","sizePx","getSize","strokeWidth","Math","min","strokeOffset","classes","SPINNER","intentClass","SPINNER_NO_SPIN","undefined","role","SPINNER_ANIMATION","_jsxs","width","height","toFixed","viewBox","getViewBox","children","_jsx","d","SPINNER_HEAD","pathLength","strokeDasharray","strokeDashoffset","displayName","STANDARD","max","radius","viewBoxX","viewBoxWidth"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/spinner/spinner.tsx"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { createElement } from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { SPINNER_WARN_CLASSES_SIZE } from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, type IntentProps, type Props } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\nimport { useValidateProps } from \"../../hooks/useValidateProps\";\n\nexport enum SpinnerSize {\n    SMALL = 20,\n    STANDARD = 50,\n    LARGE = 100,\n}\n\n// see http://stackoverflow.com/a/18473154/3124288 for calculating arc path\nconst R = 45;\nconst SPINNER_TRACK = `M 50,50 m 0,-${R} a ${R},${R} 0 1 1 0,${R * 2} a ${R},${R} 0 1 1 0,-${R * 2}`;\n\n// unitless total length of SVG path, to which stroke-dash* properties are relative.\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pathLength\n// this value is the result of `<path d={SPINNER_TRACK} />.getTotalLength()` and works in all browsers:\nconst PATH_LENGTH = 280;\n\nconst MIN_SIZE = 10;\nconst STROKE_WIDTH = 4;\nconst MIN_STROKE_WIDTH = 16;\n\nexport interface SpinnerProps<T extends HTMLElement = HTMLElement> extends Props, IntentProps, React.HTMLAttributes<T> {\n    /**\n     * Width and height of the spinner in pixels. The size cannot be less than\n     * 10px.\n     *\n     * Constants are available for common sizes:\n     * - `SpinnerSize.SMALL = 20px`\n     * - `SpinnerSize.STANDARD = 50px`\n     * - `SpinnerSize.LARGE = 100px`\n     *\n     * @default SpinnerSize.STANDARD = 50\n     */\n    size?: number;\n\n    /**\n     * HTML tag for the two wrapper elements. If rendering a `<Spinner>` inside\n     * an `<svg>`, change this to an SVG element like `\"g\"`.\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof React.JSX.IntrinsicElements;\n\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1 respectively.\n     * Omitting this prop will result in an \"indeterminate\" spinner where the head spins indefinitely.\n     */\n    value?: number;\n}\n\n/**\n * Spinner component.\n *\n * @see https://blueprintjs.com/docs/#core/components/spinner\n */\nexport const Spinner: React.FC<SpinnerProps> = props => {\n    const { className = \"\", intent, value, tagName = \"div\", size, ...htmlProps } = props;\n\n    useValidateProps(() => {\n        const isSizePropSet = size != null;\n        const isSizeClassSet = className.indexOf(Classes.SMALL) >= 0 || className.indexOf(Classes.LARGE) >= 0;\n        if (isSizePropSet && isSizeClassSet) {\n            console.warn(SPINNER_WARN_CLASSES_SIZE);\n        }\n    }, [className, size]);\n\n    const sizePx = getSize(size, className);\n\n    // keep spinner track width consistent at all sizes (down to about 10px).\n    const strokeWidth = Math.min(MIN_STROKE_WIDTH, (STROKE_WIDTH * SpinnerSize.LARGE) / sizePx);\n    const strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : clamp(value, 0, 1));\n\n    const classes = classNames(\n        Classes.SPINNER,\n        Classes.intentClass(intent),\n        { [Classes.SPINNER_NO_SPIN]: value != null },\n        className,\n    );\n\n    // multiple DOM elements around SVG are necessary to properly isolate animation:\n    // - SVG elements in IE do not support anim/trans so they must be set on a parent HTML element.\n    // - SPINNER_ANIMATION isolates svg from parent display and is always centered inside root element.\n    return createElement(\n        tagName,\n        {\n            \"aria-label\": \"loading\",\n            \"aria-valuemax\": 100,\n            \"aria-valuemin\": 0,\n            \"aria-valuenow\": value === undefined ? undefined : value * 100,\n            className: classes,\n            role: \"progressbar\",\n            ...htmlProps,\n        },\n        createElement(\n            tagName,\n            { className: Classes.SPINNER_ANIMATION },\n            <svg width={sizePx} height={sizePx} strokeWidth={strokeWidth.toFixed(2)} viewBox={getViewBox(strokeWidth)}>\n                <path className={Classes.SPINNER_TRACK} d={SPINNER_TRACK} />\n                <path\n                    className={Classes.SPINNER_HEAD}\n                    d={SPINNER_TRACK}\n                    pathLength={PATH_LENGTH}\n                    strokeDasharray={`${PATH_LENGTH} ${PATH_LENGTH}`}\n                    strokeDashoffset={strokeOffset}\n                />\n            </svg>,\n        ),\n    );\n};\n\nSpinner.displayName = `${DISPLAYNAME_PREFIX}.Spinner`;\n\n/**\n * Resolve size to a pixel value.\n * Size can be set by className, props, default, or minimum constant.\n */\nconst getSize = (size: number | undefined, className: string): number => {\n    if (size == null) {\n        if (className.indexOf(Classes.SMALL) >= 0) {\n            return SpinnerSize.SMALL;\n        } else if (className.indexOf(Classes.LARGE) >= 0) {\n            return SpinnerSize.LARGE;\n        }\n        return SpinnerSize.STANDARD;\n    }\n    return Math.max(MIN_SIZE, size);\n};\n\n/** Compute viewbox such that stroked track sits exactly at edge of image frame. */\nconst getViewBox = (strokeWidth: number): string => {\n    const radius = R + strokeWidth / 2;\n    const viewBoxX = (50 - radius).toFixed(2);\n    const viewBoxWidth = (radius * 2).toFixed(2);\n    return `${viewBoxX} ${viewBoxX} ${viewBoxWidth} ${viewBoxWidth}`;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}