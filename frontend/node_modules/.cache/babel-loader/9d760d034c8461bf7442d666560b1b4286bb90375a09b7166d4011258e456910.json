{"ast":null,"code":"import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { IconSize } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { ensureElement } from \"../../common/utils\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nexport var NonIdealStateIconSize;\n(function (NonIdealStateIconSize) {\n  NonIdealStateIconSize[NonIdealStateIconSize[\"STANDARD\"] = 48] = \"STANDARD\";\n  NonIdealStateIconSize[NonIdealStateIconSize[\"SMALL\"] = 32] = \"SMALL\";\n  NonIdealStateIconSize[NonIdealStateIconSize[\"EXTRA_SMALL\"] = 20] = \"EXTRA_SMALL\";\n})(NonIdealStateIconSize || (NonIdealStateIconSize = {}));\n/**\n * Non-ideal state component.\n *\n * @see https://blueprintjs.com/docs/#core/components/non-ideal-state\n */\nexport class NonIdealState extends AbstractPureComponent {\n  render() {\n    const {\n      action,\n      children,\n      className,\n      layout\n    } = this.props;\n    return _jsxs(\"div\", {\n      className: classNames(Classes.NON_IDEAL_STATE, `${Classes.NON_IDEAL_STATE}-${layout}`, className),\n      children: [this.maybeRenderVisual(), this.maybeRenderText(), action, children]\n    });\n  }\n  maybeRenderVisual() {\n    const {\n      icon,\n      iconMuted,\n      iconSize\n    } = this.props;\n    if (icon == null) {\n      return undefined;\n    } else {\n      return _jsx(\"div\", {\n        className: Classes.NON_IDEAL_STATE_VISUAL,\n        style: {\n          fontSize: `${iconSize}px`,\n          lineHeight: `${iconSize}px`\n        },\n        children: _jsx(Icon, {\n          className: classNames({\n            [Classes.ICON_MUTED]: iconMuted\n          }),\n          icon: icon,\n          size: iconSize,\n          \"aria-hidden\": true,\n          tabIndex: -1\n        })\n      });\n    }\n  }\n  maybeRenderText() {\n    const {\n      description,\n      title\n    } = this.props;\n    if (title == null && description == null) {\n      return undefined;\n    } else {\n      return _jsxs(\"div\", {\n        className: Classes.NON_IDEAL_STATE_TEXT,\n        children: [title && _jsx(H4, {\n          children: title\n        }), description && ensureElement(description, \"div\")]\n      });\n    }\n  }\n}\nNonIdealState.displayName = `${DISPLAYNAME_PREFIX}.NonIdealState`;\nNonIdealState.defaultProps = {\n  iconMuted: true,\n  iconSize: NonIdealStateIconSize.STANDARD,\n  layout: \"vertical\"\n};","map":{"version":3,"names":["classNames","IconSize","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","ensureElement","H4","Icon","NonIdealStateIconSize","NonIdealState","render","action","children","className","layout","props","_jsxs","NON_IDEAL_STATE","maybeRenderVisual","maybeRenderText","icon","iconMuted","iconSize","undefined","_jsx","NON_IDEAL_STATE_VISUAL","style","fontSize","lineHeight","ICON_MUTED","size","tabIndex","description","title","NON_IDEAL_STATE_TEXT","displayName","defaultProps","STANDARD"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/non-ideal-state/nonIdealState.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { type IconName, IconSize } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, type MaybeElement, type Props } from \"../../common\";\nimport { ensureElement } from \"../../common/utils\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\nexport enum NonIdealStateIconSize {\n    STANDARD = IconSize.STANDARD * 3,\n    SMALL = IconSize.STANDARD * 2,\n    EXTRA_SMALL = IconSize.LARGE,\n}\n\nexport interface NonIdealStateProps extends Props {\n    /** An action to resolve the non-ideal state which appears after `description`. */\n    action?: React.JSX.Element;\n\n    /**\n     * Advanced usage: React `children` will appear last (after `action`).\n     * Avoid passing raw strings as they will not receive margins and disrupt the layout flow.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * A longer description of the non-ideal state.\n     * A string or number value will be wrapped in a `<div>` to preserve margins.\n     */\n    description?: React.ReactNode;\n\n    /** The name of a Blueprint icon or a JSX element (such as `<Spinner/>`) to render above the title. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * How large the icon visual should be.\n     *\n     * @default NonIdealStateIconSize.STANDARD\n     */\n    iconSize?: NonIdealStateIconSize;\n\n    /**\n     * Whether the icon should use a muted style.\n     *\n     * @default true\n     */\n    iconMuted?: boolean;\n\n    /**\n     * Component layout, either vertical or horizontal.\n     *\n     * @default \"vertical\"\n     */\n    layout?: \"vertical\" | \"horizontal\";\n\n    /** The title of the non-ideal state. */\n    title?: React.ReactNode;\n}\n\n/**\n * Non-ideal state component.\n *\n * @see https://blueprintjs.com/docs/#core/components/non-ideal-state\n */\nexport class NonIdealState extends AbstractPureComponent<NonIdealStateProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.NonIdealState`;\n\n    public static defaultProps: Partial<NonIdealStateProps> = {\n        iconMuted: true,\n        iconSize: NonIdealStateIconSize.STANDARD,\n        layout: \"vertical\",\n    };\n\n    public render() {\n        const { action, children, className, layout } = this.props;\n\n        return (\n            <div className={classNames(Classes.NON_IDEAL_STATE, `${Classes.NON_IDEAL_STATE}-${layout}`, className)}>\n                {this.maybeRenderVisual()}\n                {this.maybeRenderText()}\n                {action}\n                {children}\n            </div>\n        );\n    }\n\n    private maybeRenderVisual() {\n        const { icon, iconMuted, iconSize } = this.props;\n        if (icon == null) {\n            return undefined;\n        } else {\n            return (\n                <div\n                    className={Classes.NON_IDEAL_STATE_VISUAL}\n                    style={{ fontSize: `${iconSize}px`, lineHeight: `${iconSize}px` }}\n                >\n                    <Icon\n                        className={classNames({ [Classes.ICON_MUTED]: iconMuted })}\n                        icon={icon}\n                        size={iconSize}\n                        aria-hidden={true}\n                        tabIndex={-1}\n                    />\n                </div>\n            );\n        }\n    }\n\n    private maybeRenderText() {\n        const { description, title } = this.props;\n        if (title == null && description == null) {\n            return undefined;\n        } else {\n            return (\n                <div className={Classes.NON_IDEAL_STATE_TEXT}>\n                    {title && <H4>{title}</H4>}\n                    {description && ensureElement(description, \"div\")}\n                </div>\n            );\n        }\n    }\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAAwBC,QAAQ,QAAQ,oBAAoB;AAE5D,SAASC,qBAAqB,EAAEC,OAAO,EAAEC,kBAAkB,QAAuC,cAAc;AAChH,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,EAAE,QAAQ,cAAc;AACjC,SAASC,IAAI,QAAQ,cAAc;AAEnC,WAAYC,qBAIX;AAJD,WAAYA,qBAAqB;EAC7BA,qBAAA,CAAAA,qBAAA,+BAAgC;EAChCA,qBAAA,CAAAA,qBAAA,yBAA6B;EAC7BA,qBAAA,CAAAA,qBAAA,qCAA4B;AAChC,CAAC,EAJWA,qBAAqB,KAArBA,qBAAqB;AAkDjC;;;;;AAKA,OAAM,MAAOC,aAAc,SAAQP,qBAAyC;EASjEQ,MAAMA,CAAA;IACT,MAAM;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,SAAS;MAAEC;IAAM,CAAE,GAAG,IAAI,CAACC,KAAK;IAE1D,OACIC,KAAA;MAAKH,SAAS,EAAEb,UAAU,CAACG,OAAO,CAACc,eAAe,EAAE,GAAGd,OAAO,CAACc,eAAe,IAAIH,MAAM,EAAE,EAAED,SAAS,CAAC;MAAAD,QAAA,GACjG,IAAI,CAACM,iBAAiB,EAAE,EACxB,IAAI,CAACC,eAAe,EAAE,EACtBR,MAAM,EACNC,QAAQ;IAAA,EACP;EAEd;EAEQM,iBAAiBA,CAAA;IACrB,MAAM;MAAEE,IAAI;MAAEC,SAAS;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACP,KAAK;IAChD,IAAIK,IAAI,IAAI,IAAI,EAAE;MACd,OAAOG,SAAS;IACpB,CAAC,MAAM;MACH,OACIC,IAAA;QACIX,SAAS,EAAEV,OAAO,CAACsB,sBAAsB;QACzCC,KAAK,EAAE;UAAEC,QAAQ,EAAE,GAAGL,QAAQ,IAAI;UAAEM,UAAU,EAAE,GAAGN,QAAQ;QAAI,CAAE;QAAAV,QAAA,EAEjEY,IAAA,CAACjB,IAAI;UACDM,SAAS,EAAEb,UAAU,CAAC;YAAE,CAACG,OAAO,CAAC0B,UAAU,GAAGR;UAAS,CAAE,CAAC;UAC1DD,IAAI,EAAEA,IAAI;UACVU,IAAI,EAAER,QAAQ;UAAA,eACD,IAAI;UACjBS,QAAQ,EAAE,CAAC;QAAC;MACd,EACA;IAEd;EACJ;EAEQZ,eAAeA,CAAA;IACnB,MAAM;MAAEa,WAAW;MAAEC;IAAK,CAAE,GAAG,IAAI,CAAClB,KAAK;IACzC,IAAIkB,KAAK,IAAI,IAAI,IAAID,WAAW,IAAI,IAAI,EAAE;MACtC,OAAOT,SAAS;IACpB,CAAC,MAAM;MACH,OACIP,KAAA;QAAKH,SAAS,EAAEV,OAAO,CAAC+B,oBAAoB;QAAAtB,QAAA,GACvCqB,KAAK,IAAIT,IAAA,CAAClB,EAAE;UAAAM,QAAA,EAAEqB;QAAK,EAAM,EACzBD,WAAW,IAAI3B,aAAa,CAAC2B,WAAW,EAAE,KAAK,CAAC;MAAA,EAC/C;IAEd;EACJ;;AAvDcvB,aAAA,CAAA0B,WAAW,GAAG,GAAG/B,kBAAkB,gBAAgB;AAEnDK,aAAA,CAAA2B,YAAY,GAAgC;EACtDf,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAEd,qBAAqB,CAAC6B,QAAQ;EACxCvB,MAAM,EAAE;CACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}