{"ast":null,"code":"import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { createRef } from \"react\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, mergeRefs } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { Overlay2, OVERLAY2_DEFAULT_PROPS } from \"../overlay2/overlay2\";\n/**\n * Dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog\n */\nexport class Dialog extends AbstractPureComponent {\n  constructor(props) {\n    super(props);\n    this.childRef = createRef();\n    const id = uniqueId(\"bp-dialog\");\n    this.titleId = `title-${id}`;\n  }\n  render() {\n    var _a;\n    const {\n      className,\n      children,\n      containerRef,\n      style,\n      title,\n      role = \"dialog\",\n      ...overlayProps\n    } = this.props;\n    return _jsx(Overlay2, {\n      ...overlayProps,\n      className: Classes.OVERLAY_SCROLL_CONTAINER,\n      childRef: this.childRef,\n      hasBackdrop: true,\n      children: _jsx(\"div\", {\n        className: Classes.DIALOG_CONTAINER,\n        ref: mergeRefs(containerRef, this.childRef),\n        children: _jsxs(\"div\", {\n          className: classNames(Classes.DIALOG, className),\n          role: role,\n          \"aria-modal\": (_a = overlayProps.enforceFocus) !== null && _a !== void 0 ? _a : OVERLAY2_DEFAULT_PROPS.enforceFocus,\n          \"aria-labelledby\": this.props[\"aria-labelledby\"] || (title ? this.titleId : undefined),\n          \"aria-describedby\": this.props[\"aria-describedby\"],\n          style: style,\n          children: [this.maybeRenderHeader(), children]\n        })\n      })\n    });\n  }\n  validateProps(props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n  }\n  maybeRenderCloseButton() {\n    // show close button if prop is undefined or null\n    // this gives us a behavior as if the default value were `true`\n    if (this.props.isCloseButtonShown !== false) {\n      return _jsx(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: _jsx(SmallCross, {\n          size: IconSize.STANDARD\n        }),\n        onClick: this.props.onClose,\n        variant: \"minimal\"\n      });\n    } else {\n      return undefined;\n    }\n  }\n  maybeRenderHeader() {\n    const {\n      icon,\n      title\n    } = this.props;\n    if (title == null) {\n      return undefined;\n    }\n    return _jsxs(\"div\", {\n      className: Classes.DIALOG_HEADER,\n      children: [_jsx(Icon, {\n        icon: icon,\n        size: IconSize.STANDARD,\n        \"aria-hidden\": true,\n        tabIndex: -1\n      }), _jsx(H6, {\n        id: this.titleId,\n        children: title\n      }), this.maybeRenderCloseButton()]\n    });\n  }\n}\nDialog.defaultProps = {\n  canOutsideClickClose: true,\n  isOpen: false\n};\nDialog.displayName = `${DISPLAYNAME_PREFIX}.Dialog`;","map":{"version":3,"names":["classNames","createRef","IconSize","SmallCross","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","mergeRefs","Errors","uniqueId","Button","H6","Icon","Overlay2","OVERLAY2_DEFAULT_PROPS","Dialog","constructor","props","childRef","id","titleId","render","className","children","containerRef","style","title","role","overlayProps","_jsx","OVERLAY_SCROLL_CONTAINER","hasBackdrop","DIALOG_CONTAINER","ref","_jsxs","DIALOG","_a","enforceFocus","undefined","maybeRenderHeader","validateProps","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","maybeRenderCloseButton","DIALOG_CLOSE_BUTTON","size","STANDARD","onClick","onClose","variant","DIALOG_HEADER","tabIndex","defaultProps","canOutsideClickClose","isOpen","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/dialog/dialog.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { createRef } from \"react\";\n\nimport { type IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport {\n    AbstractPureComponent,\n    Classes,\n    DISPLAYNAME_PREFIX,\n    type MaybeElement,\n    mergeRefs,\n    type Props,\n} from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { uniqueId } from \"../../common/utils\";\nimport { Button } from \"../button/buttons\";\nimport { H6 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport type { BackdropProps, OverlayableProps } from \"../overlay/overlayProps\";\nimport { Overlay2, OVERLAY2_DEFAULT_PROPS } from \"../overlay2/overlay2\";\n\nexport interface DialogProps extends OverlayableProps, BackdropProps, Props {\n    /** Dialog contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Dialog always has a backdrop so this prop cannot be overriden.\n     */\n    hasBackdrop?: never;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * dialog's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * @default \"dialog\"\n     */\n    role?: Extract<React.AriaRole, \"dialog\" | \"alertdialog\">;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n\n    /**\n     * Ref attached to the `Classes.DIALOG_CONTAINER` element.\n     */\n    containerRef?: React.Ref<HTMLDivElement>;\n\n    /**\n     * ID of the element that contains title or label text for this dialog.\n     *\n     * By default, if the `title` prop is supplied, this component will generate\n     * a unique ID for the `<H5>` title element and use that ID here.\n     */\n    \"aria-labelledby\"?: string;\n\n    /**\n     * ID of an element that contains description text inside this dialog.\n     */\n    \"aria-describedby\"?: string;\n}\n\n/**\n * Dialog component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog\n */\nexport class Dialog extends AbstractPureComponent<DialogProps> {\n    public static defaultProps: DialogProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n    };\n\n    private childRef = createRef<HTMLDivElement>();\n\n    private titleId: string;\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Dialog`;\n\n    public constructor(props: DialogProps) {\n        super(props);\n\n        const id = uniqueId(\"bp-dialog\");\n        this.titleId = `title-${id}`;\n    }\n\n    public render() {\n        const { className, children, containerRef, style, title, role = \"dialog\", ...overlayProps } = this.props;\n\n        return (\n            <Overlay2\n                {...overlayProps}\n                className={Classes.OVERLAY_SCROLL_CONTAINER}\n                childRef={this.childRef}\n                hasBackdrop={true}\n            >\n                <div className={Classes.DIALOG_CONTAINER} ref={mergeRefs(containerRef, this.childRef)}>\n                    <div\n                        className={classNames(Classes.DIALOG, className)}\n                        role={role}\n                        aria-modal={overlayProps.enforceFocus ?? OVERLAY2_DEFAULT_PROPS.enforceFocus}\n                        aria-labelledby={this.props[\"aria-labelledby\"] || (title ? this.titleId : undefined)}\n                        aria-describedby={this.props[\"aria-describedby\"]}\n                        style={style}\n                    >\n                        {this.maybeRenderHeader()}\n                        {children}\n                    </div>\n                </div>\n            </Overlay2>\n        );\n    }\n\n    protected validateProps(props: DialogProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // show close button if prop is undefined or null\n        // this gives us a behavior as if the default value were `true`\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<SmallCross size={IconSize.STANDARD} />}\n                    onClick={this.props.onClose}\n                    variant=\"minimal\"\n                />\n            );\n        } else {\n            return undefined;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return undefined;\n        }\n        return (\n            <div className={Classes.DIALOG_HEADER}>\n                <Icon icon={icon} size={IconSize.STANDARD} aria-hidden={true} tabIndex={-1} />\n                <H6 id={this.titleId}>{title}</H6>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}