{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { createRef } from \"react\";\nimport { AbstractPureComponent, DISPLAYNAME_PREFIX } from \"../../common\";\nimport * as Classes from \"../../common/classes\";\n// eslint-disable-next-line import/no-cycle\nimport { Popover } from \"../popover/popover\";\nimport { TOOLTIP_ARROW_SVG_SIZE } from \"../popover/popoverArrow\";\nimport { TooltipContext, TooltipProvider } from \"../popover/tooltipContext\";\n/**\n * Tooltip component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tooltip\n */\nexport class Tooltip extends AbstractPureComponent {\n  constructor() {\n    super(...arguments);\n    this.popoverRef = createRef();\n    // any descendant ContextMenus may update this ctxState\n    this.renderPopover = ctxState => {\n      var _a;\n      const {\n        children,\n        compact,\n        disabled,\n        intent,\n        popoverClassName,\n        ...restProps\n      } = this.props;\n      const popoverClasses = classNames(Classes.TOOLTIP, Classes.intentClass(intent), popoverClassName, {\n        [Classes.COMPACT]: compact\n      });\n      return _jsx(Popover, {\n        modifiers: {\n          arrow: {\n            enabled: !this.props.minimal\n          },\n          offset: {\n            options: {\n              offset: [0, TOOLTIP_ARROW_SVG_SIZE / 2]\n            }\n          }\n        },\n        ...restProps,\n        autoFocus: false,\n        canEscapeKeyClose: false,\n        disabled: (_a = ctxState.forceDisabled) !== null && _a !== void 0 ? _a : disabled,\n        enforceFocus: false,\n        lazy: true,\n        popoverClassName: popoverClasses,\n        portalContainer: this.props.portalContainer,\n        ref: this.popoverRef,\n        children: children\n      });\n    };\n  }\n  render() {\n    // if we have an ancestor TooltipContext, we should take its state into account in this render path,\n    // it was likely created by a parent ContextMenu\n    return _jsx(TooltipContext.Consumer, {\n      children: ([state]) => _jsx(TooltipProvider, {\n        ...state,\n        children: this.renderPopover\n      })\n    });\n  }\n  reposition() {\n    var _a;\n    (_a = this.popoverRef.current) === null || _a === void 0 ? void 0 : _a.reposition();\n  }\n}\nTooltip.displayName = `${DISPLAYNAME_PREFIX}.Tooltip`;\nTooltip.defaultProps = {\n  compact: false,\n  hoverCloseDelay: 0,\n  hoverOpenDelay: 100,\n  interactionKind: \"hover-target\",\n  minimal: false,\n  transitionDuration: 100\n};","map":{"version":3,"names":["classNames","createRef","AbstractPureComponent","DISPLAYNAME_PREFIX","Classes","Popover","TOOLTIP_ARROW_SVG_SIZE","TooltipContext","TooltipProvider","Tooltip","constructor","popoverRef","renderPopover","ctxState","children","compact","disabled","intent","popoverClassName","restProps","props","popoverClasses","TOOLTIP","intentClass","COMPACT","_jsx","modifiers","arrow","enabled","minimal","offset","options","autoFocus","canEscapeKeyClose","_a","forceDisabled","enforceFocus","lazy","portalContainer","ref","render","Consumer","state","reposition","current","displayName","defaultProps","hoverCloseDelay","hoverOpenDelay","interactionKind","transitionDuration"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/tooltip/tooltip.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { createRef } from \"react\";\n\nimport { AbstractPureComponent, DISPLAYNAME_PREFIX, type IntentProps } from \"../../common\";\nimport * as Classes from \"../../common/classes\";\n// eslint-disable-next-line import/no-cycle\nimport { Popover, type PopoverInteractionKind } from \"../popover/popover\";\nimport { TOOLTIP_ARROW_SVG_SIZE } from \"../popover/popoverArrow\";\nimport type { DefaultPopoverTargetHTMLProps, PopoverSharedProps } from \"../popover/popoverSharedProps\";\nimport { TooltipContext, type TooltipContextState, TooltipProvider } from \"../popover/tooltipContext\";\n\nexport interface TooltipProps<TProps extends DefaultPopoverTargetHTMLProps = DefaultPopoverTargetHTMLProps>\n    extends Omit<PopoverSharedProps<TProps>, \"shouldReturnFocusOnClose\">,\n        IntentProps {\n    /**\n     * The content that will be displayed inside of the tooltip.\n     */\n    content: React.JSX.Element | string;\n\n    /**\n     * Whether to use a compact appearance, which reduces the visual padding around\n     * tooltip content.\n     *\n     * @default false\n     */\n    compact?: boolean;\n\n    /**\n     * The amount of time in milliseconds the tooltip should remain open after\n     * the user hovers off the trigger. The timer is canceled if the user mouses\n     * over the target before it expires.\n     *\n     * @default 0\n     */\n    hoverCloseDelay?: number;\n\n    /**\n     * The amount of time in milliseconds the tooltip should wait before opening\n     * after the user hovers over the trigger. The timer is canceled if the user\n     * mouses away from the target before it expires.\n     *\n     * @default 100\n     */\n    hoverOpenDelay?: number;\n\n    /**\n     * The kind of hover interaction that triggers the display of the tooltip.\n     * Tooltips do not support click interactions.\n     *\n     * @default PopoverInteractionKind.HOVER_TARGET_ONLY\n     */\n    interactionKind?: typeof PopoverInteractionKind.HOVER | typeof PopoverInteractionKind.HOVER_TARGET_ONLY;\n\n    /**\n     * Indicates how long (in milliseconds) the tooltip's appear/disappear\n     * transition takes. This is used by React `CSSTransition` to know when a\n     * transition completes and must match the duration of the animation in CSS.\n     * Only set this prop if you override Blueprint's default transitions with\n     * new transitions of a different length.\n     *\n     * @default 100\n     */\n    transitionDuration?: number;\n}\n\n/**\n * Tooltip component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tooltip\n */\nexport class Tooltip<\n    T extends DefaultPopoverTargetHTMLProps = DefaultPopoverTargetHTMLProps,\n> extends AbstractPureComponent<TooltipProps<T>> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tooltip`;\n\n    public static defaultProps: Partial<TooltipProps> = {\n        compact: false,\n        hoverCloseDelay: 0,\n        hoverOpenDelay: 100,\n        interactionKind: \"hover-target\",\n        minimal: false,\n        transitionDuration: 100,\n    };\n\n    private popoverRef = createRef<Popover<T>>();\n\n    public render() {\n        // if we have an ancestor TooltipContext, we should take its state into account in this render path,\n        // it was likely created by a parent ContextMenu\n        return (\n            <TooltipContext.Consumer>\n                {([state]) => <TooltipProvider {...state}>{this.renderPopover}</TooltipProvider>}\n            </TooltipContext.Consumer>\n        );\n    }\n\n    public reposition() {\n        this.popoverRef.current?.reposition();\n    }\n\n    // any descendant ContextMenus may update this ctxState\n    private renderPopover = (ctxState: TooltipContextState) => {\n        const { children, compact, disabled, intent, popoverClassName, ...restProps } = this.props;\n        const popoverClasses = classNames(Classes.TOOLTIP, Classes.intentClass(intent), popoverClassName, {\n            [Classes.COMPACT]: compact,\n        });\n\n        return (\n            <Popover\n                modifiers={{\n                    arrow: {\n                        enabled: !this.props.minimal,\n                    },\n                    offset: {\n                        options: {\n                            offset: [0, TOOLTIP_ARROW_SVG_SIZE / 2],\n                        },\n                    },\n                }}\n                {...restProps}\n                autoFocus={false}\n                canEscapeKeyClose={false}\n                disabled={ctxState.forceDisabled ?? disabled}\n                enforceFocus={false}\n                lazy={true}\n                popoverClassName={popoverClasses}\n                portalContainer={this.props.portalContainer}\n                ref={this.popoverRef}\n            >\n                {children}\n            </Popover>\n        );\n    };\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,SAAS,QAAQ,OAAO;AAEjC,SAASC,qBAAqB,EAAEC,kBAAkB,QAA0B,cAAc;AAC1F,OAAO,KAAKC,OAAO,MAAM,sBAAsB;AAC/C;AACA,SAASC,OAAO,QAAqC,oBAAoB;AACzE,SAASC,sBAAsB,QAAQ,yBAAyB;AAEhE,SAASC,cAAc,EAA4BC,eAAe,QAAQ,2BAA2B;AAwDrG;;;;;AAKA,OAAM,MAAOC,OAEX,SAAQP,qBAAsC;EAFhDQ,YAAA;;IAcY,KAAAC,UAAU,GAAGV,SAAS,EAAc;IAgB5C;IACQ,KAAAW,aAAa,GAAIC,QAA6B,IAAI;;MACtD,MAAM;QAAEC,QAAQ;QAAEC,OAAO;QAAEC,QAAQ;QAAEC,MAAM;QAAEC,gBAAgB;QAAE,GAAGC;MAAS,CAAE,GAAG,IAAI,CAACC,KAAK;MAC1F,MAAMC,cAAc,GAAGrB,UAAU,CAACI,OAAO,CAACkB,OAAO,EAAElB,OAAO,CAACmB,WAAW,CAACN,MAAM,CAAC,EAAEC,gBAAgB,EAAE;QAC9F,CAACd,OAAO,CAACoB,OAAO,GAAGT;OACtB,CAAC;MAEF,OACIU,IAAA,CAACpB,OAAO;QACJqB,SAAS,EAAE;UACPC,KAAK,EAAE;YACHC,OAAO,EAAE,CAAC,IAAI,CAACR,KAAK,CAACS;WACxB;UACDC,MAAM,EAAE;YACJC,OAAO,EAAE;cACLD,MAAM,EAAE,CAAC,CAAC,EAAExB,sBAAsB,GAAG,CAAC;;;SAGjD;QAAA,GACGa,SAAS;QACba,SAAS,EAAE,KAAK;QAChBC,iBAAiB,EAAE,KAAK;QACxBjB,QAAQ,EAAE,CAAAkB,EAAA,GAAArB,QAAQ,CAACsB,aAAa,cAAAD,EAAA,cAAAA,EAAA,GAAIlB,QAAQ;QAC5CoB,YAAY,EAAE,KAAK;QACnBC,IAAI,EAAE,IAAI;QACVnB,gBAAgB,EAAEG,cAAc;QAChCiB,eAAe,EAAE,IAAI,CAAClB,KAAK,CAACkB,eAAe;QAC3CC,GAAG,EAAE,IAAI,CAAC5B,UAAU;QAAAG,QAAA,EAEnBA;MAAQ,EACH;IAElB,CAAC;EACL;EA/CW0B,MAAMA,CAAA;IACT;IACA;IACA,OACIf,IAAA,CAAClB,cAAc,CAACkC,QAAQ;MAAA3B,QAAA,EACnBA,CAAC,CAAC4B,KAAK,CAAC,KAAKjB,IAAA,CAACjB,eAAe;QAAA,GAAKkC,KAAK;QAAA5B,QAAA,EAAG,IAAI,CAACF;MAAa;IAAmB,EAC1D;EAElC;EAEO+B,UAAUA,CAAA;;IACb,CAAAT,EAAA,OAAI,CAACvB,UAAU,CAACiC,OAAO,cAAAV,EAAA,uBAAAA,EAAA,CAAES,UAAU,EAAE;EACzC;;AAzBclC,OAAA,CAAAoC,WAAW,GAAG,GAAG1C,kBAAkB,UAAU;AAE7CM,OAAA,CAAAqC,YAAY,GAA0B;EAChD/B,OAAO,EAAE,KAAK;EACdgC,eAAe,EAAE,CAAC;EAClBC,cAAc,EAAE,GAAG;EACnBC,eAAe,EAAE,cAAc;EAC/BpB,OAAO,EAAE,KAAK;EACdqB,kBAAkB,EAAE;CACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}