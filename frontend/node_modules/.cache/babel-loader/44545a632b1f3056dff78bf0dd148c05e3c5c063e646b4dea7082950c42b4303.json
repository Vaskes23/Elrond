{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { createElement, forwardRef, useCallback, useEffect, useRef, useState } from \"react\";\nimport { Classes, mergeRefs } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used within this module for `Checkbox`, `Radio`, and `Switch` below.\n */\nconst ControlInternal = forwardRef((props, ref) => {\n  const {\n    alignIndicator,\n    children,\n    className,\n    indicatorChildren,\n    inline,\n    inputRef,\n    label,\n    labelElement,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    large,\n    size = \"medium\",\n    style,\n    type,\n    typeClassName,\n    tagName = \"label\",\n    ...htmlProps\n  } = props;\n  const classes = classNames(Classes.CONTROL, typeClassName, {\n    [Classes.DISABLED]: htmlProps.disabled,\n    [Classes.INLINE]: inline\n  }, Classes.alignmentClass(alignIndicator), Classes.sizeClass(size, {\n    large\n  }), className);\n  return createElement(tagName, {\n    className: classes,\n    ref,\n    style\n  }, _jsx(\"input\", {\n    className: Classes.CONTROL_INPUT,\n    ...htmlProps,\n    ref: inputRef,\n    type: type\n  }), _jsx(\"span\", {\n    className: Classes.CONTROL_INDICATOR,\n    children: indicatorChildren\n  }), label, labelElement, children);\n});\nControlInternal.displayName = `${DISPLAYNAME_PREFIX}.Control`;\n/**\n * Switch component.\n *\n * @see https://blueprintjs.com/docs/#core/components/switch\n */\nexport const Switch = forwardRef((props, ref) => {\n  const {\n    innerLabelChecked,\n    innerLabel,\n    ...controlProps\n  } = props;\n  const switchLabels = innerLabel || innerLabelChecked ? [_jsx(\"div\", {\n    className: Classes.CONTROL_INDICATOR_CHILD,\n    children: _jsx(\"div\", {\n      className: Classes.SWITCH_INNER_TEXT,\n      children: innerLabelChecked ? innerLabelChecked : innerLabel\n    })\n  }, \"checked\"), _jsx(\"div\", {\n    className: Classes.CONTROL_INDICATOR_CHILD,\n    children: _jsx(\"div\", {\n      className: Classes.SWITCH_INNER_TEXT,\n      children: innerLabel\n    })\n  }, \"unchecked\")] : null;\n  return _jsx(ControlInternal, {\n    ...controlProps,\n    indicatorChildren: switchLabels,\n    ref: ref,\n    type: \"checkbox\",\n    typeClassName: Classes.SWITCH\n  });\n});\nSwitch.displayName = `${DISPLAYNAME_PREFIX}.Switch`;\n/**\n * Radio component.\n *\n * @see https://blueprintjs.com/docs/#core/components/radio\n */\nexport const Radio = forwardRef((props, ref) => {\n  return _jsx(ControlInternal, {\n    ...props,\n    ref: ref,\n    type: \"radio\",\n    typeClassName: Classes.RADIO\n  });\n});\nRadio.displayName = `${DISPLAYNAME_PREFIX}.Radio`;\n/**\n * Checkbox component.\n *\n * @see https://blueprintjs.com/docs/#core/components/checkbox\n */\nexport const Checkbox = forwardRef((props, ref) => {\n  const {\n    defaultIndeterminate,\n    indeterminate,\n    onChange,\n    ...controlProps\n  } = props;\n  const [isIndeterminate, setIsIndeterminate] = useState(indeterminate || defaultIndeterminate || false);\n  const localInputRef = useRef(null);\n  const inputRef = mergeRefs(props.inputRef, localInputRef);\n  const handleChange = useCallback(evt => {\n    // update state immediately only if uncontrolled\n    if (indeterminate === undefined) {\n      setIsIndeterminate(evt.target.indeterminate);\n    }\n    // otherwise wait for props change. always invoke handler.\n    onChange === null || onChange === void 0 ? void 0 : onChange(evt);\n  }, [indeterminate, onChange]);\n  useEffect(() => {\n    if (indeterminate !== undefined) {\n      setIsIndeterminate(indeterminate);\n    }\n  }, [indeterminate]);\n  useEffect(() => {\n    if (localInputRef.current != null) {\n      localInputRef.current.indeterminate = isIndeterminate;\n    }\n  }, [localInputRef, isIndeterminate]);\n  return _jsx(ControlInternal, {\n    ...controlProps,\n    inputRef: inputRef,\n    onChange: handleChange,\n    ref: ref,\n    type: \"checkbox\",\n    typeClassName: Classes.CHECKBOX\n  });\n});\nCheckbox.displayName = `${DISPLAYNAME_PREFIX}.Checkbox`;","map":{"version":3,"names":["classNames","createElement","forwardRef","useCallback","useEffect","useRef","useState","Classes","mergeRefs","DISPLAYNAME_PREFIX","ControlInternal","props","ref","alignIndicator","children","className","indicatorChildren","inline","inputRef","label","labelElement","large","size","style","type","typeClassName","tagName","htmlProps","classes","CONTROL","DISABLED","disabled","INLINE","alignmentClass","sizeClass","_jsx","CONTROL_INPUT","CONTROL_INDICATOR","displayName","Switch","innerLabelChecked","innerLabel","controlProps","switchLabels","CONTROL_INDICATOR_CHILD","SWITCH_INNER_TEXT","SWITCH","Radio","RADIO","Checkbox","defaultIndeterminate","indeterminate","onChange","isIndeterminate","setIsIndeterminate","localInputRef","handleChange","evt","undefined","target","current","CHECKBOX"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/forms/controls.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { createElement, forwardRef, useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { Classes, mergeRefs } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n\nimport type { ControlProps } from \"./controlProps\";\n\n/** Internal props for Checkbox/Radio/Switch to render correctly. */\ninterface ControlInternalProps extends ControlProps {\n    type: \"checkbox\" | \"radio\";\n    typeClassName: string;\n    indicatorChildren?: React.ReactNode;\n}\n\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used within this module for `Checkbox`, `Radio`, and `Switch` below.\n */\nconst ControlInternal: React.FC<ControlInternalProps> = forwardRef<HTMLLabelElement, ControlInternalProps>(\n    (props, ref) => {\n        const {\n            alignIndicator,\n            children,\n            className,\n            indicatorChildren,\n            inline,\n            inputRef,\n            label,\n            labelElement,\n            // eslint-disable-next-line @typescript-eslint/no-deprecated\n            large,\n            size = \"medium\",\n            style,\n            type,\n            typeClassName,\n            tagName = \"label\",\n            ...htmlProps\n        } = props;\n\n        const classes = classNames(\n            Classes.CONTROL,\n            typeClassName,\n            {\n                [Classes.DISABLED]: htmlProps.disabled,\n                [Classes.INLINE]: inline,\n            },\n            Classes.alignmentClass(alignIndicator),\n            Classes.sizeClass(size, { large }),\n            className,\n        );\n\n        return createElement(\n            tagName,\n            { className: classes, ref, style },\n            <input className={Classes.CONTROL_INPUT} {...htmlProps} ref={inputRef} type={type} />,\n            <span className={Classes.CONTROL_INDICATOR}>{indicatorChildren}</span>,\n            label,\n            labelElement,\n            children,\n        );\n    },\n);\nControlInternal.displayName = `${DISPLAYNAME_PREFIX}.Control`;\n\n//\n// Switch\n//\n\n/**\n * Switch component props.\n */\nexport interface SwitchProps extends ControlProps {\n    /**\n     * Text to display inside the switch indicator when checked.\n     * If `innerLabel` is provided and this prop is omitted, then `innerLabel`\n     * will be used for both states.\n     *\n     * @default innerLabel\n     */\n    innerLabelChecked?: string;\n\n    /**\n     * Text to display inside the switch indicator when unchecked.\n     */\n    innerLabel?: string;\n}\n\n/**\n * Switch component.\n *\n * @see https://blueprintjs.com/docs/#core/components/switch\n */\nexport const Switch: React.FC<SwitchProps> = forwardRef((props, ref) => {\n    const { innerLabelChecked, innerLabel, ...controlProps } = props;\n    const switchLabels =\n        innerLabel || innerLabelChecked\n            ? [\n                  <div key=\"checked\" className={Classes.CONTROL_INDICATOR_CHILD}>\n                      <div className={Classes.SWITCH_INNER_TEXT}>\n                          {innerLabelChecked ? innerLabelChecked : innerLabel}\n                      </div>\n                  </div>,\n                  <div key=\"unchecked\" className={Classes.CONTROL_INDICATOR_CHILD}>\n                      <div className={Classes.SWITCH_INNER_TEXT}>{innerLabel}</div>\n                  </div>,\n              ]\n            : null;\n    return (\n        <ControlInternal\n            {...controlProps}\n            indicatorChildren={switchLabels}\n            ref={ref}\n            type=\"checkbox\"\n            typeClassName={Classes.SWITCH}\n        />\n    );\n});\nSwitch.displayName = `${DISPLAYNAME_PREFIX}.Switch`;\n\n//\n// Radio\n//\n\n/**\n * Radio component props.\n */\nexport type RadioProps = ControlProps;\n\n/**\n * Radio component.\n *\n * @see https://blueprintjs.com/docs/#core/components/radio\n */\nexport const Radio: React.FC<RadioProps> = forwardRef((props, ref) => {\n    return <ControlInternal {...props} ref={ref} type=\"radio\" typeClassName={Classes.RADIO} />;\n});\nRadio.displayName = `${DISPLAYNAME_PREFIX}.Radio`;\n\n//\n// Checkbox\n//\n\n/**\n * Checkbox component props.\n */\nexport interface CheckboxProps extends ControlProps {\n    /** Whether this checkbox is initially indeterminate (uncontrolled mode). */\n    defaultIndeterminate?: boolean;\n\n    /**\n     * Whether this checkbox is indeterminate, or \"partially checked.\"\n     * The checkbox will appear with a small dash instead of a tick to indicate that the value\n     * is not exactly true or false.\n     *\n     * Note that this prop takes precendence over `checked`: if a checkbox is marked both\n     * `checked` and `indeterminate` via props, it will appear as indeterminate in the DOM.\n     */\n    indeterminate?: boolean;\n}\n\n/**\n * Checkbox component.\n *\n * @see https://blueprintjs.com/docs/#core/components/checkbox\n */\nexport const Checkbox: React.FC<CheckboxProps> = forwardRef((props, ref) => {\n    const { defaultIndeterminate, indeterminate, onChange, ...controlProps } = props;\n\n    const [isIndeterminate, setIsIndeterminate] = useState<boolean>(indeterminate || defaultIndeterminate || false);\n\n    const localInputRef = useRef<HTMLInputElement>(null);\n    const inputRef = mergeRefs(props.inputRef, localInputRef);\n\n    const handleChange = useCallback(\n        (evt: React.ChangeEvent<HTMLInputElement>) => {\n            // update state immediately only if uncontrolled\n            if (indeterminate === undefined) {\n                setIsIndeterminate(evt.target.indeterminate);\n            }\n            // otherwise wait for props change. always invoke handler.\n            onChange?.(evt);\n        },\n        [indeterminate, onChange],\n    );\n\n    useEffect(() => {\n        if (indeterminate !== undefined) {\n            setIsIndeterminate(indeterminate);\n        }\n    }, [indeterminate]);\n\n    useEffect(() => {\n        if (localInputRef.current != null) {\n            localInputRef.current.indeterminate = isIndeterminate;\n        }\n    }, [localInputRef, isIndeterminate]);\n\n    return (\n        <ControlInternal\n            {...controlProps}\n            inputRef={inputRef}\n            onChange={handleChange}\n            ref={ref}\n            type=\"checkbox\"\n            typeClassName={Classes.CHECKBOX}\n        />\n    );\n});\nCheckbox.displayName = `${DISPLAYNAME_PREFIX}.Checkbox`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}