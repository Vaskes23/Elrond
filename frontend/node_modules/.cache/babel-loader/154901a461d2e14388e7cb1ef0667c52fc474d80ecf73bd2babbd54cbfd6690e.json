{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX, Elevation } from \"../../common\";\nimport { Card } from \"../card/card\";\nexport const CardList = forwardRef((props, ref) => {\n  const {\n    bordered = true,\n    className,\n    children,\n    compact = false,\n    ...htmlProps\n  } = props;\n  const classes = classNames(className, Classes.CARD_LIST, {\n    [Classes.CARD_LIST_BORDERED]: bordered,\n    [Classes.COMPACT]: compact\n  });\n  return _jsx(Card, {\n    role: \"list\",\n    elevation: Elevation.ZERO,\n    className: classes,\n    ...htmlProps,\n    ref: ref,\n    children: children\n  });\n});\nCardList.displayName = `${DISPLAYNAME_PREFIX}.CardList`;","map":{"version":3,"names":["classNames","forwardRef","Classes","DISPLAYNAME_PREFIX","Elevation","Card","CardList","props","ref","bordered","className","children","compact","htmlProps","classes","CARD_LIST","CARD_LIST_BORDERED","COMPACT","_jsx","role","elevation","ZERO","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/card-list/cardList.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX, Elevation, type HTMLDivProps, type Props } from \"../../common\";\nimport { Card } from \"../card/card\";\n\nexport interface CardListProps extends Props, HTMLDivProps, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Whether this container element should have a visual border.\n     *\n     * Set this to `false` to remove elevation and border radius styles, which allows this element to be a child of\n     * another bordered container element without padding (like SectionCard). Note that this also sets a 1px margin\n     * _in dark theme_ to account for inset box shadows in that theme used across the design system. Be sure to test\n     * your UI in both light and dark theme if you modify this prop value.\n     *\n     * @default true\n     */\n    bordered?: boolean;\n\n    /**\n     * Whether this component should use compact styles with reduced visual padding.\n     *\n     * Note that this prop affects styling for all Cards within this CardList and you do not need to set the\n     * `compact` prop individually on those child Cards.\n     *\n     * @default false\n     */\n    compact?: boolean;\n}\n\nexport const CardList: React.FC<CardListProps> = forwardRef((props, ref) => {\n    const { bordered = true, className, children, compact = false, ...htmlProps } = props;\n\n    const classes = classNames(className, Classes.CARD_LIST, {\n        [Classes.CARD_LIST_BORDERED]: bordered,\n        [Classes.COMPACT]: compact,\n    });\n\n    return (\n        <Card role=\"list\" elevation={Elevation.ZERO} className={classes} {...htmlProps} ref={ref}>\n            {children}\n        </Card>\n    );\n});\nCardList.displayName = `${DISPLAYNAME_PREFIX}.CardList`;\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,SAAS,QAAuC,cAAc;AACpG,SAASC,IAAI,QAAQ,cAAc;AA0BnC,OAAO,MAAMC,QAAQ,GAA4BL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAI;EACvE,MAAM;IAAEC,QAAQ,GAAG,IAAI;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,OAAO,GAAG,KAAK;IAAE,GAAGC;EAAS,CAAE,GAAGN,KAAK;EAErF,MAAMO,OAAO,GAAGd,UAAU,CAACU,SAAS,EAAER,OAAO,CAACa,SAAS,EAAE;IACrD,CAACb,OAAO,CAACc,kBAAkB,GAAGP,QAAQ;IACtC,CAACP,OAAO,CAACe,OAAO,GAAGL;GACtB,CAAC;EAEF,OACIM,IAAA,CAACb,IAAI;IAACc,IAAI,EAAC,MAAM;IAACC,SAAS,EAAEhB,SAAS,CAACiB,IAAI;IAAEX,SAAS,EAAEI,OAAO;IAAA,GAAMD,SAAS;IAAEL,GAAG,EAAEA,GAAG;IAAAG,QAAA,EACnFA;EAAQ,EACN;AAEf,CAAC,CAAC;AACFL,QAAQ,CAACgB,WAAW,GAAG,GAAGnB,kBAAkB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}