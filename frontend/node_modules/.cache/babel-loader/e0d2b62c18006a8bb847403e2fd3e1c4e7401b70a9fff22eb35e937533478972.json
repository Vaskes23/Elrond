{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { useCallback, useState } from \"react\";\n/**\n * Keep track of a control's checked state in both controlled and uncontrolled modes\n */\nexport function useCheckedControl(props) {\n  var _a;\n  const [checkedStateForUncontrolledMode, setChecked] = useState(() => {\n    var _a;\n    return (_a = props.defaultChecked) !== null && _a !== void 0 ? _a : false;\n  });\n  // If the checked prop is passed, this input is in \"controlled mode\" and\n  // should always reflect the value of the controlled prop. Any internal\n  // state tracked for \"uncontrolled mode\" should be ignored.\n  const checked = (_a = props.checked) !== null && _a !== void 0 ? _a : checkedStateForUncontrolledMode;\n  const onChange = useCallback(e => {\n    var _a;\n    setChecked(c => !c);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, e);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.onChange]);\n  return {\n    checked,\n    onChange\n  };\n}","map":{"version":3,"names":["useCallback","useState","useCheckedControl","props","checkedStateForUncontrolledMode","setChecked","_a","defaultChecked","checked","onChange","e","c","call"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/control-card/useCheckedControl.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useCallback, useState } from \"react\";\n\nimport type { CheckedControlProps } from \"../forms/controlProps\";\n\n/**\n * Keep track of a control's checked state in both controlled and uncontrolled modes\n */\nexport function useCheckedControl(props: CheckedControlProps) {\n    const [checkedStateForUncontrolledMode, setChecked] = useState(() => props.defaultChecked ?? false);\n\n    // If the checked prop is passed, this input is in \"controlled mode\" and\n    // should always reflect the value of the controlled prop. Any internal\n    // state tracked for \"uncontrolled mode\" should be ignored.\n    const checked = props.checked ?? checkedStateForUncontrolledMode;\n\n    const onChange = useCallback<React.ChangeEventHandler<HTMLInputElement>>(\n        e => {\n            setChecked(c => !c);\n            props.onChange?.(e);\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [props.onChange],\n    );\n    return { checked, onChange };\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAI7C;;;AAGA,OAAM,SAAUC,iBAAiBA,CAACC,KAA0B;;EACxD,MAAM,CAACC,+BAA+B,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,MAAK;IAAA,IAAAK,EAAA;IAAC,QAAAA,EAAA,GAAAH,KAAK,CAACI,cAAc,cAAAD,EAAA,cAAAA,EAAA,GAAI,KAAK;EAAA,EAAC;EAEnG;EACA;EACA;EACA,MAAME,OAAO,GAAG,CAAAF,EAAA,GAAAH,KAAK,CAACK,OAAO,cAAAF,EAAA,cAAAA,EAAA,GAAIF,+BAA+B;EAEhE,MAAMK,QAAQ,GAAGT,WAAW,CACxBU,CAAC,IAAG;;IACAL,UAAU,CAACM,CAAC,IAAI,CAACA,CAAC,CAAC;IACnB,CAAAL,EAAA,GAAAH,KAAK,CAACM,QAAQ,cAAAH,EAAA,uBAAAA,EAAA,CAAAM,IAAA,CAAAT,KAAA,EAAGO,CAAC,CAAC;EACvB,CAAC;EACD;EACA,CAACP,KAAK,CAACM,QAAQ,CAAC,CACnB;EACD,OAAO;IAAED,OAAO;IAAEC;EAAQ,CAAE;AAChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}