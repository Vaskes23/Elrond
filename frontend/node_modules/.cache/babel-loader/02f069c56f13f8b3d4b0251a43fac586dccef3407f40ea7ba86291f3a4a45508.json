{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** @returns true if React is running in a client environment, and false if it's in a server */\nexport function hasDOMEnvironment() {\n  return typeof window !== \"undefined\" && window.document != null;\n}\nexport function elementIsOrContains(element, testElement) {\n  return element === testElement || element.contains(testElement);\n}\n/**\n * Checks whether the given element is inside something that looks like a text input.\n * This is particularly useful to determine if a keyboard event inside this element should take priority over hotkey\n * bindings / keyboard shortcut handlers.\n *\n * @returns true if the element is inside a text input\n */\nexport function elementIsTextInput(elem) {\n  // we check these cases for unit testing, but this should not happen\n  // during normal operation\n  if (elem == null || elem.closest == null) {\n    return false;\n  }\n  const editable = elem.closest(\"input, textarea, [contenteditable=true]\");\n  if (editable == null) {\n    return false;\n  }\n  // don't let checkboxes, switches, and radio buttons prevent hotkey behavior\n  if (editable.tagName.toLowerCase() === \"input\") {\n    const inputType = editable.type;\n    if (inputType === \"checkbox\" || inputType === \"radio\") {\n      return false;\n    }\n  }\n  // don't let read-only fields prevent hotkey behavior\n  if (editable.readOnly) {\n    return false;\n  }\n  return true;\n}\n/**\n * Gets the active element in the document or shadow root (if an element is provided, and it's in the shadow DOM).\n */\nexport function getActiveElement(element, options) {\n  var _a;\n  const rootNode = (_a = element === null || element === void 0 ? void 0 : element.getRootNode(options)) !== null && _a !== void 0 ? _a : document;\n  const activeElement = rootNode.activeElement;\n  return activeElement instanceof HTMLElement ? activeElement : null;\n}\n/**\n * Throttle an event on an EventTarget by wrapping it in a\n * `requestAnimationFrame` call. Returns the event handler that was bound to\n * given eventName so you can clean up after yourself.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll\n */\n/* istanbul ignore next */\nexport function throttleEvent(target, eventName, newEventName) {\n  const throttledFunc = throttleImpl(event => {\n    target.dispatchEvent(new CustomEvent(newEventName, event));\n  });\n  target.addEventListener(eventName, throttledFunc);\n  return throttledFunc;\n}\n/**\n * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n *\n * @see https://www.html5rocks.com/en/tutorials/speed/animations/\n */\nexport function throttleReactEventCallback(callback, options = {}) {\n  const throttledFunc = throttleImpl(callback, event2 => {\n    if (options.preventDefault) {\n      event2.preventDefault();\n    }\n  },\n  // prevent React from reclaiming the event object before we reference it\n  event2 => event2.persist());\n  return throttledFunc;\n}\n/**\n * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n */\n/* istanbul ignore next */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nexport function throttle(method) {\n  return throttleImpl(method);\n}\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction throttleImpl(onAnimationFrameRequested, onBeforeIsRunningCheck, onAfterIsRunningCheck) {\n  let isRunning = false;\n  const func = (...args) => {\n    onBeforeIsRunningCheck === null || onBeforeIsRunningCheck === void 0 ? void 0 : onBeforeIsRunningCheck(...args);\n    if (isRunning) {\n      return;\n    }\n    isRunning = true;\n    onAfterIsRunningCheck === null || onAfterIsRunningCheck === void 0 ? void 0 : onAfterIsRunningCheck(...args);\n    requestAnimationFrame(() => {\n      onAnimationFrameRequested(...args);\n      isRunning = false;\n    });\n  };\n  return func;\n}\nexport function clickElementOnKeyPress(keys) {\n  return e => {\n    if (keys.some(key => e.key === key)) {\n      // Prevent spacebar from scrolling the page unless we're in a text field\n      if (!elementIsTextInput(e.target)) {\n        e.preventDefault();\n      }\n      e.target.dispatchEvent(new MouseEvent(\"click\", {\n        ...e,\n        view: undefined\n      }));\n    }\n  };\n}\n/**\n * Selector for all possible focusable items.\n *\n * Derived from this SO question: {@link https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus}\n *\n * Note: Order may not be correct if children elements use tabindex values > 0.\n */\nconst SELECTOR_FOCUSABLE = ['a[href]:not([tabindex=\"-1\"])', 'button:not([disabled]):not([tabindex=\"-1\"])', 'details:not([tabindex=\"-1\"])', 'input:not([disabled]):not([tabindex=\"-1\"])', 'select:not([disabled]):not([tabindex=\"-1\"])', 'textarea:not([disabled]):not([tabindex=\"-1\"])', '[tabindex]:not([tabindex=\"-1\"])'].join(\",\");\n/**\n * Gets all focusable elements within the given element.\n *\n * Selector derived from this SO question: {@link https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus}\n *\n * Note: Order may not be correct if children elements use tabindex values > 0.\n *\n * @param {HTMLElement} element - The element to search within.\n * @returns {HTMLElement[]} An array of focusable elements.\n */\nexport function getFocusableElements(element) {\n  return Array.from(element.querySelectorAll(SELECTOR_FOCUSABLE));\n}","map":{"version":3,"names":["hasDOMEnvironment","window","document","elementIsOrContains","element","testElement","contains","elementIsTextInput","elem","closest","editable","tagName","toLowerCase","inputType","type","readOnly","getActiveElement","options","rootNode","_a","getRootNode","activeElement","HTMLElement","throttleEvent","target","eventName","newEventName","throttledFunc","throttleImpl","event","dispatchEvent","CustomEvent","addEventListener","throttleReactEventCallback","callback","event2","preventDefault","persist","throttle","method","onAnimationFrameRequested","onBeforeIsRunningCheck","onAfterIsRunningCheck","isRunning","func","args","requestAnimationFrame","clickElementOnKeyPress","keys","e","some","key","MouseEvent","view","undefined","SELECTOR_FOCUSABLE","join","getFocusableElements","Array","from","querySelectorAll"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/common/utils/domUtils.ts"],"sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @returns true if React is running in a client environment, and false if it's in a server */\nexport function hasDOMEnvironment(): boolean {\n    return typeof window !== \"undefined\" && window.document != null;\n}\n\nexport function elementIsOrContains(element: HTMLElement, testElement: HTMLElement) {\n    return element === testElement || element.contains(testElement);\n}\n\n/**\n * Checks whether the given element is inside something that looks like a text input.\n * This is particularly useful to determine if a keyboard event inside this element should take priority over hotkey\n * bindings / keyboard shortcut handlers.\n *\n * @returns true if the element is inside a text input\n */\nexport function elementIsTextInput(elem: HTMLElement) {\n    // we check these cases for unit testing, but this should not happen\n    // during normal operation\n    if (elem == null || elem.closest == null) {\n        return false;\n    }\n\n    const editable = elem.closest<HTMLInputElement>(\"input, textarea, [contenteditable=true]\");\n\n    if (editable == null) {\n        return false;\n    }\n\n    // don't let checkboxes, switches, and radio buttons prevent hotkey behavior\n    if (editable.tagName.toLowerCase() === \"input\") {\n        const inputType = editable.type;\n        if (inputType === \"checkbox\" || inputType === \"radio\") {\n            return false;\n        }\n    }\n\n    // don't let read-only fields prevent hotkey behavior\n    if (editable.readOnly) {\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * Gets the active element in the document or shadow root (if an element is provided, and it's in the shadow DOM).\n */\nexport function getActiveElement(element?: HTMLElement | null, options?: GetRootNodeOptions) {\n    const rootNode = (element?.getRootNode(options) ?? document) as unknown as DocumentOrShadowRoot;\n    const activeElement = rootNode.activeElement;\n    return activeElement instanceof HTMLElement ? activeElement : null;\n}\n\n/**\n * Throttle an event on an EventTarget by wrapping it in a\n * `requestAnimationFrame` call. Returns the event handler that was bound to\n * given eventName so you can clean up after yourself.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Events/scroll\n */\n/* istanbul ignore next */\nexport function throttleEvent(target: EventTarget, eventName: string, newEventName: string) {\n    const throttledFunc = throttleImpl((event: Event) => {\n        target.dispatchEvent(new CustomEvent(newEventName, event));\n    });\n    target.addEventListener(eventName, throttledFunc);\n    return throttledFunc;\n}\n\nexport interface ThrottledReactEventOptions {\n    preventDefault?: boolean;\n}\n\n/**\n * Throttle a callback by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n *\n * @see https://www.html5rocks.com/en/tutorials/speed/animations/\n */\nexport function throttleReactEventCallback<E extends React.SyntheticEvent = React.SyntheticEvent>(\n    callback: (event: E, ...otherArgs: any[]) => any,\n    options: ThrottledReactEventOptions = {},\n) {\n    const throttledFunc = throttleImpl(\n        callback,\n        (event2: E) => {\n            if (options.preventDefault) {\n                event2.preventDefault();\n            }\n        },\n        // prevent React from reclaiming the event object before we reference it\n        (event2: E) => event2.persist(),\n    );\n    return throttledFunc;\n}\n\n/**\n * Throttle a method by wrapping it in a `requestAnimationFrame` call. Returns\n * the throttled function.\n */\n/* istanbul ignore next */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nexport function throttle<T extends Function>(method: T): T {\n    return throttleImpl(method);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction throttleImpl<T extends Function>(\n    onAnimationFrameRequested: T,\n    onBeforeIsRunningCheck?: T,\n    onAfterIsRunningCheck?: T,\n) {\n    let isRunning = false;\n    const func = (...args: any[]) => {\n        onBeforeIsRunningCheck?.(...args);\n\n        if (isRunning) {\n            return;\n        }\n        isRunning = true;\n\n        onAfterIsRunningCheck?.(...args);\n\n        requestAnimationFrame(() => {\n            onAnimationFrameRequested(...args);\n            isRunning = false;\n        });\n    };\n    return func as any as T;\n}\n\nexport function clickElementOnKeyPress(keys: string[]) {\n    return (e: React.KeyboardEvent) => {\n        if (keys.some(key => e.key === key)) {\n            // Prevent spacebar from scrolling the page unless we're in a text field\n            if (!elementIsTextInput(e.target as HTMLElement)) {\n                e.preventDefault();\n            }\n\n            e.target.dispatchEvent(new MouseEvent(\"click\", { ...e, view: undefined }));\n        }\n    };\n}\n\n/**\n * Selector for all possible focusable items.\n *\n * Derived from this SO question: {@link https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus}\n *\n * Note: Order may not be correct if children elements use tabindex values > 0.\n */\nconst SELECTOR_FOCUSABLE = [\n    'a[href]:not([tabindex=\"-1\"])',\n    'button:not([disabled]):not([tabindex=\"-1\"])',\n    'details:not([tabindex=\"-1\"])',\n    'input:not([disabled]):not([tabindex=\"-1\"])',\n    'select:not([disabled]):not([tabindex=\"-1\"])',\n    'textarea:not([disabled]):not([tabindex=\"-1\"])',\n    '[tabindex]:not([tabindex=\"-1\"])',\n].join(\",\");\n\n/**\n * Gets all focusable elements within the given element.\n *\n * Selector derived from this SO question: {@link https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus}\n *\n * Note: Order may not be correct if children elements use tabindex values > 0.\n *\n * @param {HTMLElement} element - The element to search within.\n * @returns {HTMLElement[]} An array of focusable elements.\n */\nexport function getFocusableElements(element: HTMLElement): HTMLElement[] {\n    return Array.from(element.querySelectorAll(SELECTOR_FOCUSABLE));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}