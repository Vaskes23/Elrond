{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\nimport { useInteractiveAttributes } from \"../../accessibility/useInteractiveAttributes\";\nimport { Classes, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, removeNonHTMLProps } from \"../../common/props\";\nimport { Icon } from \"../icon/icon\";\nimport { Spinner, SpinnerSize } from \"../spinner/spinner\";\nimport { Text } from \"../text/text\";\n/**\n * Button component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button\n */\nexport const Button = forwardRef((props, ref) => {\n  const commonAttributes = useSharedButtonAttributes(props, ref);\n  return _jsx(\"button\", {\n    type: \"button\",\n    ...removeNonHTMLProps(props),\n    ...commonAttributes,\n    children: renderButtonContents(props)\n  });\n});\nButton.displayName = `${DISPLAYNAME_PREFIX}.Button`;\n/**\n * AnchorButton component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button\n */\nexport const AnchorButton = forwardRef((props, ref) => {\n  const {\n    href\n  } = props;\n  const commonProps = useSharedButtonAttributes(props, ref, {\n    defaultTabIndex: 0,\n    disabledTabIndex: -1\n  });\n  return _jsx(\"a\", {\n    role: \"button\",\n    ...removeNonHTMLProps(props),\n    ...commonProps,\n    \"aria-disabled\": commonProps.disabled,\n    href: commonProps.disabled ? undefined : href,\n    children: renderButtonContents(props)\n  });\n});\nAnchorButton.displayName = `${DISPLAYNAME_PREFIX}.AnchorButton`;\n/**\n * Most of the button logic lives in this shared hook.\n */\nfunction useSharedButtonAttributes(props, ref, options) {\n  const {\n    alignText,\n    fill,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    large,\n    loading = false,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    minimal,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    outlined,\n    size = \"medium\",\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    small,\n    variant = \"solid\"\n  } = props;\n  const disabled = props.disabled || loading;\n  const [active, interactiveProps] = useInteractiveAttributes(!disabled, props, ref, options);\n  const className = classNames(Classes.BUTTON, {\n    [Classes.ACTIVE]: active,\n    [Classes.DISABLED]: disabled,\n    [Classes.FILL]: fill,\n    [Classes.LOADING]: loading\n  }, Classes.alignmentClass(alignText), Classes.intentClass(props.intent), Classes.sizeClass(size, {\n    large,\n    small\n  }), Classes.variantClass(variant, {\n    minimal,\n    outlined\n  }), props.className);\n  return {\n    ...interactiveProps,\n    className,\n    disabled\n  };\n}\n/**\n * Shared rendering code for button contents.\n */\nfunction renderButtonContents(props) {\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  const {\n    children,\n    ellipsizeText,\n    endIcon,\n    icon,\n    loading,\n    rightIcon,\n    text,\n    textClassName\n  } = props;\n  const hasTextContent = !Utils.isReactNodeEmpty(text) || !Utils.isReactNodeEmpty(children);\n  return _jsxs(_Fragment, {\n    children: [loading && _jsx(Spinner, {\n      className: Classes.BUTTON_SPINNER,\n      size: SpinnerSize.SMALL\n    }), _jsx(Icon, {\n      icon: icon\n    }), hasTextContent && _jsxs(Text, {\n      className: classNames(Classes.BUTTON_TEXT, textClassName),\n      ellipsize: ellipsizeText,\n      tagName: \"span\",\n      children: [text, children]\n    }), _jsx(Icon, {\n      icon: endIcon !== null && endIcon !== void 0 ? endIcon : rightIcon\n    })]\n  });\n}","map":{"version":3,"names":["classNames","forwardRef","useInteractiveAttributes","Classes","Utils","DISPLAYNAME_PREFIX","removeNonHTMLProps","Icon","Spinner","SpinnerSize","Text","Button","props","ref","commonAttributes","useSharedButtonAttributes","_jsx","type","children","renderButtonContents","displayName","AnchorButton","href","commonProps","defaultTabIndex","disabledTabIndex","role","disabled","undefined","options","alignText","fill","large","loading","minimal","outlined","size","small","variant","active","interactiveProps","className","BUTTON","ACTIVE","DISABLED","FILL","LOADING","alignmentClass","intentClass","intent","sizeClass","variantClass","ellipsizeText","endIcon","icon","rightIcon","text","textClassName","hasTextContent","isReactNodeEmpty","_jsxs","_Fragment","BUTTON_SPINNER","SMALL","BUTTON_TEXT","ellipsize","tagName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/button/buttons.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nimport {\n    useInteractiveAttributes,\n    type UseInteractiveAttributesOptions,\n} from \"../../accessibility/useInteractiveAttributes\";\nimport { Classes, Utils } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, removeNonHTMLProps } from \"../../common/props\";\nimport { Icon } from \"../icon/icon\";\nimport { Spinner, SpinnerSize } from \"../spinner/spinner\";\nimport { Text } from \"../text/text\";\n\nimport type { AnchorButtonProps, ButtonProps } from \"./buttonProps\";\n\n/**\n * Button component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button\n */\nexport const Button: React.FC<ButtonProps> = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n    const commonAttributes = useSharedButtonAttributes(props, ref);\n\n    return (\n        <button type=\"button\" {...removeNonHTMLProps(props)} {...commonAttributes}>\n            {renderButtonContents(props)}\n        </button>\n    );\n});\nButton.displayName = `${DISPLAYNAME_PREFIX}.Button`;\n\n/**\n * AnchorButton component.\n *\n * @see https://blueprintjs.com/docs/#core/components/button\n */\nexport const AnchorButton: React.FC<AnchorButtonProps> = forwardRef<HTMLAnchorElement, AnchorButtonProps>(\n    (props, ref) => {\n        const { href } = props;\n        const commonProps = useSharedButtonAttributes(props, ref, {\n            defaultTabIndex: 0,\n            disabledTabIndex: -1,\n        });\n\n        return (\n            <a\n                role=\"button\"\n                {...removeNonHTMLProps(props)}\n                {...commonProps}\n                aria-disabled={commonProps.disabled}\n                href={commonProps.disabled ? undefined : href}\n            >\n                {renderButtonContents(props)}\n            </a>\n        );\n    },\n);\nAnchorButton.displayName = `${DISPLAYNAME_PREFIX}.AnchorButton`;\n\n/**\n * Most of the button logic lives in this shared hook.\n */\nfunction useSharedButtonAttributes<E extends HTMLAnchorElement | HTMLButtonElement>(\n    props: E extends HTMLAnchorElement ? AnchorButtonProps : ButtonProps,\n    ref: React.Ref<E>,\n    options?: UseInteractiveAttributesOptions,\n) {\n    const {\n        alignText,\n        fill,\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        large,\n        loading = false,\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        minimal,\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        outlined,\n        size = \"medium\",\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        small,\n        variant = \"solid\",\n    } = props;\n    const disabled = props.disabled || loading;\n\n    const [active, interactiveProps] = useInteractiveAttributes(!disabled, props, ref, options);\n\n    const className = classNames(\n        Classes.BUTTON,\n        {\n            [Classes.ACTIVE]: active,\n            [Classes.DISABLED]: disabled,\n            [Classes.FILL]: fill,\n            [Classes.LOADING]: loading,\n        },\n        Classes.alignmentClass(alignText),\n        Classes.intentClass(props.intent),\n        Classes.sizeClass(size, { large, small }),\n        Classes.variantClass(variant, { minimal, outlined }),\n        props.className,\n    );\n\n    return {\n        ...interactiveProps,\n        className,\n        disabled,\n    };\n}\n\n/**\n * Shared rendering code for button contents.\n */\nfunction renderButtonContents<E extends HTMLAnchorElement | HTMLButtonElement>(\n    props: E extends HTMLAnchorElement ? AnchorButtonProps : ButtonProps,\n) {\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    const { children, ellipsizeText, endIcon, icon, loading, rightIcon, text, textClassName } = props;\n    const hasTextContent = !Utils.isReactNodeEmpty(text) || !Utils.isReactNodeEmpty(children);\n    return (\n        <>\n            {loading && <Spinner className={Classes.BUTTON_SPINNER} size={SpinnerSize.SMALL} />}\n            <Icon icon={icon} />\n            {hasTextContent && (\n                <Text\n                    className={classNames(Classes.BUTTON_TEXT, textClassName)}\n                    ellipsize={ellipsizeText}\n                    tagName=\"span\"\n                >\n                    {text}\n                    {children}\n                </Text>\n            )}\n            <Icon icon={endIcon ?? rightIcon} />\n        </>\n    );\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,OAAO;AAElC,SACIC,wBAAwB,QAErB,8CAA8C;AACrD,SAASC,OAAO,EAAEC,KAAK,QAAQ,cAAc;AAC7C,SAASC,kBAAkB,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC3E,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,OAAO,EAAEC,WAAW,QAAQ,oBAAoB;AACzD,SAASC,IAAI,QAAQ,cAAc;AAInC;;;;;AAKA,OAAO,MAAMC,MAAM,GAA0BV,UAAU,CAAiC,CAACW,KAAK,EAAEC,GAAG,KAAI;EACnG,MAAMC,gBAAgB,GAAGC,yBAAyB,CAACH,KAAK,EAAEC,GAAG,CAAC;EAE9D,OACIG,IAAA;IAAQC,IAAI,EAAC,QAAQ;IAAA,GAAKX,kBAAkB,CAACM,KAAK,CAAC;IAAA,GAAME,gBAAgB;IAAAI,QAAA,EACpEC,oBAAoB,CAACP,KAAK;EAAC,EACvB;AAEjB,CAAC,CAAC;AACFD,MAAM,CAACS,WAAW,GAAG,GAAGf,kBAAkB,SAAS;AAEnD;;;;;AAKA,OAAO,MAAMgB,YAAY,GAAgCpB,UAAU,CAC/D,CAACW,KAAK,EAAEC,GAAG,KAAI;EACX,MAAM;IAAES;EAAI,CAAE,GAAGV,KAAK;EACtB,MAAMW,WAAW,GAAGR,yBAAyB,CAACH,KAAK,EAAEC,GAAG,EAAE;IACtDW,eAAe,EAAE,CAAC;IAClBC,gBAAgB,EAAE,CAAC;GACtB,CAAC;EAEF,OACIT,IAAA;IACIU,IAAI,EAAC,QAAQ;IAAA,GACTpB,kBAAkB,CAACM,KAAK,CAAC;IAAA,GACzBW,WAAW;IAAA,iBACAA,WAAW,CAACI,QAAQ;IACnCL,IAAI,EAAEC,WAAW,CAACI,QAAQ,GAAGC,SAAS,GAAGN,IAAI;IAAAJ,QAAA,EAE5CC,oBAAoB,CAACP,KAAK;EAAC,EAC5B;AAEZ,CAAC,CACJ;AACDS,YAAY,CAACD,WAAW,GAAG,GAAGf,kBAAkB,eAAe;AAE/D;;;AAGA,SAASU,yBAAyBA,CAC9BH,KAAoE,EACpEC,GAAiB,EACjBgB,OAAyC;EAEzC,MAAM;IACFC,SAAS;IACTC,IAAI;IACJ;IACAC,KAAK;IACLC,OAAO,GAAG,KAAK;IACf;IACAC,OAAO;IACP;IACAC,QAAQ;IACRC,IAAI,GAAG,QAAQ;IACf;IACAC,KAAK;IACLC,OAAO,GAAG;EAAO,CACpB,GAAG1B,KAAK;EACT,MAAMe,QAAQ,GAAGf,KAAK,CAACe,QAAQ,IAAIM,OAAO;EAE1C,MAAM,CAACM,MAAM,EAAEC,gBAAgB,CAAC,GAAGtC,wBAAwB,CAAC,CAACyB,QAAQ,EAAEf,KAAK,EAAEC,GAAG,EAAEgB,OAAO,CAAC;EAE3F,MAAMY,SAAS,GAAGzC,UAAU,CACxBG,OAAO,CAACuC,MAAM,EACd;IACI,CAACvC,OAAO,CAACwC,MAAM,GAAGJ,MAAM;IACxB,CAACpC,OAAO,CAACyC,QAAQ,GAAGjB,QAAQ;IAC5B,CAACxB,OAAO,CAAC0C,IAAI,GAAGd,IAAI;IACpB,CAAC5B,OAAO,CAAC2C,OAAO,GAAGb;GACtB,EACD9B,OAAO,CAAC4C,cAAc,CAACjB,SAAS,CAAC,EACjC3B,OAAO,CAAC6C,WAAW,CAACpC,KAAK,CAACqC,MAAM,CAAC,EACjC9C,OAAO,CAAC+C,SAAS,CAACd,IAAI,EAAE;IAAEJ,KAAK;IAAEK;EAAK,CAAE,CAAC,EACzClC,OAAO,CAACgD,YAAY,CAACb,OAAO,EAAE;IAAEJ,OAAO;IAAEC;EAAQ,CAAE,CAAC,EACpDvB,KAAK,CAAC6B,SAAS,CAClB;EAED,OAAO;IACH,GAAGD,gBAAgB;IACnBC,SAAS;IACTd;GACH;AACL;AAEA;;;AAGA,SAASR,oBAAoBA,CACzBP,KAAoE;EAEpE;EACA,MAAM;IAAEM,QAAQ;IAAEkC,aAAa;IAAEC,OAAO;IAAEC,IAAI;IAAErB,OAAO;IAAEsB,SAAS;IAAEC,IAAI;IAAEC;EAAa,CAAE,GAAG7C,KAAK;EACjG,MAAM8C,cAAc,GAAG,CAACtD,KAAK,CAACuD,gBAAgB,CAACH,IAAI,CAAC,IAAI,CAACpD,KAAK,CAACuD,gBAAgB,CAACzC,QAAQ,CAAC;EACzF,OACI0C,KAAA,CAAAC,SAAA;IAAA3C,QAAA,GACKe,OAAO,IAAIjB,IAAA,CAACR,OAAO;MAACiC,SAAS,EAAEtC,OAAO,CAAC2D,cAAc;MAAE1B,IAAI,EAAE3B,WAAW,CAACsD;IAAK,EAAI,EACnF/C,IAAA,CAACT,IAAI;MAAC+C,IAAI,EAAEA;IAAI,EAAI,EACnBI,cAAc,IACXE,KAAA,CAAClD,IAAI;MACD+B,SAAS,EAAEzC,UAAU,CAACG,OAAO,CAAC6D,WAAW,EAAEP,aAAa,CAAC;MACzDQ,SAAS,EAAEb,aAAa;MACxBc,OAAO,EAAC,MAAM;MAAAhD,QAAA,GAEbsC,IAAI,EACJtC,QAAQ;IAAA,EAEhB,EACDF,IAAA,CAACT,IAAI;MAAC+C,IAAI,EAAED,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIE;IAAS,EAAI;EAAA,EACrC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}