{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n/**\n * Progress bar component.\n *\n * @see https://blueprintjs.com/docs/#core/components/progress-bar\n */\nexport const ProgressBar = props => {\n  const {\n    animate = true,\n    className,\n    intent,\n    stripes = true,\n    value,\n    ...htmlProps\n  } = props;\n  const classes = classNames(Classes.PROGRESS_BAR, Classes.intentClass(intent), {\n    [Classes.PROGRESS_NO_ANIMATION]: !animate,\n    [Classes.PROGRESS_NO_STRIPES]: !stripes\n  }, className);\n  const percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n  // don't set width if value is null (rely on default CSS value)\n  const width = percent == null ? undefined : percent + \"%\";\n  return _jsx(\"div\", {\n    ...htmlProps,\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": percent == null ? undefined : Math.round(percent),\n    className: classes,\n    role: \"progressbar\",\n    children: _jsx(\"div\", {\n      className: Classes.PROGRESS_METER,\n      style: {\n        width\n      }\n    })\n  });\n};\nProgressBar.displayName = `${DISPLAYNAME_PREFIX}.ProgressBar`;","map":{"version":3,"names":["classNames","Classes","DISPLAYNAME_PREFIX","clamp","ProgressBar","props","animate","className","intent","stripes","value","htmlProps","classes","PROGRESS_BAR","intentClass","PROGRESS_NO_ANIMATION","PROGRESS_NO_STRIPES","percent","undefined","width","_jsx","Math","round","role","children","PROGRESS_METER","style","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/progress-bar/progressBar.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type IntentProps, type Props } from \"../../common/props\";\nimport { clamp } from \"../../common/utils\";\n\nexport interface ProgressBarProps extends Props, IntentProps, HTMLDivProps {\n    /**\n     * Whether the background should animate.\n     *\n     * @default true\n     */\n    animate?: boolean;\n\n    /**\n     * Whether the background should be striped.\n     *\n     * @default true\n     */\n    stripes?: boolean;\n\n    /**\n     * A value between 0 and 1 (inclusive) representing how far along the operation is.\n     * Values below 0 or above 1 will be interpreted as 0 or 1, respectively.\n     * Omitting this prop will result in an \"indeterminate\" progress meter that fills the entire bar.\n     */\n    value?: number;\n}\n\n/**\n * Progress bar component.\n *\n * @see https://blueprintjs.com/docs/#core/components/progress-bar\n */\nexport const ProgressBar: React.FC<ProgressBarProps> = props => {\n    const { animate = true, className, intent, stripes = true, value, ...htmlProps } = props;\n    const classes = classNames(\n        Classes.PROGRESS_BAR,\n        Classes.intentClass(intent),\n        {\n            [Classes.PROGRESS_NO_ANIMATION]: !animate,\n            [Classes.PROGRESS_NO_STRIPES]: !stripes,\n        },\n        className,\n    );\n    const percent = value == null ? undefined : 100 * clamp(value, 0, 1);\n    // don't set width if value is null (rely on default CSS value)\n    const width = percent == null ? undefined : percent + \"%\";\n\n    return (\n        <div\n            {...htmlProps}\n            aria-valuemax={100}\n            aria-valuemin={0}\n            aria-valuenow={percent == null ? undefined : Math.round(percent)}\n            className={classes}\n            role=\"progressbar\"\n        >\n            <div className={Classes.PROGRESS_METER} style={{ width }} />\n        </div>\n    );\n};\n\nProgressBar.displayName = `${DISPLAYNAME_PREFIX}.ProgressBar`;\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,QAAyD,oBAAoB;AACxG,SAASC,KAAK,QAAQ,oBAAoB;AAyB1C;;;;;AAKA,OAAO,MAAMC,WAAW,GAA+BC,KAAK,IAAG;EAC3D,MAAM;IAAEC,OAAO,GAAG,IAAI;IAAEC,SAAS;IAAEC,MAAM;IAAEC,OAAO,GAAG,IAAI;IAAEC,KAAK;IAAE,GAAGC;EAAS,CAAE,GAAGN,KAAK;EACxF,MAAMO,OAAO,GAAGZ,UAAU,CACtBC,OAAO,CAACY,YAAY,EACpBZ,OAAO,CAACa,WAAW,CAACN,MAAM,CAAC,EAC3B;IACI,CAACP,OAAO,CAACc,qBAAqB,GAAG,CAACT,OAAO;IACzC,CAACL,OAAO,CAACe,mBAAmB,GAAG,CAACP;GACnC,EACDF,SAAS,CACZ;EACD,MAAMU,OAAO,GAAGP,KAAK,IAAI,IAAI,GAAGQ,SAAS,GAAG,GAAG,GAAGf,KAAK,CAACO,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EACpE;EACA,MAAMS,KAAK,GAAGF,OAAO,IAAI,IAAI,GAAGC,SAAS,GAAGD,OAAO,GAAG,GAAG;EAEzD,OACIG,IAAA;IAAA,GACQT,SAAS;IAAA,iBACE,GAAG;IAAA,iBACH,CAAC;IAAA,iBACDM,OAAO,IAAI,IAAI,GAAGC,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;IAChEV,SAAS,EAAEK,OAAO;IAClBW,IAAI,EAAC,aAAa;IAAAC,QAAA,EAElBJ,IAAA;MAAKb,SAAS,EAAEN,OAAO,CAACwB,cAAc;MAAEC,KAAK,EAAE;QAAEP;MAAK;IAAE;EAAI,EAC1D;AAEd,CAAC;AAEDf,WAAW,CAACuB,WAAW,GAAG,GAAGzB,kBAAkB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}