{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContext, useMemo } from \"react\";\n/**\n * A React context to set options for all portals in a given subtree.\n * Do not use this PortalContext directly, instead use PortalProvider to set the options.\n */\nexport const PortalContext = createContext({});\n/**\n * Portal context provider.\n *\n * @see https://blueprintjs.com/docs/#core/context/portal-provider\n */\nexport const PortalProvider = ({\n  children,\n  portalClassName,\n  portalContainer\n}) => {\n  const contextOptions = useMemo(() => ({\n    portalClassName,\n    portalContainer\n  }), [portalClassName, portalContainer]);\n  return _jsx(PortalContext.Provider, {\n    value: contextOptions,\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","useMemo","PortalContext","PortalProvider","children","portalClassName","portalContainer","contextOptions","_jsx","Provider","value"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/context/portal/portalProvider.tsx"],"sourcesContent":["/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext, useMemo } from \"react\";\n\nexport interface PortalContextOptions {\n    /** Additional CSS classes to add to all `Portal` elements in this React context. */\n    portalClassName?: string;\n    /** The HTML element that all `Portal` elements in this React context will be added as children to  */\n    portalContainer?: HTMLElement;\n}\n\n/**\n * A React context to set options for all portals in a given subtree.\n * Do not use this PortalContext directly, instead use PortalProvider to set the options.\n */\nexport const PortalContext = createContext<PortalContextOptions>({});\n\n/**\n * Portal context provider.\n *\n * @see https://blueprintjs.com/docs/#core/context/portal-provider\n */\nexport const PortalProvider = ({\n    children,\n    portalClassName,\n    portalContainer,\n}: React.PropsWithChildren<PortalContextOptions>) => {\n    const contextOptions = useMemo<PortalContextOptions>(\n        () => ({\n            portalClassName,\n            portalContainer,\n        }),\n        [portalClassName, portalContainer],\n    );\n    return <PortalContext.Provider value={contextOptions}>{children}</PortalContext.Provider>;\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,aAAa,EAAEC,OAAO,QAAQ,OAAO;AAS9C;;;;AAIA,OAAO,MAAMC,aAAa,GAAGF,aAAa,CAAuB,EAAE,CAAC;AAEpE;;;;;AAKA,OAAO,MAAMG,cAAc,GAAGA,CAAC;EAC3BC,QAAQ;EACRC,eAAe;EACfC;AAAe,CAC6B,KAAI;EAChD,MAAMC,cAAc,GAAGN,OAAO,CAC1B,OAAO;IACHI,eAAe;IACfC;GACH,CAAC,EACF,CAACD,eAAe,EAAEC,eAAe,CAAC,CACrC;EACD,OAAOE,IAAA,CAACN,aAAa,CAACO,QAAQ;IAACC,KAAK,EAAEH,cAAc;IAAAH,QAAA,EAAGA;EAAQ,EAA0B;AAC7F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}