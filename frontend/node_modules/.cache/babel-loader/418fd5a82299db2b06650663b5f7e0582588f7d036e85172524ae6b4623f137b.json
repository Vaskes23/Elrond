{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Section card component.\n *\n * @see https://blueprintjs.com/docs/#core/components/section.section-card\n */\nexport const SectionCard = forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    padded = true,\n    ...htmlProps\n  } = props;\n  const classes = classNames(Classes.SECTION_CARD, {\n    [Classes.PADDED]: padded\n  }, className);\n  return _jsx(\"div\", {\n    className: classes,\n    ref: ref,\n    ...htmlProps,\n    children: children\n  });\n});\nSectionCard.displayName = `${DISPLAYNAME_PREFIX}.SectionCard`;","map":{"version":3,"names":["classNames","forwardRef","Classes","DISPLAYNAME_PREFIX","SectionCard","props","ref","className","children","padded","htmlProps","classes","SECTION_CARD","PADDED","_jsx","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/section/sectionCard.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type Props } from \"../../common/props\";\n\nexport interface SectionCardProps extends Props, HTMLDivProps, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Whether to apply visual padding inside the content container element.\n     *\n     * @default true\n     */\n    padded?: boolean;\n}\n\n/**\n * Section card component.\n *\n * @see https://blueprintjs.com/docs/#core/components/section.section-card\n */\nexport const SectionCard: React.FC<SectionCardProps> = forwardRef((props, ref) => {\n    const { className, children, padded = true, ...htmlProps } = props;\n    const classes = classNames(Classes.SECTION_CARD, { [Classes.PADDED]: padded }, className);\n    return (\n        <div className={classes} ref={ref} {...htmlProps}>\n            {children}\n        </div>\n    );\n});\nSectionCard.displayName = `${DISPLAYNAME_PREFIX}.SectionCard`;\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,QAAuC,oBAAoB;AAWtF;;;;;AAKA,OAAO,MAAMC,WAAW,GAA+BH,UAAU,CAAC,CAACI,KAAK,EAAEC,GAAG,KAAI;EAC7E,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,MAAM,GAAG,IAAI;IAAE,GAAGC;EAAS,CAAE,GAAGL,KAAK;EAClE,MAAMM,OAAO,GAAGX,UAAU,CAACE,OAAO,CAACU,YAAY,EAAE;IAAE,CAACV,OAAO,CAACW,MAAM,GAAGJ;EAAM,CAAE,EAAEF,SAAS,CAAC;EACzF,OACIO,IAAA;IAAKP,SAAS,EAAEI,OAAO;IAAEL,GAAG,EAAEA,GAAG;IAAA,GAAMI,SAAS;IAAAF,QAAA,EAC3CA;EAAQ,EACP;AAEd,CAAC,CAAC;AACFJ,WAAW,CAACW,WAAW,GAAG,GAAGZ,kBAAkB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}