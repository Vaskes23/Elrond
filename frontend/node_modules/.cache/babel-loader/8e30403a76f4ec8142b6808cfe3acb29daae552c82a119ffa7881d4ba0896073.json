{"ast":null,"code":"var _jsxFileName = \"/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport Header from './components/Header';\nimport ProductLibrary from './components/ProductLibrary';\nimport ProductDetails from './components/ProductDetails';\nimport AddProductModal from './components/AddProductModal';\nimport TariffAlerts from './components/TariffAlerts';\nimport BTIGenerator from './components/BTIGenerator';\nimport { exportToCSV, exportToJSON, exportToPDF, downloadFile } from './utils/exportUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showAlerts, setShowAlerts] = useState(false);\n  const [showBTIGenerator, setShowBTIGenerator] = useState(false);\n  const [alerts, setAlerts] = useState([]);\n\n  // Load products from localStorage on component mount\n  useEffect(() => {\n    const savedProducts = localStorage.getItem('hsComplianceProducts');\n    if (savedProducts) {\n      setProducts(JSON.parse(savedProducts));\n    }\n  }, []);\n\n  // Save products to localStorage whenever products change\n  useEffect(() => {\n    localStorage.setItem('hsComplianceProducts', JSON.stringify(products));\n  }, [products]);\n\n  // Generate demo alerts\n  useEffect(() => {\n    const demoAlerts = [{\n      id: 1,\n      type: 'tariff_change',\n      productId: 'steel-bolts',\n      message: 'New anti-dumping duty on steel screws',\n      severity: 'high',\n      date: new Date('2024-01-15')\n    }, {\n      id: 2,\n      type: 'hs_code_update',\n      productId: 'plastic-casings',\n      message: 'HS code 3926.90.98 updated for plastic casings',\n      severity: 'medium',\n      date: new Date('2024-01-10')\n    }];\n    setAlerts(demoAlerts);\n  }, []);\n  const handleExport = async format => {\n    if (!selectedProduct) return;\n    try {\n      let content, filename, mimeType;\n      switch (format) {\n        case 'csv':\n          content = exportToCSV([selectedProduct]);\n          filename = `product_${selectedProduct.name.replace(/\\s+/g, '_')}.csv`;\n          mimeType = 'text/csv';\n          break;\n        case 'json':\n          content = exportToJSON([selectedProduct]);\n          filename = `product_${selectedProduct.name.replace(/\\s+/g, '_')}.json`;\n          mimeType = 'application/json';\n          break;\n        case 'pdf':\n          content = await exportToPDF(selectedProduct);\n          filename = `product_${selectedProduct.name.replace(/\\s+/g, '_')}.txt`;\n          mimeType = 'text/plain';\n          break;\n        default:\n          return;\n      }\n      downloadFile(content, filename, mimeType);\n    } catch (error) {\n      console.error('Export failed:', error);\n    }\n  };\n  const addProduct = productData => {\n    const newProduct = {\n      id: Date.now().toString(),\n      name: productData.name,\n      description: productData.description,\n      category: productData.category,\n      dateAdded: new Date(),\n      hsCodes: generateHSCodes(productData.name),\n      dutyRates: generateDutyRates(),\n      citations: generateCitations(productData.name),\n      hasAlerts: false\n    };\n    setProducts(prev => [...prev, newProduct]);\n    setSelectedProduct(newProduct);\n    setShowAddModal(false);\n  };\n  const selectProduct = product => {\n    setSelectedProduct(product);\n  };\n  const generateHSCodes = productName => {\n    // Demo HS codes based on product type\n    const hsCodeMap = {\n      'steel': [{\n        code: '7318.15.80',\n        description: 'Screws, bolts and nuts, of iron or steel',\n        confidence: 95\n      }, {\n        code: '7318.15.90',\n        description: 'Other screws, bolts and nuts, of iron or steel',\n        confidence: 88\n      }, {\n        code: '7318.16.00',\n        description: 'Rivets, of iron or steel',\n        confidence: 75\n      }],\n      'plastic': [{\n        code: '3926.90.98',\n        description: 'Other articles of plastics',\n        confidence: 92\n      }, {\n        code: '3926.90.99',\n        description: 'Other articles of plastics, n.e.s.',\n        confidence: 85\n      }, {\n        code: '3926.90.90',\n        description: 'Other articles of plastics, n.e.s.',\n        confidence: 78\n      }],\n      'electronic': [{\n        code: '8504.40.95',\n        description: 'Static converters',\n        confidence: 90\n      }, {\n        code: '8504.40.99',\n        description: 'Other static converters',\n        confidence: 82\n      }, {\n        code: '8504.50.95',\n        description: 'Other inductors',\n        confidence: 70\n      }]\n    };\n    const productType = productName.toLowerCase();\n    if (productType.includes('steel') || productType.includes('bolt')) {\n      return hsCodeMap.steel;\n    } else if (productType.includes('plastic') || productType.includes('casing')) {\n      return hsCodeMap.plastic;\n    } else if (productType.includes('electronic') || productType.includes('charger') || productType.includes('laptop')) {\n      return hsCodeMap.electronic;\n    }\n    return hsCodeMap.steel; // Default\n  };\n  const generateDutyRates = () => {\n    return {\n      'EU': {\n        rate: '6.5%',\n        type: 'MFN'\n      },\n      'US': {\n        rate: '2.5%',\n        type: 'MFN'\n      },\n      'China': {\n        rate: '8.0%',\n        type: 'MFN'\n      }\n    };\n  };\n  const generateCitations = productName => {\n    return [{\n      source: 'EU TARIC',\n      reference: 'Commission Regulation (EU) 2023/1234',\n      excerpt: 'Classification of mechanical fasteners under heading 7318',\n      date: '2023-12-15'\n    }, {\n      source: 'WCO Explanatory Notes',\n      reference: 'EN 7318.15',\n      excerpt: 'Screws, bolts and nuts are classified according to their material and use',\n      date: '2023-11-20'\n    }];\n  };\n  const unreadAlertsCount = alerts.filter(alert => !alert.read).length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAddProduct: () => setShowAddModal(true),\n      onShowAlerts: () => setShowAlerts(true),\n      alertsCount: unreadAlertsCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ProductLibrary, {\n        products: products,\n        selectedProduct: selectedProduct,\n        onSelectProduct: selectProduct,\n        onAddProduct: () => setShowAddModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductDetails, {\n        product: selectedProduct,\n        onGenerateBTI: () => setShowBTIGenerator(true),\n        onExport: handleExport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(AddProductModal, {\n      onClose: () => setShowAddModal(false),\n      onAddProduct: addProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }, this), showAlerts && /*#__PURE__*/_jsxDEV(TariffAlerts, {\n      alerts: alerts,\n      onClose: () => setShowAlerts(false),\n      onMarkAsRead: alertId => {\n        setAlerts(prev => prev.map(alert => alert.id === alertId ? {\n          ...alert,\n          read: true\n        } : alert));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), showBTIGenerator && selectedProduct && /*#__PURE__*/_jsxDEV(BTIGenerator, {\n      product: selectedProduct,\n      onClose: () => setShowBTIGenerator(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WDH5wVMcmy7X++Jk2iuCg51bcFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","ProductLibrary","ProductDetails","AddProductModal","TariffAlerts","BTIGenerator","exportToCSV","exportToJSON","exportToPDF","downloadFile","jsxDEV","_jsxDEV","App","_s","products","setProducts","selectedProduct","setSelectedProduct","showAddModal","setShowAddModal","showAlerts","setShowAlerts","showBTIGenerator","setShowBTIGenerator","alerts","setAlerts","savedProducts","localStorage","getItem","JSON","parse","setItem","stringify","demoAlerts","id","type","productId","message","severity","date","Date","handleExport","format","content","filename","mimeType","name","replace","error","console","addProduct","productData","newProduct","now","toString","description","category","dateAdded","hsCodes","generateHSCodes","dutyRates","generateDutyRates","citations","generateCitations","hasAlerts","prev","selectProduct","product","productName","hsCodeMap","code","confidence","productType","toLowerCase","includes","steel","plastic","electronic","rate","source","reference","excerpt","unreadAlertsCount","filter","alert","read","length","className","children","onAddProduct","onShowAlerts","alertsCount","fileName","_jsxFileName","lineNumber","columnNumber","onSelectProduct","onGenerateBTI","onExport","onClose","onMarkAsRead","alertId","map","_c","$RefreshReg$"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport Header from './components/Header';\nimport ProductLibrary from './components/ProductLibrary';\nimport ProductDetails from './components/ProductDetails';\nimport AddProductModal from './components/AddProductModal';\nimport TariffAlerts from './components/TariffAlerts';\nimport BTIGenerator from './components/BTIGenerator';\nimport { exportToCSV, exportToJSON, exportToPDF, downloadFile } from './utils/exportUtils';\nimport './App.css';\n\nfunction App() {\n    const [products, setProducts] = useState([]);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [showAlerts, setShowAlerts] = useState(false);\n    const [showBTIGenerator, setShowBTIGenerator] = useState(false);\n    const [alerts, setAlerts] = useState([]);\n\n    // Load products from localStorage on component mount\n    useEffect(() => {\n        const savedProducts = localStorage.getItem('hsComplianceProducts');\n        if (savedProducts) {\n            setProducts(JSON.parse(savedProducts));\n        }\n    }, []);\n\n    // Save products to localStorage whenever products change\n    useEffect(() => {\n        localStorage.setItem('hsComplianceProducts', JSON.stringify(products));\n    }, [products]);\n\n    // Generate demo alerts\n    useEffect(() => {\n        const demoAlerts = [\n            {\n                id: 1,\n                type: 'tariff_change',\n                productId: 'steel-bolts',\n                message: 'New anti-dumping duty on steel screws',\n                severity: 'high',\n                date: new Date('2024-01-15')\n            },\n            {\n                id: 2,\n                type: 'hs_code_update',\n                productId: 'plastic-casings',\n                message: 'HS code 3926.90.98 updated for plastic casings',\n                severity: 'medium',\n                date: new Date('2024-01-10')\n            }\n        ];\n        setAlerts(demoAlerts);\n    }, []);\n\n    const handleExport = async (format) => {\n        if (!selectedProduct) return;\n\n        try {\n            let content, filename, mimeType;\n\n            switch (format) {\n                case 'csv':\n                    content = exportToCSV([selectedProduct]);\n                    filename = `product_${selectedProduct.name.replace(/\\s+/g, '_')}.csv`;\n                    mimeType = 'text/csv';\n                    break;\n                case 'json':\n                    content = exportToJSON([selectedProduct]);\n                    filename = `product_${selectedProduct.name.replace(/\\s+/g, '_')}.json`;\n                    mimeType = 'application/json';\n                    break;\n                case 'pdf':\n                    content = await exportToPDF(selectedProduct);\n                    filename = `product_${selectedProduct.name.replace(/\\s+/g, '_')}.txt`;\n                    mimeType = 'text/plain';\n                    break;\n                default:\n                    return;\n            }\n\n            downloadFile(content, filename, mimeType);\n        } catch (error) {\n            console.error('Export failed:', error);\n        }\n    };\n\n    const addProduct = (productData) => {\n        const newProduct = {\n            id: Date.now().toString(),\n            name: productData.name,\n            description: productData.description,\n            category: productData.category,\n            dateAdded: new Date(),\n            hsCodes: generateHSCodes(productData.name),\n            dutyRates: generateDutyRates(),\n            citations: generateCitations(productData.name),\n            hasAlerts: false\n        };\n\n        setProducts(prev => [...prev, newProduct]);\n        setSelectedProduct(newProduct);\n        setShowAddModal(false);\n    };\n\n    const selectProduct = (product) => {\n        setSelectedProduct(product);\n    };\n\n    const generateHSCodes = (productName) => {\n        // Demo HS codes based on product type\n        const hsCodeMap = {\n            'steel': [\n                { code: '7318.15.80', description: 'Screws, bolts and nuts, of iron or steel', confidence: 95 },\n                { code: '7318.15.90', description: 'Other screws, bolts and nuts, of iron or steel', confidence: 88 },\n                { code: '7318.16.00', description: 'Rivets, of iron or steel', confidence: 75 }\n            ],\n            'plastic': [\n                { code: '3926.90.98', description: 'Other articles of plastics', confidence: 92 },\n                { code: '3926.90.99', description: 'Other articles of plastics, n.e.s.', confidence: 85 },\n                { code: '3926.90.90', description: 'Other articles of plastics, n.e.s.', confidence: 78 }\n            ],\n            'electronic': [\n                { code: '8504.40.95', description: 'Static converters', confidence: 90 },\n                { code: '8504.40.99', description: 'Other static converters', confidence: 82 },\n                { code: '8504.50.95', description: 'Other inductors', confidence: 70 }\n            ]\n        };\n\n        const productType = productName.toLowerCase();\n        if (productType.includes('steel') || productType.includes('bolt')) {\n            return hsCodeMap.steel;\n        } else if (productType.includes('plastic') || productType.includes('casing')) {\n            return hsCodeMap.plastic;\n        } else if (productType.includes('electronic') || productType.includes('charger') || productType.includes('laptop')) {\n            return hsCodeMap.electronic;\n        }\n\n        return hsCodeMap.steel; // Default\n    };\n\n    const generateDutyRates = () => {\n        return {\n            'EU': { rate: '6.5%', type: 'MFN' },\n            'US': { rate: '2.5%', type: 'MFN' },\n            'China': { rate: '8.0%', type: 'MFN' }\n        };\n    };\n\n    const generateCitations = (productName) => {\n        return [\n            {\n                source: 'EU TARIC',\n                reference: 'Commission Regulation (EU) 2023/1234',\n                excerpt: 'Classification of mechanical fasteners under heading 7318',\n                date: '2023-12-15'\n            },\n            {\n                source: 'WCO Explanatory Notes',\n                reference: 'EN 7318.15',\n                excerpt: 'Screws, bolts and nuts are classified according to their material and use',\n                date: '2023-11-20'\n            }\n        ];\n    };\n\n    const unreadAlertsCount = alerts.filter(alert => !alert.read).length;\n\n    return (\n        <div className=\"app\">\n            <Header\n                onAddProduct={() => setShowAddModal(true)}\n                onShowAlerts={() => setShowAlerts(true)}\n                alertsCount={unreadAlertsCount}\n            />\n\n            <div className=\"main-content\">\n                <ProductLibrary\n                    products={products}\n                    selectedProduct={selectedProduct}\n                    onSelectProduct={selectProduct}\n                    onAddProduct={() => setShowAddModal(true)}\n                />\n\n                <ProductDetails\n                    product={selectedProduct}\n                    onGenerateBTI={() => setShowBTIGenerator(true)}\n                    onExport={handleExport}\n                />\n            </div>\n\n            {showAddModal && (\n                <AddProductModal\n                    onClose={() => setShowAddModal(false)}\n                    onAddProduct={addProduct}\n                />\n            )}\n\n            {showAlerts && (\n                <TariffAlerts\n                    alerts={alerts}\n                    onClose={() => setShowAlerts(false)}\n                    onMarkAsRead={(alertId) => {\n                        setAlerts(prev => prev.map(alert =>\n                            alert.id === alertId ? { ...alert, read: true } : alert\n                        ));\n                    }}\n                />\n            )}\n\n            {showBTIGenerator && selectedProduct && (\n                <BTIGenerator\n                    product={selectedProduct}\n                    onClose={() => setShowBTIGenerator(false)}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}