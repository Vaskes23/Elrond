{"ast":null,"code":"/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { OVERLAY_END_FOCUS_TRAP, OVERLAY_START_FOCUS_TRAP } from \"../../common/classes\";\nimport { getRef } from \"../../common/refs\";\nimport { getFocusableElements } from \"../../common/utils/domUtils\";\n/**\n * Returns the keyboard-focusable elements inside a given container element, ignoring focus traps\n * rendered by Overlay/Overlay2.\n */\nexport function getKeyboardFocusableElements(container) {\n  const containerElement = getRef(container);\n  const focusableElements = containerElement != null ?\n  // Note: Order may not be correct if children elements use tabindex values > 0.\n  getFocusableElements(containerElement) : [];\n  return focusableElements.filter(el => !el.classList.contains(OVERLAY_START_FOCUS_TRAP) && !el.classList.contains(OVERLAY_END_FOCUS_TRAP));\n}","map":{"version":3,"names":["OVERLAY_END_FOCUS_TRAP","OVERLAY_START_FOCUS_TRAP","getRef","getFocusableElements","getKeyboardFocusableElements","container","containerElement","focusableElements","filter","el","classList","contains"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/overlay/overlayUtils.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OVERLAY_END_FOCUS_TRAP, OVERLAY_START_FOCUS_TRAP } from \"../../common/classes\";\nimport { getRef } from \"../../common/refs\";\nimport { getFocusableElements } from \"../../common/utils/domUtils\";\n\n/**\n * Returns the keyboard-focusable elements inside a given container element, ignoring focus traps\n * rendered by Overlay/Overlay2.\n */\nexport function getKeyboardFocusableElements(container: HTMLElement | React.RefObject<HTMLElement>): HTMLElement[] {\n    const containerElement = getRef(container);\n\n    const focusableElements =\n        containerElement != null\n            ? // Note: Order may not be correct if children elements use tabindex values > 0.\n              getFocusableElements(containerElement)\n            : [];\n\n    return focusableElements.filter(\n        el => !el.classList.contains(OVERLAY_START_FOCUS_TRAP) && !el.classList.contains(OVERLAY_END_FOCUS_TRAP),\n    );\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,sBAAsB,EAAEC,wBAAwB,QAAQ,sBAAsB;AACvF,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,oBAAoB,QAAQ,6BAA6B;AAElE;;;;AAIA,OAAM,SAAUC,4BAA4BA,CAACC,SAAqD;EAC9F,MAAMC,gBAAgB,GAAGJ,MAAM,CAACG,SAAS,CAAC;EAE1C,MAAME,iBAAiB,GACnBD,gBAAgB,IAAI,IAAI;EAClB;EACAH,oBAAoB,CAACG,gBAAgB,CAAC,GACtC,EAAE;EAEZ,OAAOC,iBAAiB,CAACC,MAAM,CAC3BC,EAAE,IAAI,CAACA,EAAE,CAACC,SAAS,CAACC,QAAQ,CAACV,wBAAwB,CAAC,IAAI,CAACQ,EAAE,CAACC,SAAS,CAACC,QAAQ,CAACX,sBAAsB,CAAC,CAC3G;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}