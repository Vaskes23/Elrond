{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { KeyComboTag } from \"./keyComboTag\";\n/**\n * Hotkey component used to display a hotkey in the HotkeysDialog.\n * Should not be used by consumers directly.\n */\nexport class Hotkey extends AbstractPureComponent {\n  render() {\n    const {\n      label,\n      className,\n      ...spreadableProps\n    } = this.props;\n    const rootClasses = classNames(Classes.HOTKEY, className);\n    return _jsxs(\"div\", {\n      className: rootClasses,\n      children: [_jsx(\"div\", {\n        className: Classes.HOTKEY_LABEL,\n        children: label\n      }), _jsx(KeyComboTag, {\n        ...spreadableProps\n      })]\n    });\n  }\n  validateProps(props) {\n    if (props.global !== true && props.group == null) {\n      console.error(\"non-global Hotkeys must define a group\");\n    }\n  }\n}\nHotkey.displayName = `${DISPLAYNAME_PREFIX}.Hotkey`;\nHotkey.defaultProps = {\n  allowInInput: false,\n  disabled: false,\n  global: false,\n  preventDefault: false,\n  stopPropagation: false\n};","map":{"version":3,"names":["classNames","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","KeyComboTag","Hotkey","render","label","className","spreadableProps","props","rootClasses","HOTKEY","_jsxs","children","_jsx","HOTKEY_LABEL","validateProps","global","group","console","error","displayName","defaultProps","allowInInput","disabled","preventDefault","stopPropagation"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/hotkeys/hotkey.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, type Props } from \"../../common\";\nimport type { HotkeyConfig } from \"../../hooks\";\n\nimport { KeyComboTag } from \"./keyComboTag\";\n\nexport type HotkeyProps = Props & HotkeyConfig;\n\n/**\n * Hotkey component used to display a hotkey in the HotkeysDialog.\n * Should not be used by consumers directly.\n */\nexport class Hotkey extends AbstractPureComponent<HotkeyProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Hotkey`;\n\n    public static defaultProps = {\n        allowInInput: false,\n        disabled: false,\n        global: false,\n        preventDefault: false,\n        stopPropagation: false,\n    };\n\n    public render() {\n        const { label, className, ...spreadableProps } = this.props;\n\n        const rootClasses = classNames(Classes.HOTKEY, className);\n        return (\n            <div className={rootClasses}>\n                <div className={Classes.HOTKEY_LABEL}>{label}</div>\n                <KeyComboTag {...spreadableProps} />\n            </div>\n        );\n    }\n\n    protected validateProps(props: HotkeyProps) {\n        if (props.global !== true && props.group == null) {\n            console.error(\"non-global Hotkeys must define a group\");\n        }\n    }\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,qBAAqB,EAAEC,OAAO,EAAEC,kBAAkB,QAAoB,cAAc;AAG7F,SAASC,WAAW,QAAQ,eAAe;AAI3C;;;;AAIA,OAAM,MAAOC,MAAO,SAAQJ,qBAAkC;EAWnDK,MAAMA,CAAA;IACT,MAAM;MAAEC,KAAK;MAAEC,SAAS;MAAE,GAAGC;IAAe,CAAE,GAAG,IAAI,CAACC,KAAK;IAE3D,MAAMC,WAAW,GAAGX,UAAU,CAACE,OAAO,CAACU,MAAM,EAAEJ,SAAS,CAAC;IACzD,OACIK,KAAA;MAAKL,SAAS,EAAEG,WAAW;MAAAG,QAAA,GACvBC,IAAA;QAAKP,SAAS,EAAEN,OAAO,CAACc,YAAY;QAAAF,QAAA,EAAGP;MAAK,EAAO,EACnDQ,IAAA,CAACX,WAAW;QAAA,GAAKK;MAAe,EAAI;IAAA,EAClC;EAEd;EAEUQ,aAAaA,CAACP,KAAkB;IACtC,IAAIA,KAAK,CAACQ,MAAM,KAAK,IAAI,IAAIR,KAAK,CAACS,KAAK,IAAI,IAAI,EAAE;MAC9CC,OAAO,CAACC,KAAK,CAAC,wCAAwC,CAAC;IAC3D;EACJ;;AA1BchB,MAAA,CAAAiB,WAAW,GAAG,GAAGnB,kBAAkB,SAAS;AAE5CE,MAAA,CAAAkB,YAAY,GAAG;EACzBC,YAAY,EAAE,KAAK;EACnBC,QAAQ,EAAE,KAAK;EACfP,MAAM,EAAE,KAAK;EACbQ,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE;CACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}