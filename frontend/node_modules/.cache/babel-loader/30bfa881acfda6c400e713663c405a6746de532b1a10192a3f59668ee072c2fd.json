{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { createElement } from \"react\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n/**\n * Divider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/divider\n */\nexport const Divider = ({\n  className,\n  compact = false,\n  tagName = \"div\",\n  ...htmlProps\n}) => {\n  const classes = classNames(Classes.DIVIDER, {\n    [Classes.COMPACT]: compact\n  }, className);\n  return createElement(tagName, {\n    ...htmlProps,\n    className: classes\n  });\n};\nDivider.displayName = `${DISPLAYNAME_PREFIX}.Divider`;","map":{"version":3,"names":["classNames","createElement","Classes","DISPLAYNAME_PREFIX","Divider","className","compact","tagName","htmlProps","classes","DIVIDER","COMPACT","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/divider/divider.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { createElement } from \"react\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type Props } from \"../../common/props\";\n\nexport interface DividerProps extends Props, React.HTMLAttributes<HTMLElement> {\n    /**\n     * If true, makes the Divider flush with adjacent content.\n     *\n     * @default false\n     */\n    compact?: boolean;\n\n    /**\n     * HTML tag to use for element.\n     *\n     * @default \"div\"\n     */\n    tagName?: keyof React.JSX.IntrinsicElements;\n}\n\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\n\n/**\n * Divider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/divider\n */\nexport const Divider: React.FC<DividerProps> = ({ className, compact = false, tagName = \"div\", ...htmlProps }) => {\n    const classes = classNames(Classes.DIVIDER, { [Classes.COMPACT]: compact }, className);\n    return createElement(tagName, {\n        ...htmlProps,\n        className: classes,\n    });\n};\n\nDivider.displayName = `${DISPLAYNAME_PREFIX}.Divider`;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,aAAa,QAAQ,OAAO;AAErC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,kBAAkB,QAAoB,oBAAoB;AAkBnE;AACA;AAEA;;;;;AAKA,OAAO,MAAMC,OAAO,GAA2BA,CAAC;EAAEC,SAAS;EAAEC,OAAO,GAAG,KAAK;EAAEC,OAAO,GAAG,KAAK;EAAE,GAAGC;AAAS,CAAE,KAAI;EAC7G,MAAMC,OAAO,GAAGT,UAAU,CAACE,OAAO,CAACQ,OAAO,EAAE;IAAE,CAACR,OAAO,CAACS,OAAO,GAAGL;EAAO,CAAE,EAAED,SAAS,CAAC;EACtF,OAAOJ,aAAa,CAACM,OAAO,EAAE;IAC1B,GAAGC,SAAS;IACZH,SAAS,EAAEI;GACd,CAAC;AACN,CAAC;AAEDL,OAAO,CAACQ,WAAW,GAAG,GAAGT,kBAAkB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}