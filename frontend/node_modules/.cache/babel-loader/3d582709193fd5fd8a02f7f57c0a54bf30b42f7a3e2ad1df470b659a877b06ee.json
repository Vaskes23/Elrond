{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AbstractPureComponent, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { MultiSlider, MultiSliderHandle } from \"./multiSlider\";\n/**\n * Slider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/sliders.slider\n */\nexport class Slider extends AbstractPureComponent {\n  render() {\n    const {\n      initialValue,\n      intent,\n      value,\n      onChange,\n      onRelease,\n      handleHtmlProps,\n      ...props\n    } = this.props;\n    return _jsxs(MultiSlider, {\n      ...props,\n      children: [_jsx(MultiSliderHandle, {\n        value: value,\n        intentAfter: value < initialValue ? intent : undefined,\n        intentBefore: value > initialValue ? intent : undefined,\n        onChange: onChange,\n        onRelease: onRelease,\n        htmlProps: handleHtmlProps\n      }), _jsx(MultiSliderHandle, {\n        value: initialValue,\n        interactionKind: \"none\"\n      })]\n    });\n  }\n}\nSlider.defaultProps = {\n  ...MultiSlider.defaultSliderProps,\n  initialValue: 0,\n  intent: Intent.PRIMARY,\n  value: 0\n};\nSlider.displayName = `${DISPLAYNAME_PREFIX}.Slider`;","map":{"version":3,"names":["AbstractPureComponent","Intent","DISPLAYNAME_PREFIX","MultiSlider","MultiSliderHandle","Slider","render","initialValue","intent","value","onChange","onRelease","handleHtmlProps","props","_jsxs","children","_jsx","intentAfter","undefined","intentBefore","htmlProps","interactionKind","defaultProps","defaultSliderProps","PRIMARY","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/slider/slider.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AbstractPureComponent, Intent } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n\nimport type { HandleHtmlProps } from \"./handleProps\";\nimport { MultiSlider, MultiSliderHandle, type SliderBaseProps } from \"./multiSlider\";\n\nexport interface SliderProps extends SliderBaseProps {\n    /**\n     * Initial value of the slider. This determines the other end of the\n     * track fill: from `initialValue` to `value`.\n     *\n     * @default 0\n     */\n    initialValue?: number;\n\n    /**\n     * Value of slider.\n     *\n     * @default 0\n     */\n    value?: number;\n\n    /** Callback invoked when the value changes. */\n    onChange?(value: number): void;\n\n    /** Callback invoked when the handle is released. */\n    onRelease?(value: number): void;\n\n    /** A limited subset of HTML props to apply to the slider Handle */\n    handleHtmlProps?: HandleHtmlProps;\n}\n\n/**\n * Slider component.\n *\n * @see https://blueprintjs.com/docs/#core/components/sliders.slider\n */\nexport class Slider extends AbstractPureComponent<SliderProps> {\n    public static defaultProps: SliderProps = {\n        ...MultiSlider.defaultSliderProps,\n        initialValue: 0,\n        intent: Intent.PRIMARY,\n        value: 0,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Slider`;\n\n    public render() {\n        const { initialValue, intent, value, onChange, onRelease, handleHtmlProps, ...props } = this.props;\n        return (\n            <MultiSlider {...props}>\n                <MultiSliderHandle\n                    value={value!}\n                    intentAfter={value! < initialValue! ? intent : undefined}\n                    intentBefore={value! > initialValue! ? intent : undefined}\n                    onChange={onChange}\n                    onRelease={onRelease}\n                    htmlProps={handleHtmlProps}\n                />\n                <MultiSliderHandle value={initialValue!} interactionKind=\"none\" />\n            </MultiSlider>\n        );\n    }\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,qBAAqB,EAAEC,MAAM,QAAQ,cAAc;AAC5D,SAASC,kBAAkB,QAAQ,oBAAoB;AAGvD,SAASC,WAAW,EAAEC,iBAAiB,QAA8B,eAAe;AA4BpF;;;;;AAKA,OAAM,MAAOC,MAAO,SAAQL,qBAAkC;EAUnDM,MAAMA,CAAA;IACT,MAAM;MAAEC,YAAY;MAAEC,MAAM;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,SAAS;MAAEC,eAAe;MAAE,GAAGC;IAAK,CAAE,GAAG,IAAI,CAACA,KAAK;IAClG,OACIC,KAAA,CAACX,WAAW;MAAA,GAAKU,KAAK;MAAAE,QAAA,GAClBC,IAAA,CAACZ,iBAAiB;QACdK,KAAK,EAAEA,KAAM;QACbQ,WAAW,EAAER,KAAM,GAAGF,YAAa,GAAGC,MAAM,GAAGU,SAAS;QACxDC,YAAY,EAAEV,KAAM,GAAGF,YAAa,GAAGC,MAAM,GAAGU,SAAS;QACzDR,QAAQ,EAAEA,QAAQ;QAClBC,SAAS,EAAEA,SAAS;QACpBS,SAAS,EAAER;MAAe,EAC5B,EACFI,IAAA,CAACZ,iBAAiB;QAACK,KAAK,EAAEF,YAAa;QAAEc,eAAe,EAAC;MAAM,EAAG;IAAA,EACxD;EAEtB;;AAxBchB,MAAA,CAAAiB,YAAY,GAAgB;EACtC,GAAGnB,WAAW,CAACoB,kBAAkB;EACjChB,YAAY,EAAE,CAAC;EACfC,MAAM,EAAEP,MAAM,CAACuB,OAAO;EACtBf,KAAK,EAAE;CACV;AAEaJ,MAAA,CAAAoB,WAAW,GAAG,GAAGvB,kBAAkB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}