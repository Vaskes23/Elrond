{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { forwardRef, useCallback, useEffect, useState } from \"react\";\nimport { Cross } from \"@blueprintjs/icons\";\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Toast component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nexport const Toast = forwardRef((props, ref) => {\n  const {\n    action,\n    className,\n    icon,\n    intent,\n    isCloseButtonShown = true,\n    message,\n    onDismiss,\n    timeout = 5000\n  } = props;\n  const [isTimeoutStarted, setIsTimeoutStarted] = useState(false);\n  const startTimeout = useCallback(() => setIsTimeoutStarted(true), []);\n  const clearTimeout = useCallback(() => setIsTimeoutStarted(false), []);\n  // Per docs: \"Providing a value less than or equal to 0 will disable the timeout (this is discouraged).\"\n  const isTimeoutEnabled = timeout != null && timeout > 0;\n  // timeout is triggered & cancelled by updating `isTimeoutStarted` state\n  useTimeout(() => {\n    triggerDismiss(true);\n  }, isTimeoutStarted && isTimeoutEnabled ? timeout : null);\n  // start timeout on mount or change, cancel on unmount\n  useEffect(() => {\n    if (isTimeoutEnabled) {\n      startTimeout();\n    } else {\n      clearTimeout();\n    }\n    return clearTimeout;\n  }, [clearTimeout, startTimeout, isTimeoutEnabled, timeout]);\n  const triggerDismiss = useCallback(didTimeoutExpire => {\n    clearTimeout();\n    onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss(didTimeoutExpire);\n  }, [clearTimeout, onDismiss]);\n  const handleCloseClick = useCallback(() => triggerDismiss(false), [triggerDismiss]);\n  const handleActionClick = useCallback(e => {\n    var _a;\n    (_a = action === null || action === void 0 ? void 0 : action.onClick) === null || _a === void 0 ? void 0 : _a.call(action, e);\n    triggerDismiss(false);\n  }, [action, triggerDismiss]);\n  return _jsxs(\"div\", {\n    className: classNames(Classes.TOAST, Classes.intentClass(intent), className),\n    // Pause timeouts if users are hovering over or click on the toast. The toast may have\n    // actions the user wants to click. It'd be a poor experience to \"pull the toast\" out\n    // from under them.\n    onBlur: startTimeout,\n    onFocus: clearTimeout,\n    onMouseEnter: clearTimeout,\n    onMouseLeave: startTimeout,\n    ref: ref,\n    tabIndex: 0,\n    children: [_jsx(Icon, {\n      icon: icon\n    }), _jsx(\"span\", {\n      className: Classes.TOAST_MESSAGE,\n      role: \"alert\",\n      children: message\n    }), _jsxs(ButtonGroup, {\n      variant: \"minimal\",\n      children: [action && _jsx(AnchorButton, {\n        ...action,\n        intent: undefined,\n        onClick: handleActionClick\n      }), isCloseButtonShown && _jsx(Button, {\n        \"aria-label\": \"Close\",\n        icon: _jsx(Cross, {}),\n        onClick: handleCloseClick\n      })]\n    })]\n  });\n});\nToast.displayName = `${DISPLAYNAME_PREFIX}.Toast`;\n/** @deprecated Use `Toast` instead */\nexport const Toast2 = Toast;","map":{"version":3,"names":["classNames","forwardRef","useCallback","useEffect","useState","Cross","Classes","DISPLAYNAME_PREFIX","useTimeout","ButtonGroup","AnchorButton","Button","Icon","Toast","props","ref","action","className","icon","intent","isCloseButtonShown","message","onDismiss","timeout","isTimeoutStarted","setIsTimeoutStarted","startTimeout","clearTimeout","isTimeoutEnabled","triggerDismiss","didTimeoutExpire","handleCloseClick","handleActionClick","e","_a","onClick","call","_jsxs","TOAST","intentClass","onBlur","onFocus","onMouseEnter","onMouseLeave","tabIndex","children","_jsx","TOAST_MESSAGE","role","variant","undefined","displayName","Toast2"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/toast/toast.tsx"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { forwardRef, useCallback, useEffect, useState } from \"react\";\n\nimport { Cross } from \"@blueprintjs/icons\";\n\nimport { Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { ButtonGroup } from \"../button/buttonGroup\";\nimport { AnchorButton, Button } from \"../button/buttons\";\nimport { Icon } from \"../icon/icon\";\n\nimport type { ToastProps } from \"./toastProps\";\n\n/**\n * Toast component.\n *\n * @see https://blueprintjs.com/docs/#core/components/toast\n */\nexport const Toast = forwardRef<HTMLDivElement, ToastProps>((props, ref) => {\n    const { action, className, icon, intent, isCloseButtonShown = true, message, onDismiss, timeout = 5000 } = props;\n\n    const [isTimeoutStarted, setIsTimeoutStarted] = useState(false);\n    const startTimeout = useCallback(() => setIsTimeoutStarted(true), []);\n    const clearTimeout = useCallback(() => setIsTimeoutStarted(false), []);\n\n    // Per docs: \"Providing a value less than or equal to 0 will disable the timeout (this is discouraged).\"\n    const isTimeoutEnabled = timeout != null && timeout > 0;\n\n    // timeout is triggered & cancelled by updating `isTimeoutStarted` state\n    useTimeout(\n        () => {\n            triggerDismiss(true);\n        },\n        isTimeoutStarted && isTimeoutEnabled ? timeout : null,\n    );\n\n    // start timeout on mount or change, cancel on unmount\n    useEffect(() => {\n        if (isTimeoutEnabled) {\n            startTimeout();\n        } else {\n            clearTimeout();\n        }\n        return clearTimeout;\n    }, [clearTimeout, startTimeout, isTimeoutEnabled, timeout]);\n\n    const triggerDismiss = useCallback(\n        (didTimeoutExpire: boolean) => {\n            clearTimeout();\n            onDismiss?.(didTimeoutExpire);\n        },\n        [clearTimeout, onDismiss],\n    );\n\n    const handleCloseClick = useCallback(() => triggerDismiss(false), [triggerDismiss]);\n\n    const handleActionClick = useCallback(\n        (e: React.MouseEvent<HTMLElement>) => {\n            action?.onClick?.(e);\n            triggerDismiss(false);\n        },\n        [action, triggerDismiss],\n    );\n\n    return (\n        <div\n            className={classNames(Classes.TOAST, Classes.intentClass(intent), className)}\n            // Pause timeouts if users are hovering over or click on the toast. The toast may have\n            // actions the user wants to click. It'd be a poor experience to \"pull the toast\" out\n            // from under them.\n            onBlur={startTimeout}\n            onFocus={clearTimeout}\n            onMouseEnter={clearTimeout}\n            onMouseLeave={startTimeout}\n            ref={ref}\n            tabIndex={0}\n        >\n            <Icon icon={icon} />\n            <span className={Classes.TOAST_MESSAGE} role=\"alert\">\n                {message}\n            </span>\n            <ButtonGroup variant=\"minimal\">\n                {action && <AnchorButton {...action} intent={undefined} onClick={handleActionClick} />}\n                {isCloseButtonShown && <Button aria-label=\"Close\" icon={<Cross />} onClick={handleCloseClick} />}\n            </ButtonGroup>\n        </div>\n    );\n});\nToast.displayName = `${DISPLAYNAME_PREFIX}.Toast`;\n\n/** @deprecated Use `Toast` instead */\nexport const Toast2 = Toast;\nexport type Toast2 = typeof Toast;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}