{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { HotkeysProvider } from \"./hotkeys/hotkeysProvider\";\nimport { OverlaysProvider } from \"./overlays/overlaysProvider\";\nimport { PortalProvider } from \"./portal/portalProvider\";\n/**\n * Composite Blueprint context provider which enables & manages various global behaviors of Blueprint applications.\n *\n * @see https://blueprintjs.com/docs/#core/context/blueprint-provider\n */\nexport const BlueprintProvider = ({\n  children,\n  hotkeysProviderValue,\n  ...props\n}) => {\n  return _jsx(PortalProvider, {\n    ...props,\n    children: _jsx(OverlaysProvider, {\n      children: _jsx(HotkeysProvider, {\n        value: hotkeysProviderValue,\n        ...props,\n        children: children\n      })\n    })\n  });\n};","map":{"version":3,"names":["HotkeysProvider","OverlaysProvider","PortalProvider","BlueprintProvider","children","hotkeysProviderValue","props","_jsx","value"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/context/blueprintProvider.tsx"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HotkeysProvider, type HotkeysProviderProps } from \"./hotkeys/hotkeysProvider\";\nimport { OverlaysProvider, type OverlaysProviderProps } from \"./overlays/overlaysProvider\";\nimport { type PortalContextOptions, PortalProvider } from \"./portal/portalProvider\";\n\n// for some props interfaces, it helps to prefix their property names with the name of the provider\n// to avoid any ambiguity in the API\ntype HotkeysProviderPrefix<T> = {\n    [Property in keyof T as `hotkeysProvider${Capitalize<string & Property>}`]: T[Property];\n};\n\nexport interface BlueprintProviderProps\n    extends OverlaysProviderProps,\n        PortalContextOptions,\n        HotkeysProviderPrefix<HotkeysProviderProps> {\n    // no props of its own, `children` comes from `OverlaysProviderProps`\n}\n\n/**\n * Composite Blueprint context provider which enables & manages various global behaviors of Blueprint applications.\n *\n * @see https://blueprintjs.com/docs/#core/context/blueprint-provider\n */\nexport const BlueprintProvider = ({ children, hotkeysProviderValue, ...props }: BlueprintProviderProps) => {\n    return (\n        <PortalProvider {...props}>\n            <OverlaysProvider>\n                <HotkeysProvider value={hotkeysProviderValue} {...props}>\n                    {children}\n                </HotkeysProvider>\n            </OverlaysProvider>\n        </PortalProvider>\n    );\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,eAAe,QAAmC,2BAA2B;AACtF,SAASC,gBAAgB,QAAoC,6BAA6B;AAC1F,SAAoCC,cAAc,QAAQ,yBAAyB;AAenF;;;;;AAKA,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,oBAAoB;EAAE,GAAGC;AAAK,CAA0B,KAAI;EACtG,OACIC,IAAA,CAACL,cAAc;IAAA,GAAKI,KAAK;IAAAF,QAAA,EACrBG,IAAA,CAACN,gBAAgB;MAAAG,QAAA,EACbG,IAAA,CAACP,eAAe;QAACQ,KAAK,EAAEH,oBAAoB;QAAA,GAAMC,KAAK;QAAAF,QAAA,EAClDA;MAAQ;IACK;EACH,EACN;AAEzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}