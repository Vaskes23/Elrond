{"ast":null,"code":"/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether the keyboard event was triggered by Enter or Space, the two keys that are expected to trigger\n * interactive elements like buttons.\n */\nexport function isKeyboardClick(event) {\n  return event.key === \"Enter\" || event.key === \" \";\n}\nconst ARROW_KEYS = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"];\nexport function isArrowKey(event) {\n  return ARROW_KEYS.includes(event.key);\n}\n/** Direction multiplier */\nexport function getArrowKeyDirection(event, /** Keys that result in a return of -1 */\nnegativeKeys, /** Keys that result in a return of 1 */\npositiveKeys) {\n  if (negativeKeys.includes(event.key)) {\n    return -1;\n  } else if (positiveKeys.includes(event.key)) {\n    return 1;\n  }\n  return undefined;\n}","map":{"version":3,"names":["isKeyboardClick","event","key","ARROW_KEYS","isArrowKey","includes","getArrowKeyDirection","negativeKeys","positiveKeys","undefined"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/common/utils/keyboardUtils.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns whether the keyboard event was triggered by Enter or Space, the two keys that are expected to trigger\n * interactive elements like buttons.\n */\nexport function isKeyboardClick(event: React.KeyboardEvent<HTMLElement>) {\n    return event.key === \"Enter\" || event.key === \" \";\n}\n\nconst ARROW_KEYS = [\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"] as const;\ntype ArrowKey = (typeof ARROW_KEYS)[number];\n\nexport function isArrowKey(event: React.KeyboardEvent<HTMLElement>) {\n    return ARROW_KEYS.includes(event.key as ArrowKey);\n}\n\n/** Direction multiplier */\nexport function getArrowKeyDirection(\n    event: React.KeyboardEvent<HTMLElement>,\n    /** Keys that result in a return of -1 */\n    negativeKeys: ArrowKey[],\n    /** Keys that result in a return of 1 */\n    positiveKeys: ArrowKey[],\n) {\n    if (negativeKeys.includes(event.key as ArrowKey)) {\n        return -1 as const;\n    } else if (positiveKeys.includes(event.key as ArrowKey)) {\n        return 1 as const;\n    }\n    return undefined;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;;;;AAIA,OAAM,SAAUA,eAAeA,CAACC,KAAuC;EACnE,OAAOA,KAAK,CAACC,GAAG,KAAK,OAAO,IAAID,KAAK,CAACC,GAAG,KAAK,GAAG;AACrD;AAEA,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAU;AAG/E,OAAM,SAAUC,UAAUA,CAACH,KAAuC;EAC9D,OAAOE,UAAU,CAACE,QAAQ,CAACJ,KAAK,CAACC,GAAe,CAAC;AACrD;AAEA;AACA,OAAM,SAAUI,oBAAoBA,CAChCL,KAAuC,EACvC;AACAM,YAAwB,EACxB;AACAC,YAAwB;EAExB,IAAID,YAAY,CAACF,QAAQ,CAACJ,KAAK,CAACC,GAAe,CAAC,EAAE;IAC9C,OAAO,CAAC,CAAU;EACtB,CAAC,MAAM,IAAIM,YAAY,CAACH,QAAQ,CAACJ,KAAK,CAACC,GAAe,CAAC,EAAE;IACrD,OAAO,CAAU;EACrB;EACA,OAAOO,SAAS;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}