{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\nimport { Classes, Elevation } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Card component.\n *\n * @see https://blueprintjs.com/docs/#core/components/card\n */\nexport const Card = forwardRef((props, ref) => {\n  const {\n    className,\n    elevation = Elevation.ZERO,\n    interactive = false,\n    selected,\n    compact,\n    ...htmlProps\n  } = props;\n  const classes = classNames(className, Classes.CARD, Classes.elevationClass(elevation), {\n    [Classes.INTERACTIVE]: interactive,\n    [Classes.COMPACT]: compact,\n    [Classes.SELECTED]: selected\n  });\n  return _jsx(\"div\", {\n    className: classes,\n    ref: ref,\n    ...htmlProps\n  });\n});\nCard.displayName = `${DISPLAYNAME_PREFIX}.Card`;","map":{"version":3,"names":["classNames","forwardRef","Classes","Elevation","DISPLAYNAME_PREFIX","Card","props","ref","className","elevation","ZERO","interactive","selected","compact","htmlProps","classes","CARD","elevationClass","INTERACTIVE","COMPACT","SELECTED","_jsx","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/card/card.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nimport { Classes, Elevation } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type Props } from \"../../common/props\";\n\nexport interface CardProps extends Props, HTMLDivProps, React.RefAttributes<HTMLDivElement> {\n    /**\n     * Controls the intensity of the drop shadow beneath the card: the higher\n     * the elevation, the higher the drop shadow. At elevation `0`, no drop\n     * shadow is applied.\n     *\n     * @default 0\n     */\n    elevation?: Elevation;\n\n    /**\n     * Whether the card should respond to user interactions. If set to `true`,\n     * hovering over the card will increase the card's elevation\n     * and change the mouse cursor to a pointer.\n     *\n     * Recommended when `onClick` is also defined.\n     *\n     * @default false\n     */\n    interactive?: boolean;\n\n    /**\n     * Whether this card should appear selected.\n     *\n     * @default undefined\n     */\n    selected?: boolean;\n\n    /**\n     * Whether this component should use compact styles with reduced visual padding.\n     *\n     * @default false\n     */\n    compact?: boolean;\n\n    /**\n     * Callback invoked when the card is clicked.\n     * Recommended when `interactive` is `true`.\n     */\n    onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\n/**\n * Card component.\n *\n * @see https://blueprintjs.com/docs/#core/components/card\n */\nexport const Card: React.FC<CardProps> = forwardRef((props, ref) => {\n    const { className, elevation = Elevation.ZERO, interactive = false, selected, compact, ...htmlProps } = props;\n    const classes = classNames(className, Classes.CARD, Classes.elevationClass(elevation!), {\n        [Classes.INTERACTIVE]: interactive,\n        [Classes.COMPACT]: compact,\n        [Classes.SELECTED]: selected,\n    });\n    return <div className={classes} ref={ref} {...htmlProps} />;\n});\nCard.displayName = `${DISPLAYNAME_PREFIX}.Card`;\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,OAAO,EAAEC,SAAS,QAAQ,cAAc;AACjD,SAASC,kBAAkB,QAAuC,oBAAoB;AA4CtF;;;;;AAKA,OAAO,MAAMC,IAAI,GAAwBJ,UAAU,CAAC,CAACK,KAAK,EAAEC,GAAG,KAAI;EAC/D,MAAM;IAAEC,SAAS;IAAEC,SAAS,GAAGN,SAAS,CAACO,IAAI;IAAEC,WAAW,GAAG,KAAK;IAAEC,QAAQ;IAAEC,OAAO;IAAE,GAAGC;EAAS,CAAE,GAAGR,KAAK;EAC7G,MAAMS,OAAO,GAAGf,UAAU,CAACQ,SAAS,EAAEN,OAAO,CAACc,IAAI,EAAEd,OAAO,CAACe,cAAc,CAACR,SAAU,CAAC,EAAE;IACpF,CAACP,OAAO,CAACgB,WAAW,GAAGP,WAAW;IAClC,CAACT,OAAO,CAACiB,OAAO,GAAGN,OAAO;IAC1B,CAACX,OAAO,CAACkB,QAAQ,GAAGR;GACvB,CAAC;EACF,OAAOS,IAAA;IAAKb,SAAS,EAAEO,OAAO;IAAER,GAAG,EAAEA,GAAG;IAAA,GAAMO;EAAS,EAAI;AAC/D,CAAC,CAAC;AACFT,IAAI,CAACiB,WAAW,GAAG,GAAGlB,kBAAkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}