{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\n/**\n * Tab component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tabs.tab\n */\nexport class Tab extends AbstractPureComponent {\n  // this component is never rendered directly; see Tabs#renderTabPanel()\n  /* istanbul ignore next */\n  render() {\n    const {\n      className,\n      panel\n    } = this.props;\n    return _jsx(\"div\", {\n      className: classNames(Classes.TAB_PANEL, className),\n      role: \"tablist\",\n      children: isFunction(panel) ? panel({\n        tabPanelId: \"\",\n        tabTitleId: \"\"\n      }) : panel\n    });\n  }\n}\nTab.defaultProps = {\n  disabled: false\n};\nTab.displayName = `${DISPLAYNAME_PREFIX}.Tab`;","map":{"version":3,"names":["classNames","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","isFunction","Tab","render","className","panel","props","_jsx","TAB_PANEL","role","children","tabPanelId","tabTitleId","defaultProps","disabled","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/tabs/tab.tsx"],"sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport type { IconName } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX, type HTMLDivProps, type MaybeElement, type Props } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\nimport type { TagProps } from \"../tag/tag\";\n\nexport type TabId = string | number;\n\nexport interface TabIdProps {\n    /**\n     * `id` prop of the tab title, and the `aria-labelledby` of the `TabPanel`.\n     */\n    tabTitleId: string;\n    /**\n     * `id` prop of the `tabpanel`, and the `aria-controls` of the tab title.\n     */\n    tabPanelId: string;\n}\n\nexport interface TabProps extends Props, Omit<HTMLDivProps, \"id\" | \"title\" | \"onClick\"> {\n    /**\n     * Content of tab title, rendered in a list above the active panel.\n     * Can also be set via the `title` prop.\n     */\n    children?: React.ReactNode;\n\n    /**\n     * Whether the tab is disabled.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Unique identifier used to control which tab is selected\n     * and to generate ARIA attributes for accessibility.\n     */\n    id: TabId;\n\n    /**\n     * Panel content, rendered by the parent `Tabs` when this tab is active.\n     * If omitted, no panel will be rendered for this tab.\n     * Can either be an element or a renderer.\n     */\n    panel?: React.JSX.Element | ((props: TabIdProps) => React.JSX.Element);\n\n    /**\n     * Space-delimited string of class names applied to tab panel container.\n     */\n    panelClassName?: string;\n\n    /**\n     * Content of tab title element, rendered in a list above the active panel.\n     * Can also be set via React `children`.\n     */\n    title?: React.ReactNode;\n\n    /** Name of a Blueprint UI icon (or an icon element) to render before the children. */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Content to render inside a `<Tag>` after the children.\n     * The tag is `minimal` by default; it can be further modified by using `tagProps`.\n     */\n    tagContent?: TagProps[\"children\"];\n\n    /**\n     * Props to customize the `<Tag>` rendered after the children.\n     * This has no effect if `tagContent` is `undefined`.\n     */\n    tagProps?: Omit<TagProps, \"children\">;\n}\n\n/**\n * Tab component.\n *\n * @see https://blueprintjs.com/docs/#core/components/tabs.tab\n */\nexport class Tab extends AbstractPureComponent<TabProps> {\n    public static defaultProps: Partial<TabProps> = {\n        disabled: false,\n    };\n\n    public static displayName = `${DISPLAYNAME_PREFIX}.Tab`;\n\n    // this component is never rendered directly; see Tabs#renderTabPanel()\n    /* istanbul ignore next */\n    public render() {\n        const { className, panel } = this.props;\n        return (\n            <div className={classNames(Classes.TAB_PANEL, className)} role=\"tablist\">\n                {isFunction(panel) ? panel({ tabPanelId: \"\", tabTitleId: \"\" }) : panel}\n            </div>\n        );\n    }\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAInC,SAASC,qBAAqB,EAAEC,OAAO,QAAQ,cAAc;AAC7D,SAASC,kBAAkB,QAA0D,oBAAoB;AACzG,SAASC,UAAU,QAAQ,oBAAoB;AAsE/C;;;;;AAKA,OAAM,MAAOC,GAAI,SAAQJ,qBAA+B;EAOpD;EACA;EACOK,MAAMA,CAAA;IACT,MAAM;MAAEC,SAAS;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACC,KAAK;IACvC,OACIC,IAAA;MAAKH,SAAS,EAAEP,UAAU,CAACE,OAAO,CAACS,SAAS,EAAEJ,SAAS,CAAC;MAAEK,IAAI,EAAC,SAAS;MAAAC,QAAA,EACnET,UAAU,CAACI,KAAK,CAAC,GAAGA,KAAK,CAAC;QAAEM,UAAU,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAE,CAAE,CAAC,GAAGP;IAAK,EACpE;EAEd;;AAfcH,GAAA,CAAAW,YAAY,GAAsB;EAC5CC,QAAQ,EAAE;CACb;AAEaZ,GAAA,CAAAa,WAAW,GAAG,GAAGf,kBAAkB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}