{"ast":null,"code":"import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { IconSize, SmallCross } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { getPositionIgnoreAngles, isPositionHorizontal } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport { Overlay2 } from \"../overlay2/overlay2\";\nexport var DrawerSize;\n(function (DrawerSize) {\n  DrawerSize[\"SMALL\"] = \"360px\";\n  DrawerSize[\"STANDARD\"] = \"50%\";\n  DrawerSize[\"LARGE\"] = \"90%\";\n})(DrawerSize || (DrawerSize = {}));\nexport class Drawer extends AbstractPureComponent {\n  render() {\n    var _a;\n    const {\n      hasBackdrop,\n      size,\n      style,\n      position\n    } = this.props;\n    const {\n      className,\n      children,\n      ...overlayProps\n    } = this.props;\n    const realPosition = getPositionIgnoreAngles(position);\n    const classes = classNames(Classes.DRAWER, {\n      [(_a = Classes.positionClass(realPosition)) !== null && _a !== void 0 ? _a : \"\"]: true\n    }, className);\n    const styleProp = size == null ? style : {\n      ...style,\n      [isPositionHorizontal(realPosition) ? \"height\" : \"width\"]: size\n    };\n    return (\n      // N.B. the `OVERLAY_CONTAINER` class is a bit of a misnomer since it is only being used by the Drawer\n      // component, but we keep it for backwards compatibility.\n      _jsx(Overlay2, {\n        ...overlayProps,\n        className: classNames({\n          [Classes.OVERLAY_CONTAINER]: hasBackdrop\n        }),\n        children: _jsxs(\"div\", {\n          className: classes,\n          style: styleProp,\n          children: [this.maybeRenderHeader(), children]\n        })\n      })\n    );\n  }\n  validateProps(props) {\n    if (props.title == null) {\n      if (props.icon != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n      }\n      if (props.isCloseButtonShown != null) {\n        console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n      }\n    }\n    if (props.position != null) {\n      if (props.position !== getPositionIgnoreAngles(props.position)) {\n        console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);\n      }\n    }\n  }\n  maybeRenderCloseButton() {\n    // `isCloseButtonShown` can't be defaulted through default props because of props validation\n    // so this check actually defaults it to true (fails only if directly set to false)\n    if (this.props.isCloseButtonShown !== false) {\n      return _jsx(Button, {\n        \"aria-label\": \"Close\",\n        className: Classes.DIALOG_CLOSE_BUTTON,\n        icon: _jsx(SmallCross, {\n          size: IconSize.LARGE\n        }),\n        onClick: this.props.onClose,\n        variant: \"minimal\"\n      });\n    } else {\n      return null;\n    }\n  }\n  maybeRenderHeader() {\n    const {\n      icon,\n      title\n    } = this.props;\n    if (title == null) {\n      return null;\n    }\n    return _jsxs(\"div\", {\n      className: Classes.DRAWER_HEADER,\n      children: [_jsx(Icon, {\n        icon: icon,\n        size: IconSize.LARGE\n      }), _jsx(H4, {\n        children: title\n      }), this.maybeRenderCloseButton()]\n    });\n  }\n}\nDrawer.displayName = `${DISPLAYNAME_PREFIX}.Drawer`;\nDrawer.defaultProps = {\n  canOutsideClickClose: true,\n  isOpen: false,\n  position: \"right\",\n  style: {}\n};","map":{"version":3,"names":["classNames","IconSize","SmallCross","AbstractPureComponent","Classes","Errors","getPositionIgnoreAngles","isPositionHorizontal","DISPLAYNAME_PREFIX","Button","H4","Icon","Overlay2","DrawerSize","Drawer","render","hasBackdrop","size","style","position","props","className","children","overlayProps","realPosition","classes","DRAWER","_a","positionClass","styleProp","_jsx","OVERLAY_CONTAINER","_jsxs","maybeRenderHeader","validateProps","title","icon","console","warn","DIALOG_WARN_NO_HEADER_ICON","isCloseButtonShown","DIALOG_WARN_NO_HEADER_CLOSE_BUTTON","DRAWER_ANGLE_POSITIONS_ARE_CASTED","maybeRenderCloseButton","DIALOG_CLOSE_BUTTON","LARGE","onClick","onClose","variant","DRAWER_HEADER","displayName","defaultProps","canOutsideClickClose","isOpen"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/drawer/drawer.tsx"],"sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { type IconName, IconSize, SmallCross } from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, type Props } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { getPositionIgnoreAngles, isPositionHorizontal, type Position } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX, type MaybeElement } from \"../../common/props\";\nimport { Button } from \"../button/buttons\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nimport type { BackdropProps, OverlayableProps } from \"../overlay/overlayProps\";\nimport { Overlay2 } from \"../overlay2/overlay2\";\n\nexport enum DrawerSize {\n    SMALL = \"360px\",\n    STANDARD = \"50%\",\n    LARGE = \"90%\",\n}\n\nexport interface DrawerProps extends OverlayableProps, BackdropProps, Props {\n    /** Drawer contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render in the\n     * drawer's header. Note that the header will only be rendered if `title` is\n     * provided.\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Whether to show the close button in the dialog's header.\n     * Note that the header will only be rendered if `title` is provided.\n     *\n     * @default true\n     */\n    isCloseButtonShown?: boolean;\n\n    /**\n     * Toggles the visibility of the overlay and its children.\n     * This prop is required because the component is controlled.\n     */\n    isOpen: boolean;\n\n    /**\n     * Position of a drawer. All angled positions will be casted into pure positions\n     * (top, bottom, left, or right).\n     *\n     * @default \"right\"\n     */\n    position?: Position;\n\n    /**\n     * CSS size of the drawer. This sets `width` if horizontal position (default)\n     * and `height` otherwise.\n     *\n     * Constants are available for common sizes:\n     * - `DrawerSize.SMALL = 360px`\n     * - `DrawerSize.STANDARD = 50%`\n     * - `DrawerSize.LARGE = 90%`\n     *\n     * @default DrawerSize.STANDARD = \"50%\"\n     */\n    size?: number | string;\n\n    /**\n     * CSS styles to apply to the dialog.\n     *\n     * @default {}\n     */\n    style?: React.CSSProperties;\n\n    /**\n     * Title of the dialog. If provided, an element with `Classes.DIALOG_HEADER`\n     * will be rendered inside the dialog before any children elements.\n     */\n    title?: React.ReactNode;\n\n    /**\n     * Name of the transition for internal `CSSTransition`. Providing your own\n     * name here will require defining new CSS transition properties.\n     */\n    transitionName?: string;\n}\n\nexport class Drawer extends AbstractPureComponent<DrawerProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Drawer`;\n\n    public static defaultProps: DrawerProps = {\n        canOutsideClickClose: true,\n        isOpen: false,\n        position: \"right\",\n        style: {},\n    };\n\n    public render() {\n        const { hasBackdrop, size, style, position } = this.props;\n        const { className, children, ...overlayProps } = this.props;\n        const realPosition = getPositionIgnoreAngles(position!);\n\n        const classes = classNames(\n            Classes.DRAWER,\n            {\n                [Classes.positionClass(realPosition) ?? \"\"]: true,\n            },\n            className,\n        );\n\n        const styleProp =\n            size == null\n                ? style\n                : {\n                      ...style,\n                      [isPositionHorizontal(realPosition) ? \"height\" : \"width\"]: size,\n                  };\n\n        return (\n            // N.B. the `OVERLAY_CONTAINER` class is a bit of a misnomer since it is only being used by the Drawer\n            // component, but we keep it for backwards compatibility.\n            <Overlay2 {...overlayProps} className={classNames({ [Classes.OVERLAY_CONTAINER]: hasBackdrop })}>\n                <div className={classes} style={styleProp}>\n                    {this.maybeRenderHeader()}\n                    {children}\n                </div>\n            </Overlay2>\n        );\n    }\n\n    protected validateProps(props: DrawerProps) {\n        if (props.title == null) {\n            if (props.icon != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_ICON);\n            }\n            if (props.isCloseButtonShown != null) {\n                console.warn(Errors.DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);\n            }\n        }\n        if (props.position != null) {\n            if (props.position !== getPositionIgnoreAngles(props.position)) {\n                console.warn(Errors.DRAWER_ANGLE_POSITIONS_ARE_CASTED);\n            }\n        }\n    }\n\n    private maybeRenderCloseButton() {\n        // `isCloseButtonShown` can't be defaulted through default props because of props validation\n        // so this check actually defaults it to true (fails only if directly set to false)\n        if (this.props.isCloseButtonShown !== false) {\n            return (\n                <Button\n                    aria-label=\"Close\"\n                    className={Classes.DIALOG_CLOSE_BUTTON}\n                    icon={<SmallCross size={IconSize.LARGE} />}\n                    onClick={this.props.onClose}\n                    variant=\"minimal\"\n                />\n            );\n        } else {\n            return null;\n        }\n    }\n\n    private maybeRenderHeader() {\n        const { icon, title } = this.props;\n        if (title == null) {\n            return null;\n        }\n        return (\n            <div className={Classes.DRAWER_HEADER}>\n                <Icon icon={icon} size={IconSize.LARGE} />\n                <H4>{title}</H4>\n                {this.maybeRenderCloseButton()}\n            </div>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}