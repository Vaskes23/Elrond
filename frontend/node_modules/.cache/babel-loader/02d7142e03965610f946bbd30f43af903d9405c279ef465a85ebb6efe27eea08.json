{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { Fragment } from \"react\";\nimport { ArrowDown, ArrowLeft, ArrowRight, ArrowUp, KeyCommand, KeyControl, KeyDelete, KeyEnter, KeyOption, KeyShift } from \"@blueprintjs/icons\";\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { isMac, normalizeKeyCombo } from \"./hotkeyParser\";\nconst KEY_ICONS = {\n  alt: {\n    icon: _jsx(KeyOption, {}),\n    iconTitle: \"Alt/Option key\",\n    isMacOnly: true\n  },\n  arrowdown: {\n    icon: _jsx(ArrowDown, {}),\n    iconTitle: \"Down key\"\n  },\n  arrowleft: {\n    icon: _jsx(ArrowLeft, {}),\n    iconTitle: \"Left key\"\n  },\n  arrowright: {\n    icon: _jsx(ArrowRight, {}),\n    iconTitle: \"Right key\"\n  },\n  arrowup: {\n    icon: _jsx(ArrowUp, {}),\n    iconTitle: \"Up key\"\n  },\n  cmd: {\n    icon: _jsx(KeyCommand, {}),\n    iconTitle: \"Command key\",\n    isMacOnly: true\n  },\n  ctrl: {\n    icon: _jsx(KeyControl, {}),\n    iconTitle: \"Control key\",\n    isMacOnly: true\n  },\n  delete: {\n    icon: _jsx(KeyDelete, {}),\n    iconTitle: \"Delete key\"\n  },\n  enter: {\n    icon: _jsx(KeyEnter, {}),\n    iconTitle: \"Enter key\"\n  },\n  meta: {\n    icon: _jsx(KeyCommand, {}),\n    iconTitle: \"Command key\",\n    isMacOnly: true\n  },\n  shift: {\n    icon: _jsx(KeyShift, {}),\n    iconTitle: \"Shift key\",\n    isMacOnly: true\n  }\n};\n/** Reverse table of some CONFIG_ALIASES fields, for display by KeyComboTag */\nexport const DISPLAY_ALIASES = {\n  arrowdown: \"down\",\n  arrowleft: \"left\",\n  arrowright: \"right\",\n  arrowup: \"up\"\n};\nexport class KeyComboTagInternal extends AbstractPureComponent {\n  constructor() {\n    super(...arguments);\n    this.renderKey = (key, index) => {\n      var _a;\n      const keyString = (_a = DISPLAY_ALIASES[key.toLowerCase()]) !== null && _a !== void 0 ? _a : key;\n      const icon = this.getKeyIcon(key);\n      const reactKey = `key-${index}`;\n      return _jsxs(\"kbd\", {\n        className: classNames(Classes.KEY, {\n          [Classes.MODIFIER_KEY]: icon != null\n        }),\n        children: [icon != null && _jsx(Icon, {\n          icon: icon.icon,\n          title: icon.iconTitle\n        }), keyString]\n      }, reactKey);\n    };\n    this.renderMinimalKey = (key, index, isLastKey) => {\n      const icon = this.getKeyIcon(key);\n      if (icon == null) {\n        return isLastKey ? key : _jsxs(Fragment, {\n          children: [key, \"\\u00A0+\\u00A0\"]\n        }, `key-${index}`);\n      }\n      return _jsx(Icon, {\n        icon: icon.icon,\n        title: icon.iconTitle\n      }, `key-${index}`);\n    };\n  }\n  render() {\n    const {\n      className,\n      combo,\n      minimal,\n      platformOverride\n    } = this.props;\n    const normalizedKeys = normalizeKeyCombo(combo, platformOverride);\n    const keys = normalizedKeys.map(key => key.length === 1 ? key.toUpperCase() : key).map((key, index) => minimal ? this.renderMinimalKey(key, index, index === normalizedKeys.length - 1) : this.renderKey(key, index));\n    return _jsx(\"span\", {\n      className: classNames(Classes.KEY_COMBO, className, {\n        [Classes.MINIMAL]: minimal\n      }),\n      children: keys\n    });\n  }\n  getKeyIcon(key) {\n    const {\n      platformOverride\n    } = this.props;\n    const icon = KEY_ICONS[key.toLowerCase()];\n    if ((icon === null || icon === void 0 ? void 0 : icon.isMacOnly) && !isMac(platformOverride)) {\n      return undefined;\n    }\n    return icon;\n  }\n}\nKeyComboTagInternal.displayName = `${DISPLAYNAME_PREFIX}.KeyComboTag`;\nexport const KeyComboTag = KeyComboTagInternal;","map":{"version":3,"names":["classNames","Fragment","ArrowDown","ArrowLeft","ArrowRight","ArrowUp","KeyCommand","KeyControl","KeyDelete","KeyEnter","KeyOption","KeyShift","AbstractPureComponent","Classes","DISPLAYNAME_PREFIX","Icon","isMac","normalizeKeyCombo","KEY_ICONS","alt","icon","_jsx","iconTitle","isMacOnly","arrowdown","arrowleft","arrowright","arrowup","cmd","ctrl","delete","enter","meta","shift","DISPLAY_ALIASES","KeyComboTagInternal","constructor","renderKey","key","index","keyString","_a","toLowerCase","getKeyIcon","reactKey","_jsxs","className","KEY","MODIFIER_KEY","children","title","renderMinimalKey","isLastKey","render","combo","minimal","platformOverride","props","normalizedKeys","keys","map","length","toUpperCase","KEY_COMBO","MINIMAL","undefined","displayName","KeyComboTag"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/hotkeys/keyComboTag.tsx"],"sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { Fragment } from \"react\";\n\nimport {\n    ArrowDown,\n    ArrowLeft,\n    ArrowRight,\n    ArrowUp,\n    KeyCommand,\n    KeyControl,\n    KeyDelete,\n    KeyEnter,\n    KeyOption,\n    KeyShift,\n} from \"@blueprintjs/icons\";\n\nimport { AbstractPureComponent, Classes, DISPLAYNAME_PREFIX, type Props } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\n\nimport { isMac, normalizeKeyCombo } from \"./hotkeyParser\";\n\nconst KEY_ICONS: Record<string, { icon: React.JSX.Element; iconTitle: string; isMacOnly?: boolean }> = {\n    alt: { icon: <KeyOption />, iconTitle: \"Alt/Option key\", isMacOnly: true },\n    arrowdown: { icon: <ArrowDown />, iconTitle: \"Down key\" },\n    arrowleft: { icon: <ArrowLeft />, iconTitle: \"Left key\" },\n    arrowright: { icon: <ArrowRight />, iconTitle: \"Right key\" },\n    arrowup: { icon: <ArrowUp />, iconTitle: \"Up key\" },\n    cmd: { icon: <KeyCommand />, iconTitle: \"Command key\", isMacOnly: true },\n    ctrl: { icon: <KeyControl />, iconTitle: \"Control key\", isMacOnly: true },\n    delete: { icon: <KeyDelete />, iconTitle: \"Delete key\" },\n    enter: { icon: <KeyEnter />, iconTitle: \"Enter key\" },\n    meta: { icon: <KeyCommand />, iconTitle: \"Command key\", isMacOnly: true },\n    shift: { icon: <KeyShift />, iconTitle: \"Shift key\", isMacOnly: true },\n};\n\n/** Reverse table of some CONFIG_ALIASES fields, for display by KeyComboTag */\nexport const DISPLAY_ALIASES: Record<string, string> = {\n    arrowdown: \"down\",\n    arrowleft: \"left\",\n    arrowright: \"right\",\n    arrowup: \"up\",\n};\n\nexport interface KeyComboTagProps extends Props {\n    /** The key combo to display, such as `\"cmd + s\"`. */\n    combo: string;\n\n    /**\n     * Whether to render in a minimal style.\n     * If `false`, each key in the combo will be rendered inside a `<kbd>` tag.\n     * If `true`, only the icon or short name of a key will be rendered with no wrapper styles.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n}\n\ninterface KeyComboTagInternalProps extends KeyComboTagProps {\n    /** Override the oeprating system rendering for internal testing purposes */\n    platformOverride?: string;\n}\n\nexport class KeyComboTagInternal extends AbstractPureComponent<KeyComboTagInternalProps> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.KeyComboTag`;\n\n    public render() {\n        const { className, combo, minimal, platformOverride } = this.props;\n        const normalizedKeys = normalizeKeyCombo(combo, platformOverride);\n        const keys = normalizedKeys\n            .map(key => (key.length === 1 ? key.toUpperCase() : key))\n            .map((key, index) =>\n                minimal\n                    ? this.renderMinimalKey(key, index, index === normalizedKeys.length - 1)\n                    : this.renderKey(key, index),\n            );\n        return <span className={classNames(Classes.KEY_COMBO, className, { [Classes.MINIMAL]: minimal })}>{keys}</span>;\n    }\n\n    private renderKey = (key: string, index: number) => {\n        const keyString = DISPLAY_ALIASES[key.toLowerCase()] ?? key;\n        const icon = this.getKeyIcon(key);\n        const reactKey = `key-${index}`;\n        return (\n            <kbd className={classNames(Classes.KEY, { [Classes.MODIFIER_KEY]: icon != null })} key={reactKey}>\n                {icon != null && <Icon icon={icon.icon} title={icon.iconTitle} />}\n                {keyString}\n            </kbd>\n        );\n    };\n\n    private renderMinimalKey = (key: string, index: number, isLastKey: boolean) => {\n        const icon = this.getKeyIcon(key);\n        if (icon == null) {\n            return isLastKey ? key : <Fragment key={`key-${index}`}>{key}&nbsp;+&nbsp;</Fragment>;\n        }\n        return <Icon icon={icon.icon} title={icon.iconTitle} key={`key-${index}`} />;\n    };\n\n    private getKeyIcon(key: string) {\n        const { platformOverride } = this.props;\n        const icon = KEY_ICONS[key.toLowerCase()];\n        if (icon?.isMacOnly && !isMac(platformOverride)) {\n            return undefined;\n        }\n        return icon;\n    }\n}\n\nexport const KeyComboTag: React.ComponentType<KeyComboTagProps> = KeyComboTagInternal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}