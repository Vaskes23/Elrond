{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { Error, InfoSign, Tick, WarningSign } from \"@blueprintjs/icons\";\nimport { Classes, DISPLAYNAME_PREFIX, Intent, Utils } from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nexport const Callout = props => {\n  const {\n    className,\n    children,\n    icon,\n    intent,\n    title,\n    compact,\n    minimal = false,\n    ...htmlProps\n  } = props;\n  const iconElement = renderIcon(icon, intent);\n  const classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), className, {\n    [Classes.CALLOUT_HAS_BODY_CONTENT]: !Utils.isReactNodeEmpty(children),\n    [Classes.CALLOUT_ICON]: iconElement != null,\n    [Classes.COMPACT]: compact,\n    [Classes.MINIMAL]: minimal\n  });\n  return _jsxs(\"div\", {\n    className: classes,\n    ...htmlProps,\n    children: [iconElement, title && _jsx(H5, {\n      children: title\n    }), children]\n  });\n};\nCallout.displayName = `${DISPLAYNAME_PREFIX}.Callout`;\nconst renderIcon = (icon, intent) => {\n  // 1. no icon\n  if (icon === null || icon === false) {\n    return undefined;\n  }\n  const iconProps = {\n    \"aria-hidden\": true,\n    tabIndex: -1\n  };\n  // 2. icon specified by name or as a custom SVG element\n  if (icon !== undefined) {\n    return _jsx(Icon, {\n      icon: icon,\n      ...iconProps\n    });\n  }\n  // 3. icon specified by intent prop\n  switch (intent) {\n    case Intent.DANGER:\n      return _jsx(Error, {\n        ...iconProps\n      });\n    case Intent.PRIMARY:\n      return _jsx(InfoSign, {\n        ...iconProps\n      });\n    case Intent.WARNING:\n      return _jsx(WarningSign, {\n        ...iconProps\n      });\n    case Intent.SUCCESS:\n      return _jsx(Tick, {\n        ...iconProps\n      });\n    default:\n      return undefined;\n  }\n};","map":{"version":3,"names":["classNames","Error","InfoSign","Tick","WarningSign","Classes","DISPLAYNAME_PREFIX","Intent","Utils","H5","Icon","Callout","props","className","children","icon","intent","title","compact","minimal","htmlProps","iconElement","renderIcon","classes","CALLOUT","intentClass","CALLOUT_HAS_BODY_CONTENT","isReactNodeEmpty","CALLOUT_ICON","COMPACT","MINIMAL","_jsxs","_jsx","displayName","undefined","iconProps","tabIndex","DANGER","PRIMARY","WARNING","SUCCESS"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/callout/callout.tsx"],"sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { Error, type IconName, InfoSign, type SVGIconProps, Tick, WarningSign } from \"@blueprintjs/icons\";\n\nimport {\n    Classes,\n    DISPLAYNAME_PREFIX,\n    type HTMLDivProps,\n    Intent,\n    type IntentProps,\n    type MaybeElement,\n    type Props,\n    Utils,\n} from \"../../common\";\nimport { H5 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\n/** This component also supports the full range of HTML `<div>` attributes. */\nexport interface CalloutProps extends IntentProps, Props, HTMLDivProps {\n    /** Callout contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Whether to use a compact appearance, which reduces the visual padding around callout content.\n     */\n    compact?: boolean;\n\n    /**\n     * Name of a Blueprint UI icon (or an icon element) to render on the left side.\n     *\n     * If this prop is omitted or `undefined`, the `intent` prop will determine a default icon.\n     * If this prop is explicitly `null`, no icon will be displayed (regardless of `intent`).\n     */\n    icon?: IconName | MaybeElement;\n\n    /**\n     * Visual intent color to apply to background, title, and icon.\n     *\n     * Defining this prop also applies a default icon, if the `icon` prop is omitted.\n     */\n    intent?: Intent;\n\n    /**\n     * Whether the callout should have a minimal appearance with no background color fill.\n     *\n     * @default false\n     */\n    minimal?: boolean;\n\n    /**\n     * String content of optional title element.\n     *\n     * Due to a conflict with the HTML prop types, to provide JSX content simply\n     * pass `<H4>JSX title content</H4>` as first `children` element instead of\n     * using this prop (note uppercase tag name to use the Blueprint Heading\n     * component).\n     */\n    title?: string;\n}\n\n/**\n * Callout component.\n *\n * @see https://blueprintjs.com/docs/#core/components/callout\n */\nexport const Callout: React.FC<CalloutProps> = props => {\n    const { className, children, icon, intent, title, compact, minimal = false, ...htmlProps } = props;\n    const iconElement = renderIcon(icon, intent);\n    const classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), className, {\n        [Classes.CALLOUT_HAS_BODY_CONTENT]: !Utils.isReactNodeEmpty(children),\n        [Classes.CALLOUT_ICON]: iconElement != null,\n        [Classes.COMPACT]: compact,\n        [Classes.MINIMAL]: minimal,\n    });\n\n    return (\n        <div className={classes} {...htmlProps}>\n            {iconElement}\n            {title && <H5>{title}</H5>}\n            {children}\n        </div>\n    );\n};\nCallout.displayName = `${DISPLAYNAME_PREFIX}.Callout`;\n\nconst renderIcon = (icon?: CalloutProps[\"icon\"], intent?: Intent): IconName | MaybeElement => {\n    // 1. no icon\n    if (icon === null || icon === false) {\n        return undefined;\n    }\n\n    const iconProps = {\n        \"aria-hidden\": true,\n        tabIndex: -1,\n    } satisfies SVGIconProps;\n\n    // 2. icon specified by name or as a custom SVG element\n    if (icon !== undefined) {\n        return <Icon icon={icon} {...iconProps} />;\n    }\n\n    // 3. icon specified by intent prop\n    switch (intent) {\n        case Intent.DANGER:\n            return <Error {...iconProps} />;\n        case Intent.PRIMARY:\n            return <InfoSign {...iconProps} />;\n        case Intent.WARNING:\n            return <WarningSign {...iconProps} />;\n        case Intent.SUCCESS:\n            return <Tick {...iconProps} />;\n        default:\n            return undefined;\n    }\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,KAAK,EAAiBC,QAAQ,EAAqBC,IAAI,EAAEC,WAAW,QAAQ,oBAAoB;AAEzG,SACIC,OAAO,EACPC,kBAAkB,EAElBC,MAAM,EAINC,KAAK,QACF,cAAc;AACrB,SAASC,EAAE,QAAQ,cAAc;AACjC,SAASC,IAAI,QAAQ,cAAc;AA6CnC;;;;;AAKA,OAAO,MAAMC,OAAO,GAA2BC,KAAK,IAAG;EACnD,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,OAAO,GAAG,KAAK;IAAE,GAAGC;EAAS,CAAE,GAAGR,KAAK;EAClG,MAAMS,WAAW,GAAGC,UAAU,CAACP,IAAI,EAAEC,MAAM,CAAC;EAC5C,MAAMO,OAAO,GAAGvB,UAAU,CAACK,OAAO,CAACmB,OAAO,EAAEnB,OAAO,CAACoB,WAAW,CAACT,MAAM,CAAC,EAAEH,SAAS,EAAE;IAChF,CAACR,OAAO,CAACqB,wBAAwB,GAAG,CAAClB,KAAK,CAACmB,gBAAgB,CAACb,QAAQ,CAAC;IACrE,CAACT,OAAO,CAACuB,YAAY,GAAGP,WAAW,IAAI,IAAI;IAC3C,CAAChB,OAAO,CAACwB,OAAO,GAAGX,OAAO;IAC1B,CAACb,OAAO,CAACyB,OAAO,GAAGX;GACtB,CAAC;EAEF,OACIY,KAAA;IAAKlB,SAAS,EAAEU,OAAO;IAAA,GAAMH,SAAS;IAAAN,QAAA,GACjCO,WAAW,EACXJ,KAAK,IAAIe,IAAA,CAACvB,EAAE;MAAAK,QAAA,EAAEG;IAAK,EAAM,EACzBH,QAAQ;EAAA,EACP;AAEd,CAAC;AACDH,OAAO,CAACsB,WAAW,GAAG,GAAG3B,kBAAkB,UAAU;AAErD,MAAMgB,UAAU,GAAGA,CAACP,IAA2B,EAAEC,MAAe,KAA6B;EACzF;EACA,IAAID,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,EAAE;IACjC,OAAOmB,SAAS;EACpB;EAEA,MAAMC,SAAS,GAAG;IACd,aAAa,EAAE,IAAI;IACnBC,QAAQ,EAAE,CAAC;GACS;EAExB;EACA,IAAIrB,IAAI,KAAKmB,SAAS,EAAE;IACpB,OAAOF,IAAA,CAACtB,IAAI;MAACK,IAAI,EAAEA,IAAI;MAAA,GAAMoB;IAAS,EAAI;EAC9C;EAEA;EACA,QAAQnB,MAAM;IACV,KAAKT,MAAM,CAAC8B,MAAM;MACd,OAAOL,IAAA,CAAC/B,KAAK;QAAA,GAAKkC;MAAS,EAAI;IACnC,KAAK5B,MAAM,CAAC+B,OAAO;MACf,OAAON,IAAA,CAAC9B,QAAQ;QAAA,GAAKiC;MAAS,EAAI;IACtC,KAAK5B,MAAM,CAACgC,OAAO;MACf,OAAOP,IAAA,CAAC5B,WAAW;QAAA,GAAK+B;MAAS,EAAI;IACzC,KAAK5B,MAAM,CAACiC,OAAO;MACf,OAAOR,IAAA,CAAC7B,IAAI;QAAA,GAAKgC;MAAS,EAAI;IAClC;MACI,OAAOD,SAAS;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}