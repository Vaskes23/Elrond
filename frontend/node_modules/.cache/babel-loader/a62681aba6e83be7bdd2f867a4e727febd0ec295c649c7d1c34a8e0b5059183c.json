{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { AbstractPureComponent, Boundary, Classes, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList } from \"../overflow-list/overflowList\";\nimport { Popover } from \"../popover/popover\";\nimport { Breadcrumb } from \"./breadcrumb\";\n/**\n * Breadcrumbs component.\n *\n * @see https://blueprintjs.com/docs/#core/components/breadcrumbs\n */\nexport class Breadcrumbs extends AbstractPureComponent {\n  constructor() {\n    super(...arguments);\n    this.renderOverflow = items => {\n      const {\n        collapseFrom,\n        overflowButtonProps,\n        popoverProps\n      } = this.props;\n      let orderedItems = items;\n      if (collapseFrom === Boundary.START) {\n        // If we're collapsing from the start, the menu should be read from the bottom to the\n        // top, continuing with the breadcrumbs to the right. Since this means the first\n        // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n        // order.\n        orderedItems = items.slice().reverse();\n      }\n      return _jsx(\"li\", {\n        children: _jsx(Popover, {\n          placement: collapseFrom === Boundary.END ? \"bottom-end\" : \"bottom-start\",\n          disabled: orderedItems.length === 0,\n          content: _jsx(Menu, {\n            children: orderedItems.map(this.renderOverflowBreadcrumb)\n          }),\n          ...popoverProps,\n          children: _jsx(\"span\", {\n            \"aria-label\": \"collapsed breadcrumbs\",\n            role: \"button\",\n            tabIndex: 0,\n            ...overflowButtonProps,\n            className: classNames(Classes.BREADCRUMBS_COLLAPSED, overflowButtonProps === null || overflowButtonProps === void 0 ? void 0 : overflowButtonProps.className)\n          })\n        })\n      });\n    };\n    this.renderOverflowBreadcrumb = (props, index) => {\n      const isClickable = props.href != null || props.onClick != null;\n      const htmlProps = removeNonHTMLProps(props);\n      return _createElement(MenuItem, {\n        disabled: !isClickable,\n        ...htmlProps,\n        text: props.text,\n        key: index\n      });\n    };\n    this.renderBreadcrumbWrapper = (props, index) => {\n      const isCurrent = this.props.items[this.props.items.length - 1] === props;\n      return _jsx(\"li\", {\n        children: this.renderBreadcrumb(props, isCurrent)\n      }, index);\n    };\n  }\n  render() {\n    const {\n      className,\n      collapseFrom,\n      items,\n      minVisibleItems,\n      overflowListProps = {}\n    } = this.props;\n    return _jsx(OverflowList, {\n      collapseFrom: collapseFrom,\n      minVisibleItems: minVisibleItems,\n      tagName: \"ol\",\n      ...overflowListProps,\n      className: classNames(Classes.BREADCRUMBS, overflowListProps.className, className),\n      items: items,\n      overflowRenderer: this.renderOverflow,\n      visibleItemRenderer: this.renderBreadcrumbWrapper\n    });\n  }\n  renderBreadcrumb(props, isCurrent) {\n    if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n      return this.props.currentBreadcrumbRenderer(props);\n    } else if (this.props.breadcrumbRenderer != null) {\n      return this.props.breadcrumbRenderer(props);\n    } else {\n      // allow user to override 'current' prop\n      return _jsx(Breadcrumb, {\n        current: isCurrent,\n        ...props\n      });\n    }\n  }\n}\nBreadcrumbs.defaultProps = {\n  collapseFrom: Boundary.START\n};","map":{"version":3,"names":["classNames","AbstractPureComponent","Boundary","Classes","removeNonHTMLProps","Menu","MenuItem","OverflowList","Popover","Breadcrumb","Breadcrumbs","constructor","renderOverflow","items","collapseFrom","overflowButtonProps","popoverProps","props","orderedItems","START","slice","reverse","_jsx","children","placement","END","disabled","length","content","map","renderOverflowBreadcrumb","role","tabIndex","className","BREADCRUMBS_COLLAPSED","index","isClickable","href","onClick","htmlProps","_createElement","text","key","renderBreadcrumbWrapper","isCurrent","renderBreadcrumb","render","minVisibleItems","overflowListProps","tagName","BREADCRUMBS","overflowRenderer","visibleItemRenderer","currentBreadcrumbRenderer","breadcrumbRenderer","current","defaultProps"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/breadcrumbs/breadcrumbs.tsx"],"sourcesContent":["/*\n * Copyright 2022 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { AbstractPureComponent, Boundary, Classes, type Props, removeNonHTMLProps } from \"../../common\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { OverflowList, type OverflowListProps } from \"../overflow-list/overflowList\";\nimport { Popover, type PopoverProps } from \"../popover/popover\";\n\nimport { Breadcrumb, type BreadcrumbProps } from \"./breadcrumb\";\n\nexport interface BreadcrumbsProps extends Props {\n    /**\n     * Callback invoked to render visible breadcrumbs. Best practice is to\n     * render a `<Breadcrumb>` element. If `currentBreadcrumbRenderer` is also\n     * supplied, that callback will be used for the current breadcrumb instead.\n     *\n     * @default Breadcrumb\n     */\n    breadcrumbRenderer?: (props: BreadcrumbProps) => React.JSX.Element;\n\n    /**\n     * Which direction the breadcrumbs should collapse from: start or end.\n     *\n     * @default Boundary.START\n     */\n    collapseFrom?: Boundary;\n\n    /**\n     * Callback invoked to render the current breadcrumb, which is the last\n     * element in the `items` array.\n     *\n     * If this prop is omitted, `breadcrumbRenderer` will be invoked for the\n     * current breadcrumb instead.\n     */\n    currentBreadcrumbRenderer?: (props: BreadcrumbProps) => React.JSX.Element;\n\n    /**\n     * All breadcrumbs to display. Breadcrumbs that do not fit in the container\n     * will be rendered in an overflow menu instead.\n     */\n    items: readonly BreadcrumbProps[];\n\n    /**\n     * The minimum number of visible breadcrumbs that should never collapse into\n     * the overflow menu, regardless of DOM dimensions.\n     *\n     * @default 0\n     */\n    minVisibleItems?: number;\n\n    /**\n     * Props to spread to the `OverflowList` popover target.\n     */\n    overflowButtonProps?: React.HTMLProps<HTMLSpanElement>;\n\n    /**\n     * Props to spread to `OverflowList`. Note that `items`,\n     * `overflowRenderer`, and `visibleItemRenderer` cannot be changed.\n     */\n    overflowListProps?: Partial<\n        Omit<OverflowListProps<BreadcrumbProps>, \"items\" | \"overflowRenderer\" | \"visibleItemRenderer\">\n    >;\n\n    /**\n     * Props to spread to the popover showing the overflow menu.\n     */\n    popoverProps?: Partial<\n        Omit<PopoverProps, \"content\" | \"defaultIsOpen\" | \"disabled\" | \"fill\" | \"renderTarget\" | \"targetTagName\">\n    >;\n}\n\n/**\n * Breadcrumbs component.\n *\n * @see https://blueprintjs.com/docs/#core/components/breadcrumbs\n */\nexport class Breadcrumbs extends AbstractPureComponent<BreadcrumbsProps> {\n    public static defaultProps: Partial<BreadcrumbsProps> = {\n        collapseFrom: Boundary.START,\n    };\n\n    public render() {\n        const { className, collapseFrom, items, minVisibleItems, overflowListProps = {} } = this.props;\n        return (\n            <OverflowList\n                collapseFrom={collapseFrom}\n                minVisibleItems={minVisibleItems}\n                tagName=\"ol\"\n                {...overflowListProps}\n                className={classNames(Classes.BREADCRUMBS, overflowListProps.className, className)}\n                items={items}\n                overflowRenderer={this.renderOverflow}\n                visibleItemRenderer={this.renderBreadcrumbWrapper}\n            />\n        );\n    }\n\n    private renderOverflow = (items: readonly BreadcrumbProps[]) => {\n        const { collapseFrom, overflowButtonProps, popoverProps } = this.props;\n\n        let orderedItems = items;\n        if (collapseFrom === Boundary.START) {\n            // If we're collapsing from the start, the menu should be read from the bottom to the\n            // top, continuing with the breadcrumbs to the right. Since this means the first\n            // breadcrumb in the props must be the last in the menu, we need to reverse the overlow\n            // order.\n            orderedItems = items.slice().reverse();\n        }\n\n        return (\n            <li>\n                <Popover\n                    placement={collapseFrom === Boundary.END ? \"bottom-end\" : \"bottom-start\"}\n                    disabled={orderedItems.length === 0}\n                    content={<Menu>{orderedItems.map(this.renderOverflowBreadcrumb)}</Menu>}\n                    {...popoverProps}\n                >\n                    <span\n                        aria-label=\"collapsed breadcrumbs\"\n                        role=\"button\"\n                        tabIndex={0}\n                        {...overflowButtonProps}\n                        className={classNames(Classes.BREADCRUMBS_COLLAPSED, overflowButtonProps?.className)}\n                    />\n                </Popover>\n            </li>\n        );\n    };\n\n    private renderOverflowBreadcrumb = (props: BreadcrumbProps, index: number) => {\n        const isClickable = props.href != null || props.onClick != null;\n        const htmlProps = removeNonHTMLProps(props);\n        return <MenuItem disabled={!isClickable} {...htmlProps} text={props.text} key={index} />;\n    };\n\n    private renderBreadcrumbWrapper = (props: BreadcrumbProps, index: number) => {\n        const isCurrent = this.props.items[this.props.items.length - 1] === props;\n        return <li key={index}>{this.renderBreadcrumb(props, isCurrent)}</li>;\n    };\n\n    private renderBreadcrumb(props: BreadcrumbProps, isCurrent: boolean) {\n        if (isCurrent && this.props.currentBreadcrumbRenderer != null) {\n            return this.props.currentBreadcrumbRenderer(props);\n        } else if (this.props.breadcrumbRenderer != null) {\n            return this.props.breadcrumbRenderer(props);\n        } else {\n            // allow user to override 'current' prop\n            return <Breadcrumb current={isCurrent} {...props} />;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}