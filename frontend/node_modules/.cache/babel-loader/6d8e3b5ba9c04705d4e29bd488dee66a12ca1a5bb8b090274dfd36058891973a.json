{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { createElement, forwardRef } from \"react\";\nimport * as Classes from \"./classes\";\nimport { IconSize } from \"./iconTypes\";\nimport { uniqueId } from \"./jsUtils\";\nexport const SVGIconContainer = forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    color,\n    htmlTitle,\n    iconName,\n    size = IconSize.STANDARD,\n    svgProps,\n    tagName = \"span\",\n    title,\n    ...htmlProps\n  } = props;\n  const isLarge = size >= IconSize.LARGE;\n  const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n  const viewBox = `0 0 ${pixelGridSize} ${pixelGridSize}`;\n  const titleId = uniqueId(\"iconTitle\");\n  const sharedSvgProps = {\n    fill: color,\n    height: size,\n    role: \"img\",\n    viewBox,\n    width: size,\n    ...svgProps\n  };\n  if (tagName === null) {\n    return _jsxs(\"svg\", {\n      \"aria-labelledby\": title ? titleId : undefined,\n      \"data-icon\": iconName,\n      ref: ref,\n      ...sharedSvgProps,\n      ...htmlProps,\n      className: classNames(className, svgProps === null || svgProps === void 0 ? void 0 : svgProps.className),\n      children: [title && _jsx(\"title\", {\n        id: titleId,\n        children: title\n      }), children]\n    });\n  } else {\n    // N.B. styles for `Classes.ICON` are defined in @blueprintjs/core in `_icon.scss`\n    return createElement(tagName, {\n      \"aria-hidden\": title ? undefined : true,\n      ...htmlProps,\n      className: classNames(Classes.ICON, `${Classes.ICON}-${iconName}`, className),\n      ref,\n      title: htmlTitle\n    }, _jsxs(\"svg\", {\n      \"data-icon\": iconName,\n      ...sharedSvgProps,\n      className: svgProps === null || svgProps === void 0 ? void 0 : svgProps.className,\n      children: [title && _jsx(\"title\", {\n        children: title\n      }), children]\n    }));\n  }\n});\nSVGIconContainer.displayName = \"Blueprint6.SVGIconContainer\";","map":{"version":3,"names":["classNames","createElement","forwardRef","Classes","IconSize","uniqueId","SVGIconContainer","props","ref","children","className","color","htmlTitle","iconName","size","STANDARD","svgProps","tagName","title","htmlProps","isLarge","LARGE","pixelGridSize","viewBox","titleId","sharedSvgProps","fill","height","role","width","_jsxs","undefined","_jsx","id","ICON","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/icons/src/svgIconContainer.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { createElement, forwardRef } from \"react\";\n\nimport * as Classes from \"./classes\";\nimport type { IconName } from \"./iconNames\";\nimport { IconSize } from \"./iconTypes\";\nimport { uniqueId } from \"./jsUtils\";\nimport type { SVGIconProps } from \"./svgIconProps\";\n\nexport type SVGIconContainerProps<T extends Element> = Omit<SVGIconProps<T>, \"children\"> & {\n    /**\n     * Icon name.\n     */\n    iconName: IconName;\n\n    /**\n     * Icon contents, loaded via `IconLoader` and specified as `<path>` elements.\n     */\n    children: React.JSX.Element | React.JSX.Element[];\n};\n\n/**\n * Generic icon container component type. This is essentially a type hack required to make forwardRef work with generic\n * components. Note that this slows down TypeScript compilation, but it's better than the alternative of globally\n * augmenting \"@types/react\".\n *\n * @see https://stackoverflow.com/a/73795494/7406866\n */\nexport interface SVGIconContainerComponent extends React.FC<SVGIconContainerProps<Element>> {\n    <T extends Element = Element>(props: SVGIconContainerProps<T>): React.ReactNode;\n}\n\nexport const SVGIconContainer: SVGIconContainerComponent = forwardRef(\n    <T extends Element>(props: SVGIconContainerProps<T>, ref: React.Ref<T>) => {\n        const {\n            children,\n            className,\n            color,\n            htmlTitle,\n            iconName,\n            size = IconSize.STANDARD,\n            svgProps,\n            tagName = \"span\",\n            title,\n            ...htmlProps\n        } = props;\n\n        const isLarge = size >= IconSize.LARGE;\n        const pixelGridSize = isLarge ? IconSize.LARGE : IconSize.STANDARD;\n        const viewBox = `0 0 ${pixelGridSize} ${pixelGridSize}`;\n        const titleId = uniqueId(\"iconTitle\");\n        const sharedSvgProps: React.SVGProps<SVGSVGElement> = {\n            fill: color,\n            height: size,\n            role: \"img\",\n            viewBox,\n            width: size,\n            ...svgProps,\n        };\n\n        if (tagName === null) {\n            return (\n                <svg\n                    aria-labelledby={title ? titleId : undefined}\n                    data-icon={iconName}\n                    ref={ref as React.Ref<SVGSVGElement>}\n                    {...sharedSvgProps}\n                    {...htmlProps}\n                    className={classNames(className, svgProps?.className)}\n                >\n                    {title && <title id={titleId}>{title}</title>}\n                    {children}\n                </svg>\n            );\n        } else {\n            // N.B. styles for `Classes.ICON` are defined in @blueprintjs/core in `_icon.scss`\n            return createElement(\n                tagName,\n                {\n                    \"aria-hidden\": title ? undefined : true,\n                    ...htmlProps,\n                    className: classNames(Classes.ICON, `${Classes.ICON}-${iconName}`, className),\n                    ref,\n                    title: htmlTitle,\n                },\n                <svg data-icon={iconName} {...sharedSvgProps} className={svgProps?.className}>\n                    {title && <title>{title}</title>}\n                    {children}\n                </svg>,\n            );\n        }\n    },\n);\nSVGIconContainer.displayName = \"Blueprint6.SVGIconContainer\";\n"],"mappings":";AAAA;;;;;;;;;;;;;;AAeA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAEjD,OAAO,KAAKC,OAAO,MAAM,WAAW;AAEpC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,WAAW;AA0BpC,OAAO,MAAMC,gBAAgB,GAA8BJ,UAAU,CACjE,CAAoBK,KAA+B,EAAEC,GAAiB,KAAI;EACtE,MAAM;IACFC,QAAQ;IACRC,SAAS;IACTC,KAAK;IACLC,SAAS;IACTC,QAAQ;IACRC,IAAI,GAAGV,QAAQ,CAACW,QAAQ;IACxBC,QAAQ;IACRC,OAAO,GAAG,MAAM;IAChBC,KAAK;IACL,GAAGC;EAAS,CACf,GAAGZ,KAAK;EAET,MAAMa,OAAO,GAAGN,IAAI,IAAIV,QAAQ,CAACiB,KAAK;EACtC,MAAMC,aAAa,GAAGF,OAAO,GAAGhB,QAAQ,CAACiB,KAAK,GAAGjB,QAAQ,CAACW,QAAQ;EAClE,MAAMQ,OAAO,GAAG,OAAOD,aAAa,IAAIA,aAAa,EAAE;EACvD,MAAME,OAAO,GAAGnB,QAAQ,CAAC,WAAW,CAAC;EACrC,MAAMoB,cAAc,GAAkC;IAClDC,IAAI,EAAEf,KAAK;IACXgB,MAAM,EAAEb,IAAI;IACZc,IAAI,EAAE,KAAK;IACXL,OAAO;IACPM,KAAK,EAAEf,IAAI;IACX,GAAGE;GACN;EAED,IAAIC,OAAO,KAAK,IAAI,EAAE;IAClB,OACIa,KAAA;MAAA,mBACqBZ,KAAK,GAAGM,OAAO,GAAGO,SAAS;MAAA,aACjClB,QAAQ;MACnBL,GAAG,EAAEA,GAA+B;MAAA,GAChCiB,cAAc;MAAA,GACdN,SAAS;MACbT,SAAS,EAAEV,UAAU,CAACU,SAAS,EAAEM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEN,SAAS,CAAC;MAAAD,QAAA,GAEpDS,KAAK,IAAIc,IAAA;QAAOC,EAAE,EAAET,OAAO;QAAAf,QAAA,EAAGS;MAAK,EAAS,EAC5CT,QAAQ;IAAA,EACP;EAEd,CAAC,MAAM;IACH;IACA,OAAOR,aAAa,CAChBgB,OAAO,EACP;MACI,aAAa,EAAEC,KAAK,GAAGa,SAAS,GAAG,IAAI;MACvC,GAAGZ,SAAS;MACZT,SAAS,EAAEV,UAAU,CAACG,OAAO,CAAC+B,IAAI,EAAE,GAAG/B,OAAO,CAAC+B,IAAI,IAAIrB,QAAQ,EAAE,EAAEH,SAAS,CAAC;MAC7EF,GAAG;MACHU,KAAK,EAAEN;KACV,EACDkB,KAAA;MAAA,aAAgBjB,QAAQ;MAAA,GAAMY,cAAc;MAAEf,SAAS,EAAEM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEN,SAAS;MAAAD,QAAA,GACvES,KAAK,IAAIc,IAAA;QAAAvB,QAAA,EAAQS;MAAK,EAAS,EAC/BT,QAAQ;IAAA,EACP,CACT;EACL;AACJ,CAAC,CACJ;AACDH,gBAAgB,CAAC6B,WAAW,GAAG,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}