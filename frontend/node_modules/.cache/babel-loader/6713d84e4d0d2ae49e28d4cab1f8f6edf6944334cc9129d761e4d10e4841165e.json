{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable camelcase */\nimport { pascalCase, snakeCase } from \"change-case\";\n// The two icon sets are identical aside from SVG paths, so we only need to import info for the 16px set\nimport { BlueprintIcons_16 } from \"./generated/16px/blueprint-icons-16\";\nconst IconNamesNew = {};\nconst IconNamesLegacy = {};\nfor (const name of Object.values(BlueprintIcons_16)) {\n  IconNamesNew[pascalCase(name)] = name;\n  IconNamesLegacy[snakeCase(name).toUpperCase()] = name;\n}\nexport const IconNames = {\n  ...IconNamesNew,\n  ...IconNamesLegacy\n};\nexport const IconNamesSet = new Set(Object.values(IconNames));","map":{"version":3,"names":["pascalCase","snakeCase","BlueprintIcons_16","IconNamesNew","IconNamesLegacy","name","Object","values","toUpperCase","IconNames","IconNamesSet","Set"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/icons/src/iconNames.ts"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable camelcase */\n\nimport { pascalCase, snakeCase } from \"change-case\";\n\n// The two icon sets are identical aside from SVG paths, so we only need to import info for the 16px set\nimport { BlueprintIcons_16, type BlueprintIcons_16Id as IconName } from \"./generated/16px/blueprint-icons-16\";\nimport type { PascalCase, ScreamingSnakeCase } from \"./type-utils\";\n\nexport type { IconName };\n\nconst IconNamesNew = {} as Record<PascalCase<IconName>, IconName>;\nconst IconNamesLegacy = {} as Record<ScreamingSnakeCase<IconName>, IconName>;\n\nfor (const name of Object.values(BlueprintIcons_16) as IconName[]) {\n    IconNamesNew[pascalCase(name) as PascalCase<IconName>] = name;\n    IconNamesLegacy[snakeCase(name).toUpperCase() as ScreamingSnakeCase<IconName>] = name;\n}\n\nexport const IconNames = {\n    ...IconNamesNew,\n    ...IconNamesLegacy,\n};\n\nexport const IconNamesSet = new Set(Object.values(IconNames));\n"],"mappings":"AAAA;;;;;;;;;;;;;;;AAgBA;AAEA,SAASA,UAAU,EAAEC,SAAS,QAAQ,aAAa;AAEnD;AACA,SAASC,iBAAiB,QAA8C,qCAAqC;AAK7G,MAAMC,YAAY,GAAG,EAA4C;AACjE,MAAMC,eAAe,GAAG,EAAoD;AAE5E,KAAK,MAAMC,IAAI,IAAIC,MAAM,CAACC,MAAM,CAACL,iBAAiB,CAAe,EAAE;EAC/DC,YAAY,CAACH,UAAU,CAACK,IAAI,CAAyB,CAAC,GAAGA,IAAI;EAC7DD,eAAe,CAACH,SAAS,CAACI,IAAI,CAAC,CAACG,WAAW,EAAkC,CAAC,GAAGH,IAAI;AACzF;AAEA,OAAO,MAAMI,SAAS,GAAG;EACrB,GAAGN,YAAY;EACf,GAAGC;CACN;AAED,OAAO,MAAMM,YAAY,GAAG,IAAIC,GAAG,CAACL,MAAM,CAACC,MAAM,CAACE,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}