{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { createContext, useEffect, useMemo, useReducer } from \"react\";\nconst noOpDispatch = () => null;\nexport const TooltipContext = createContext([{}, noOpDispatch]);\nconst tooltipContextReducer = (state, action) => {\n  switch (action.type) {\n    case \"FORCE_DISABLED_STATE\":\n      return {\n        forceDisabled: true\n      };\n    case \"RESET_DISABLED_STATE\":\n      return {};\n    default:\n      return state;\n  }\n};\nexport const TooltipProvider = ({\n  children,\n  forceDisable\n}) => {\n  const [state, dispatch] = useReducer(tooltipContextReducer, {});\n  const contextValue = useMemo(() => [state, dispatch], [state, dispatch]);\n  useEffect(() => {\n    if (forceDisable) {\n      dispatch({\n        type: \"FORCE_DISABLED_STATE\"\n      });\n    } else {\n      dispatch({\n        type: \"RESET_DISABLED_STATE\"\n      });\n    }\n  }, [forceDisable]);\n  return _jsx(TooltipContext.Provider, {\n    value: contextValue,\n    children: typeof children === \"function\" ? children(state) : children\n  });\n};","map":{"version":3,"names":["createContext","useEffect","useMemo","useReducer","noOpDispatch","TooltipContext","tooltipContextReducer","state","action","type","forceDisabled","TooltipProvider","children","forceDisable","dispatch","contextValue","_jsx","Provider","value"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/popover/tooltipContext.tsx"],"sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext, useEffect, useMemo, useReducer } from \"react\";\n\nexport interface TooltipContextState {\n    forceDisabled?: boolean;\n}\n\ntype TooltipAction = { type: \"FORCE_DISABLED_STATE\" } | { type: \"RESET_DISABLED_STATE\" };\nconst noOpDispatch: React.Dispatch<TooltipAction> = () => null;\n\nexport const TooltipContext = createContext<readonly [TooltipContextState, React.Dispatch<TooltipAction>]>([\n    {},\n    noOpDispatch,\n]);\n\nconst tooltipContextReducer = (state: TooltipContextState, action: TooltipAction) => {\n    switch (action.type) {\n        case \"FORCE_DISABLED_STATE\":\n            return { forceDisabled: true };\n        case \"RESET_DISABLED_STATE\":\n            return {};\n        default:\n            return state;\n    }\n};\n\ninterface TooltipProviderProps {\n    children: React.ReactNode | ((ctxState: TooltipContextState) => React.ReactNode);\n    forceDisable?: boolean;\n}\n\nexport const TooltipProvider = ({ children, forceDisable }: TooltipProviderProps) => {\n    const [state, dispatch] = useReducer(tooltipContextReducer, {});\n    const contextValue = useMemo(() => [state, dispatch] as const, [state, dispatch]);\n\n    useEffect(() => {\n        if (forceDisable) {\n            dispatch({ type: \"FORCE_DISABLED_STATE\" });\n        } else {\n            dispatch({ type: \"RESET_DISABLED_STATE\" });\n        }\n    }, [forceDisable]);\n\n    return (\n        <TooltipContext.Provider value={contextValue}>\n            {typeof children === \"function\" ? children(state) : children}\n        </TooltipContext.Provider>\n    );\n};\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,SAASA,aAAa,EAAEC,SAAS,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAOrE,MAAMC,YAAY,GAAkCA,CAAA,KAAM,IAAI;AAE9D,OAAO,MAAMC,cAAc,GAAGL,aAAa,CAAgE,CACvG,EAAE,EACFI,YAAY,CACf,CAAC;AAEF,MAAME,qBAAqB,GAAGA,CAACC,KAA0B,EAAEC,MAAqB,KAAI;EAChF,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,sBAAsB;MACvB,OAAO;QAAEC,aAAa,EAAE;MAAI,CAAE;IAClC,KAAK,sBAAsB;MACvB,OAAO,EAAE;IACb;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAOD,OAAO,MAAMI,eAAe,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAwB,KAAI;EAChF,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGX,UAAU,CAACG,qBAAqB,EAAE,EAAE,CAAC;EAC/D,MAAMS,YAAY,GAAGb,OAAO,CAAC,MAAM,CAACK,KAAK,EAAEO,QAAQ,CAAU,EAAE,CAACP,KAAK,EAAEO,QAAQ,CAAC,CAAC;EAEjFb,SAAS,CAAC,MAAK;IACX,IAAIY,YAAY,EAAE;MACdC,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAsB,CAAE,CAAC;IAC9C,CAAC,MAAM;MACHK,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAsB,CAAE,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACI,YAAY,CAAC,CAAC;EAElB,OACIG,IAAA,CAACX,cAAc,CAACY,QAAQ;IAACC,KAAK,EAAEH,YAAY;IAAAH,QAAA,EACvC,OAAOA,QAAQ,KAAK,UAAU,GAAGA,QAAQ,CAACL,KAAK,CAAC,GAAGK;EAAQ,EACtC;AAElC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}