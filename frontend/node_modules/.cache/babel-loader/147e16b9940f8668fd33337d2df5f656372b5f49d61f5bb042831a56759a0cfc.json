{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\n/**\n * Dialog body component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog.dialog-body-props\n */\nexport const DialogBody = forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    useOverflowScrollContainer = true,\n    ...htmlProps\n  } = props;\n  return _jsx(\"div\", {\n    ...htmlProps,\n    className: classNames(Classes.DIALOG_BODY, className, {\n      [Classes.DIALOG_BODY_SCROLL_CONTAINER]: useOverflowScrollContainer\n    }),\n    ref: ref,\n    children: children\n  });\n});\nDialogBody.displayName = `${DISPLAYNAME_PREFIX}.DialogBody`;","map":{"version":3,"names":["classNames","forwardRef","Classes","DISPLAYNAME_PREFIX","DialogBody","props","ref","children","className","useOverflowScrollContainer","htmlProps","_jsx","DIALOG_BODY","DIALOG_BODY_SCROLL_CONTAINER","displayName"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/dialog/dialogBody.tsx"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport { forwardRef } from \"react\";\n\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport type { HTMLDivProps, Props } from \"../../common/props\";\n\nexport interface DialogBodyProps extends Props, HTMLDivProps {\n    /** Dialog body contents. */\n    children?: React.ReactNode;\n\n    /**\n     * Enable scrolling for the container\n     *\n     * @default true\n     */\n    useOverflowScrollContainer?: boolean;\n}\n\n/**\n * Dialog body component.\n *\n * @see https://blueprintjs.com/docs/#core/components/dialog.dialog-body-props\n */\nexport const DialogBody = forwardRef<HTMLDivElement, DialogBodyProps>((props, ref) => {\n    const { children, className, useOverflowScrollContainer = true, ...htmlProps } = props;\n    return (\n        <div\n            {...htmlProps}\n            className={classNames(Classes.DIALOG_BODY, className, {\n                [Classes.DIALOG_BODY_SCROLL_CONTAINER]: useOverflowScrollContainer,\n            })}\n            ref={ref}\n        >\n            {children}\n        </div>\n    );\n});\n\nDialogBody.displayName = `${DISPLAYNAME_PREFIX}.DialogBody`;\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,QAAQ,OAAO;AAElC,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,cAAc;AAe1D;;;;;AAKA,OAAO,MAAMC,UAAU,GAAGH,UAAU,CAAkC,CAACI,KAAK,EAAEC,GAAG,KAAI;EACjF,MAAM;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,0BAA0B,GAAG,IAAI;IAAE,GAAGC;EAAS,CAAE,GAAGL,KAAK;EACtF,OACIM,IAAA;IAAA,GACQD,SAAS;IACbF,SAAS,EAAER,UAAU,CAACE,OAAO,CAACU,WAAW,EAAEJ,SAAS,EAAE;MAClD,CAACN,OAAO,CAACW,4BAA4B,GAAGJ;KAC3C,CAAC;IACFH,GAAG,EAAEA,GAAG;IAAAC,QAAA,EAEPA;EAAQ,EACP;AAEd,CAAC,CAAC;AAEFH,UAAU,CAACU,WAAW,GAAG,GAAGX,kBAAkB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}