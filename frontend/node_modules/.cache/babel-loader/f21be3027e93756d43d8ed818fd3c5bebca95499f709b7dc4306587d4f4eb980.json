{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport classNames from \"classnames\";\nimport { AbstractPureComponent, Classes, Utils } from \"../../common\";\nimport \"./tab\";\nimport { generateTabIds } from \"./tabTitle\";\n/**\n * Wraps the passed `panel`.\n */\nexport class TabPanel extends AbstractPureComponent {\n  render() {\n    const {\n      className,\n      id,\n      parentId,\n      selectedTabId,\n      panel,\n      renderActiveTabPanelOnly\n    } = this.props;\n    const isSelected = id === selectedTabId;\n    if (panel === undefined || renderActiveTabPanelOnly && !isSelected) {\n      return undefined;\n    }\n    const {\n      tabTitleId,\n      tabPanelId\n    } = generateTabIds(parentId, id);\n    return _jsx(\"div\", {\n      \"aria-labelledby\": tabTitleId,\n      \"aria-hidden\": !isSelected,\n      className: classNames(Classes.TAB_PANEL, className),\n      id: tabPanelId,\n      role: \"tabpanel\",\n      children: Utils.isFunction(panel) ? panel({\n        tabPanelId,\n        tabTitleId\n      }) : panel\n    });\n  }\n}","map":{"version":3,"names":["classNames","AbstractPureComponent","Classes","Utils","generateTabIds","TabPanel","render","className","id","parentId","selectedTabId","panel","renderActiveTabPanelOnly","props","isSelected","undefined","tabTitleId","tabPanelId","_jsx","TAB_PANEL","role","children","isFunction"],"sources":["/Users/husseingalal/Desktop/Hackathon/Elrond/frontend/node_modules/@blueprintjs/core/src/components/tabs/tabPanel.tsx"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\n\nimport { AbstractPureComponent, Classes, Utils } from \"../../common\";\n\nimport { type TabId, type TabProps } from \"./tab\";\nimport type { TabsProps } from \"./tabs\";\nimport { generateTabIds, type TabTitleProps } from \"./tabTitle\";\n\nexport interface TabPanelProps\n    extends Pick<TabProps, \"className\" | \"id\" | \"panel\">,\n        Pick<TabsProps, \"renderActiveTabPanelOnly\" | \"selectedTabId\">,\n        Pick<TabTitleProps, \"parentId\"> {\n    /**\n     * Used for setting visibility. This `TabPanel` will be visibile when `selectedTabId === id`, with proper accessibility attributes set.\n     */\n    selectedTabId: TabId | undefined;\n}\n\n/**\n * Wraps the passed `panel`.\n */\nexport class TabPanel extends AbstractPureComponent<TabPanelProps> {\n    public render() {\n        const { className, id, parentId, selectedTabId, panel, renderActiveTabPanelOnly } = this.props;\n\n        const isSelected = id === selectedTabId;\n\n        if (panel === undefined || (renderActiveTabPanelOnly && !isSelected)) {\n            return undefined;\n        }\n\n        const { tabTitleId, tabPanelId } = generateTabIds(parentId, id);\n\n        return (\n            <div\n                aria-labelledby={tabTitleId}\n                aria-hidden={!isSelected}\n                className={classNames(Classes.TAB_PANEL, className)}\n                id={tabPanelId}\n                role=\"tabpanel\"\n            >\n                {Utils.isFunction(panel) ? panel({ tabPanelId, tabTitleId }) : panel}\n            </div>\n        );\n    }\n}\n"],"mappings":";AAAA;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AAEnC,SAASC,qBAAqB,EAAEC,OAAO,EAAEC,KAAK,QAAQ,cAAc;AAEpE,OAA0C,OAAO;AAEjD,SAASC,cAAc,QAA4B,YAAY;AAY/D;;;AAGA,OAAM,MAAOC,QAAS,SAAQJ,qBAAoC;EACvDK,MAAMA,CAAA;IACT,MAAM;MAAEC,SAAS;MAAEC,EAAE;MAAEC,QAAQ;MAAEC,aAAa;MAAEC,KAAK;MAAEC;IAAwB,CAAE,GAAG,IAAI,CAACC,KAAK;IAE9F,MAAMC,UAAU,GAAGN,EAAE,KAAKE,aAAa;IAEvC,IAAIC,KAAK,KAAKI,SAAS,IAAKH,wBAAwB,IAAI,CAACE,UAAW,EAAE;MAClE,OAAOC,SAAS;IACpB;IAEA,MAAM;MAAEC,UAAU;MAAEC;IAAU,CAAE,GAAGb,cAAc,CAACK,QAAQ,EAAED,EAAE,CAAC;IAE/D,OACIU,IAAA;MAAA,mBACqBF,UAAU;MAAA,eACd,CAACF,UAAU;MACxBP,SAAS,EAAEP,UAAU,CAACE,OAAO,CAACiB,SAAS,EAAEZ,SAAS,CAAC;MACnDC,EAAE,EAAES,UAAU;MACdG,IAAI,EAAC,UAAU;MAAAC,QAAA,EAEdlB,KAAK,CAACmB,UAAU,CAACX,KAAK,CAAC,GAAGA,KAAK,CAAC;QAAEM,UAAU;QAAED;MAAU,CAAE,CAAC,GAAGL;IAAK,EAClE;EAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}